@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap');


$colors: (
    main-bg: linear-gradient(90deg, #313030 0%, #000000 100%),
    wizard-bg: #0f0e10,
    list-bg: #1e1e1e,
    text-standard: #fff,
    text-dark: #646464,
    text-error: #ef5350,
    text-blue: #28a5c8,
    text-inactive: rgba(255, 255, 255, .3),
    element-border: #0a6e87,
    element-input-bg: #323232,
    button-bg: transparent,
    button-hover-bg: #28a5c8,
    button-border: #28a5c8,
    button-inactive-border: rgba(40, 165, 200, .3),
);


@mixin button() {
    border: 2px solid;
    border-radius: 29px;
    font-weight: 400;
    font-size: 14px;
}

@mixin buttoncolor($background-color, $border-color, $text-color) {
    background-color: $background-color;
    border-color: $border-color;
    color: $text-color;
}

@mixin fixedsize($width, $height) {
    height: $height;
    width: $width;
}

@mixin input($background-color, $text-color) {
    background-color: $background-color;
    border: 0;
    border-radius: 20px;
    color: $text-color;
    height: 28px;
    padding: 0px 10px 0px 10px;
    width: 350px;
}


@function color($color-type) {
    @return map-get($colors, $color-type)
};


body {
    background: color(main-bg);
    font-family: "Roboto", sans-serif;
    color: color(text-standard);
    margin: 0;
    padding: 0;

    display: grid;
    padding-top: 50px;
    min-height: 100vh;
    min-width: 100vw;
}

button, a.button {
    text-align: center;
    @include button();
    @include buttoncolor(color(button-bg), color(button-border), color(text-standard));
    &:hover {
        @include buttoncolor(color(button-hover-bg), color(button-border), color(text-standard));
    }
    &:disabled {
        @include buttoncolor(color(button-bg), color(button-inactive-border), color(text-inactive));
    }
}

a {
    color: color(text-blue);
    text-decoration: none;
}

a.button {
    display: inline-block;
    padding: 2px 6px;
    margin: auto;
}

h1, h2 {
    text-align: center;
    margin: 0;
}

h1 {
    font-size: 28px;
    font-weight: 500;
}

h2 {
    font-size: 19px;
    font-weight: 400;
}

p {
    margin: auto;
    text-align: center;
    max-width: 300px;
    font-size: 16px;
    font-weight: 300;
    line-height: 21px;
}

p.warning {
    font-size: 18px;
    font-weight: 400;
    margin: 2em auto;
    padding-bottom: 1em;
}

p.disclaimer {
    font-size: 14px;
    font-weight: 300;
}

input {
    @include input(color(element-input-bg), color(text-blue));
}

span.error {
    color: color(text-error);
    justify-self: center;
    font-size: 12px;
}

section.content {
    background-color: color(wizard-bg);
    width: 620px;
    justify-self: center;
    display: inline-grid;

    & > div.container {
        display: grid;
        justify-content: center;
        align-items: center;
        justify-self: center;
    }
}

div {
    justify-self: center;
}

div.prompt button {
    @include fixedsize(225px, 40px);
}

div.form-entry input {
    display: block;
}

ul.available-configurations {
    border-top: solid 1.5px color(element-border);
    list-style-type: none;
    padding-inline-start: 0;
    max-height: 210px;
    overflow: auto;

    li {
        height: 70px;
        margin-bottom: 2px;
        background-color: color(list-bg);
        display: grid;
        grid-template: "account account account button" auto
                                                        "network balance . button" auto;

        span.account, span.network {
            padding-left: 20px;
        }

        span.network, span.balance {
            text-transform: capitalize;
            color: color(text-dark);
        }

        span.account {
            grid-area: account;
            align-self: end;
            font-weight: 500;
        }

        span.network {
            align-self: start;
            grid-area: network;

        }

        span.balance {
            grid-area: balance;
        }

        button, a.button {
            align-self: center;
            @include fixedsize(100px, 33px);
            grid-area: button;
            line-height: 33px;
        }
    }
}

#intro {
    p.warning {
        max-width: 80%;
    }

    a.button {
        display: block;
        @include fixedsize(100px, 2em);
        line-height: 2em;
    }
}

#configuration-launcher {
    width: 100%;
}

#configuration-setup {
    display: grid;
    grid-template-rows: 50px 120px auto;

    div.prompt {
        display: grid;
        grid-template-rows: 40px 80px auto auto 60px;
        min-height: 8em;

    }

    p.disclaimer {
        max-width: 100%;
        margin-bottom: 2em;
    }

    button {
        justify-self: center;
    }
}

#welcome-screen {
    display: grid;
    grid-template-rows: auto auto auto auto;

    .heading-wrapper {
        display: flex;
        flex-direction: column;
        .description {
            color: color(text-standard);
            align-self: center;
            flex: 0 0 110px;
            font-weight: 300;
            line-height: 21px;
            text-align: center;
            width: 300px;
        }
        .description a {
            color: color(text-blue);
            text-decoration: none;
        }
    }

    .configuration-files-list {
        border-top: solid 1.5px color(element-border);
        max-height: 210px;
        overflow: auto;

        .configuration-files-wrapper {
            background-color: color(list-bg);
            display: grid;
            grid-template-areas:
                "account-address account-address account-address account-address launch-configuration-button"
                    "network account-balance account-balance account-balance launch-configuration-button";
            grid-template-columns: 130px 1fr 1fr 1fr 1fr;
            grid-template-rows: repeat(2, 35px);
            margin-bottom: 2px;

            .account-address {
                color: color(text-standard);
                align-self: end;
                grid-area: account-address;
                font-weight: 500;
                padding-left: 20px;
            }
            .network {
                color: color(text-dark);
                align-self: start;
                grid-area: network;
                font-weight: 400;
                padding-left: 20px;
            }
            .account-balance {
                color: color(text-dark);
                align-self: flex-start;
                grid-area: account-balance;
                font-weight: 400;
            }
            .launch-configuration {
                align-self: center;
                grid-area: launch-configuration-button;
                padding-right: 20px;
                text-align: center;
                button {
                    @include fixedsize(100px, 33px);

                    &:hover {
                        @include buttoncolor(color(button-hover-bg), color(button-border), color(text-standard));
                    }
                }


            }
        }
    }

    .new-configuration-wrapper {
        display: grid;
        grid-template-areas:
            "input-label input-label input-label input-label"
                "client client client network-select"
                "pfs-monitoring pfs-monitoring-description pfs-monitoring-description pfs-monitoring-description"
                "setup-error setup-error setup-error setup-error"
                "disclaimer disclaimer disclaimer disclaimer"
                "new-configuration new-configuration new-configuration new-configuration";
        grid-template-columns: repeat(4, auto);
        grid-template-rows: 80px 40px 40px 30px auto 80px;

        .input-label {
            color: color(text-standard);
            align-self: center;
            grid-area: input-label;
            text-align: center;
        }
        .client {
            grid-area: client;
            padding-left: 60px;
            input {
                @include input(color(element-input-bg), color(text-blue));
            }
        }
    }
}


#launcher-screen {
    display: grid;
    grid-template-rows: auto auto;

    .spinner-wrapper {
        display: grid;
        justify-items: center;
        padding-top: 100px;

        .spinner {
            align-self: center;
            animation: .8s spin infinite;
            border: 4px solid color(element-input-bg);
            border-radius: 50%;
            border-bottom-color: color(element-border);
            border-right-color: color(element-border);
            border-top-color: color(element-border);
            height: 100px;
            width: 100px;
        }
        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
    }

    .messages {
        color: color(text-standard);
        line-height: 28px;
        list-style-type: none;
        margin: 0;
        padding: 30px 0px 100px 0px;
        text-align: center;
    }
}
