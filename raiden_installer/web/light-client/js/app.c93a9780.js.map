{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/filters.ts","webpack:///./src/mixins/navigation-mixin.ts","webpack:///./src/components/ActionButton.vue?ae2f","webpack:///./src/assets/done.svg","webpack:///./src/components/Tokens.vue?46e9","webpack:///./src/components/AppHeader.vue?5baf","webpack:///./src/locales sync [A-Za-z0-9-_,\\s]+\\.json$/","webpack:///./src/route-names.ts","webpack:///./src/App.vue?ff7a","webpack:///./src/assets/back_arrow.svg","webpack:///./src/components/ListHeader.vue?248d","webpack:///./src/components/ActionButton.vue?7797","webpack:///./src/components/ActionButton.vue","webpack:///./src/components/ActionButton.vue?574f","webpack:///./src/components/ActionButton.vue?547b","webpack:///./src/mixins/blockie-mixin.ts","webpack:///./src/components/ConfirmationDialog.vue?185a","webpack:///./src/model/types.ts","webpack:///./src/components/NoAccessMessage.vue?7e04","webpack:///./src/components/Stepper.vue?1a7c","webpack:///./src/assets/copy_icon.svg","webpack:///./src/assets/logo.svg","webpack:///./src/components/Stepper.vue?ed61","webpack:///./src/components/Stepper.vue","webpack:///./src/components/Stepper.vue?04e6","webpack:///./src/components/Stepper.vue?e0bd","webpack:///./src/utils/balance-utils.ts","webpack:///./src/components/SplashScreen.vue?1309","webpack:///./src/App.vue?8707","webpack:///./src/components/SplashScreen.vue?34f2","webpack:///./src/components/NoAccessMessage.vue?28a3","webpack:///./src/components/NoAccessMessage.vue","webpack:///./src/components/NoAccessMessage.vue?cd93","webpack:///./src/components/NoAccessMessage.vue?71ea","webpack:///./src/components/SplashScreen.vue","webpack:///./src/components/SplashScreen.vue?10ae","webpack:///./src/components/SplashScreen.vue?1ffb","webpack:///./src/components/AppHeader.vue?90d1","webpack:///./src/components/AppHeader.vue","webpack:///./src/components/AppHeader.vue?1bd0","webpack:///./src/components/AppHeader.vue?4bd4","webpack:///./src/App.vue","webpack:///./src/App.vue?2594","webpack:///./src/App.vue?4f7e","webpack:///./src/plugins/class-component.hooks.ts","webpack:///./src/views/Home.vue?767d","webpack:///./src/components/AppCore.vue?ad4c","webpack:///./src/components/Tokens.vue?fd53","webpack:///./src/components/ConfirmationDialog.vue?cd02","webpack:///./src/components/ConfirmationDialog.vue","webpack:///./src/components/ConfirmationDialog.vue?800c","webpack:///./src/components/ConfirmationDialog.vue?1a16","webpack:///./src/components/Tokens.vue","webpack:///./src/components/Tokens.vue?b132","webpack:///./src/components/Tokens.vue?8375","webpack:///./src/components/AppCore.vue","webpack:///./src/components/AppCore.vue?851c","webpack:///./src/components/AppCore.vue?48f8","webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?54ed","webpack:///./src/views/Home.vue?2908","webpack:///./src/store.ts","webpack:///./src/router.ts","webpack:///./src/class-component-hooks.ts","webpack:///./src/plugins/raiden.ts","webpack:///./src/services/identicon-cache.ts","webpack:///./src/plugins/identicon-plugin.ts","webpack:///./src/i18n.ts","webpack:///./src/plugins/vuetify.ts","webpack:///./src/main.ts","webpack:///./src/components/ListHeader.vue?4df2","webpack:///./src/components/ListHeader.vue","webpack:///./src/components/ListHeader.vue?ec8b","webpack:///./src/components/ListHeader.vue?0972","webpack:///./src/services/config-provider.ts","webpack:///./src/services/raiden-service.ts","webpack:///./src/services/web3-provider.ts","webpack:///../../src/utils/types.ts","webpack:///../../src/utils/data.ts","webpack:///../../src/channels/types.ts","webpack:///../../src/channels/state.ts","webpack:///../../src/messages/types.ts","webpack:///../../src/transport/state.ts","webpack:///../../src/transfers/state.ts","webpack:///../src/state.ts","webpack:///../src/constants.ts","webpack:///../../src/utils/redux.ts","webpack:///../../src/channels/actions.ts","webpack:///../../src/channels/reducer.ts","webpack:///../../src/transport/actions.ts","webpack:///../../src/transport/reducer.ts","webpack:///../../src/transfers/utils.ts","webpack:///../../src/messages/utils.ts","webpack:///../../src/transfers/actions.ts","webpack:///../../src/transfers/reducer.ts","webpack:///../src/reducer.ts","webpack:///../../src/messages/actions.ts","webpack:///../src/actions.ts","webpack:///../../src/utils/ethers.ts","webpack:///../../src/channels/epics.ts","webpack:///../../src/utils/matrix.ts","webpack:///../../src/utils/lru.ts","webpack:///../../src/transport/utils.ts","webpack:///../../src/transport/epics.ts","webpack:///../../src/utils/rxjs.ts","webpack:///../../src/transfers/epics.ts","webpack:///../src/epics.ts","webpack:///../src/config.ts","webpack:///../src/raiden.ts","webpack:///../src/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","app","jsonpScriptSrc","p","chunk-29cd224d","chunk-62d9172b","chunk-1ded731d","chunk-36408285","chunk-8f2e765c","chunk-921c0406","chunk-8a9548fc","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","clearTimeout","chunk","errorType","realSrc","error","undefined","setTimeout","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","Filters","width","arguments","separator","substWidth","Math","floor","substr","_decimals","parseFloat","toFixed","toLocaleUpperCase","amount","decimals","units","_utils_balance_utils__WEBPACK_IMPORTED_MODULE_3__","toUnits","deposit","splitted","lodash_split__WEBPACK_IMPORTED_MODULE_4___default","indexOf","lodash_capitalize__WEBPACK_IMPORTED_MODULE_5___default","vue__WEBPACK_IMPORTED_MODULE_2__","filter","truncate","upper","displayFormat","capitalizeFirst","NavigationMixin","_Vue","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","token","$router","_route_names__WEBPACK_IMPORTED_MODULE_8__","SELECT_HUB","params","HOME","partner","OPEN_CHANNEL","PAYMENT","SELECT_TOKEN","$route","CHANNELS","navigateToHome","navigateToTokenSelect","navigateToSelectHub","vue_property_decorator__WEBPACK_IMPORTED_MODULE_7__","tslib__WEBPACK_IMPORTED_MODULE_6__","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ActionButton_vue_vue_type_style_index_0_id_7666ae40_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ActionButton_vue_vue_type_style_index_0_id_7666ae40_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Tokens_vue_vue_type_style_index_0_id_1970fd66_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Tokens_vue_vue_type_style_index_0_id_1970fd66_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppHeader_vue_vue_type_style_index_0_id_1fb34092_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppHeader_vue_vue_type_style_index_0_id_1fb34092_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","map","./en.json","webpackContext","req","id","webpackContextResolve","keys","RouteNames","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_72ad4681_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_72ad4681_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ListHeader_vue_vue_type_style_index_0_id_59800fee_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ListHeader_vue_vue_type_style_index_0_id_59800fee_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","align-center","justify-center","xs10","disabled","enabled","depressed","large","on","click","$event","_v","_s","text","staticRenderFns","ActionButtonvue_type_script_lang_ts_ActionButton","ActionButton","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","vue_property_decorator","tslib_es6","required","Boolean","ActionButtonvue_type_script_lang_ts_","components_ActionButtonvue_type_script_lang_ts_","component","componentNormalizer","installComponents_default","VBtn","VFlex","VLayout","BlockieMixin","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","address","$identicon","getIdenticon","vue_property_decorator__WEBPACK_IMPORTED_MODULE_6__","tslib__WEBPACK_IMPORTED_MODULE_5__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ConfirmationDialog_vue_vue_type_style_index_0_id_013b36dc_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ConfirmationDialog_vue_vue_type_style_index_0_id_013b36dc_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","emptyDescription","emptyTokenModel","TokenPlaceholder","PlaceHolderNetwork","DeniedReason","ethers_constants__WEBPACK_IMPORTED_MODULE_0__","label","title","description","symbol","opening","open","closing","closed","settling","settled","balance","chainId","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_NoAccessMessage_vue_vue_type_style_index_0_id_6b8163f4_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_NoAccessMessage_vue_vue_type_style_index_0_id_6b8163f4_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Stepper_vue_vue_type_style_index_0_id_30108802_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Stepper_vue_vue_type_style_index_0_id_30108802_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_l","step","index","class","stepper__card__steps__step--active","current","done","doneStep","steps","size","indeterminate","_e","Steppervue_type_script_lang_ts_Stepper","Stepper","default","Steppervue_type_script_lang_ts_","components_Steppervue_type_script_lang_ts_","VImg","VProgressCircular","BalanceUtils","wei","ethers__WEBPACK_IMPORTED_MODULE_3__","formatEther","formatUnits","depositTokens","decimalPart","split","parseUnits","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SplashScreen_vue_vue_type_style_index_0_id_65cd354f_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SplashScreen_vue_vue_type_style_index_0_id_65cd354f_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_72ad4681_scoped_true_render","dark","connect","fluid","fill-height","$t","SplashScreenvue_type_template_id_65cd354f_scoped_true_render","xs8","md6","lg4","min-width","aspect-ratio","contain","reason","accessDenied","SplashScreenvue_type_template_id_65cd354f_scoped_true_staticRenderFns","NoAccessMessagevue_type_template_id_6b8163f4_scoped_true_render","color","icon","NoAccessMessagevue_type_template_id_6b8163f4_scoped_true_staticRenderFns","NoAccessMessagevue_type_script_lang_ts_NoAccessMessage","NoAccessMessage","types","UNSUPPORTED_NETWORK","INITIALIZATION_FAILED","NoAccessMessagevue_type_script_lang_ts_","components_NoAccessMessagevue_type_script_lang_ts_","components_NoAccessMessage","VAlert","SplashScreenvue_type_script_lang_ts_Loading","Loading","_this","web3_provider","injectedWeb3Available","components","computed","vuex_esm","SplashScreenvue_type_script_lang_ts_","components_SplashScreenvue_type_script_lang_ts_","SplashScreen_component","SplashScreen","VContainer","AppHeadervue_type_template_id_1fb34092_scoped_true_render","loading","defaultAccount","column","xs12","height","onBackClicked","max-width","meta","network","$blockie","xs6","bottom","scopedSlots","_u","fn","ref","_g","_f","activator","model","callback","$$v","copied","expression","copy","accountBalance","directives","rawName","domProps","input","composing","AppHeadervue_type_template_id_1fb34092_scoped_true_staticRenderFns","AppHeadervue_type_script_lang_ts_AppHeader","_Mixins","AppHeader","_this2","copyArea","$refs","focus","select","execCommand","route_names","blockie_mixin","navigation_mixin","_objectSpread","AppHeadervue_type_script_lang_ts_","components_AppHeadervue_type_script_lang_ts_","AppHeader_component","components_AppHeader","VSpacer","VTooltip","Appvue_type_script_lang_ts_App","App","initialized","_connect","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","$store","commit","$raiden","fetchTokens","stop","disconnect","UNDEFINED","Appvue_type_script_lang_ts_","src_Appvue_type_script_lang_ts_","App_component","src_App","VApp","VContent","vue_class_component_esm","registerHooks","Homevue_type_template_id_5122a23d_render","Homevue_type_template_id_5122a23d_staticRenderFns","AppCorevue_type_template_id_78c5b79c_render","AppCorevue_type_template_id_78c5b79c_staticRenderFns","Tokensvue_type_template_id_1970fd66_scoped_true_render","justify-space-between","header","expand","no-action","alt","proxy","to","leaveNetwork","display","leaveModalVisible","confirm","leaveConfirmed","cancel","leaveCancelled","path","place","selectedToken","Tokensvue_type_template_id_1970fd66_scoped_true_staticRenderFns","ConfirmationDialogvue_type_template_id_013b36dc_scoped_true_render","persistent","_t","ConfirmationDialogvue_type_template_id_013b36dc_scoped_true_staticRenderFns","ConfirmationDialogvue_type_script_lang_ts_ConfirmationDialog","ConfirmationDialog","$emit","ConfirmationDialogvue_type_script_lang_ts_","components_ConfirmationDialogvue_type_script_lang_ts_","ConfirmationDialog_component","components_ConfirmationDialog","VCard","VCardActions","components_VCard","VCardText","VCardTitle","VDialog","Tokensvue_type_script_lang_ts_Tokens","Tokens","_leaveConfirmed","dismissModal","ListHeader","Tokensvue_type_script_lang_ts_","components_Tokensvue_type_script_lang_ts_","Tokens_component","components_Tokens","VList","VListGroup","VListItem","VListItemAvatar","VListItemContent","components_VList","VListItemSubtitle","VListItemTitle","AppCorevue_type_script_lang_ts_AppCore","AppCore","AppCorevue_type_script_lang_ts_","components_AppCorevue_type_script_lang_ts_","AppCore_component","components_AppCore","Homevue_type_script_lang_ts_Home","Home","Homevue_type_script_lang_ts_","views_Homevue_type_script_lang_ts_","Home_component","views_Home","vue_runtime_esm","use","_defaultState","providerDetected","channels","tokens","defaultState","clone_default","store","state","mutations","noProvider","account","_account","loadComplete","_balance","updateChannels","updateTokens","assign","_network","reset","actions","getters","reducer","acc","channel","map_default","flatMap_default","tokenChannels","reduce_default","tokenInfo","allTokens","tokenAddress","concat","channelWithBiggestCapacity","_","openChannels","dist","orderBy_default","src_store","Store","vue_router_esm","checkTokenNetworkRoute","_ref","includes","router_tokenNetworkGuard","_ref2","router","base","routes","redirect","beforeEnter","src_router","RaidenPlugin","Vue","options","raiden_service","identicon_cache_IdenticonCache","IdenticonCache","cache","cached","generated","main_default","IdenticonPlugin","loadLocaleMessages","locales","messages","forEach","matched","match","locale","vue_i18n_esm","i18n","fallbackLocale","framework","vuetify","icons","iconfont","theme","themes","primary","secondary","config","productionTip","created","sessionStorage","h","$mount","ListHeadervue_type_script_lang_ts_ListHeader","ListHeadervue_type_script_lang_ts_","components_ListHeadervue_type_script_lang_ts_","config_provider_ConfigProvider","ConfigProvider","_fetch","fetch","_x","toString","url","sent","json","abrupt","_x2","raiden_service_RaidenService","RaidenService","_raiden","cachedTokens","raiden","getTokenBalance","balance_utils","provider","localStorage","raiden_service_RaidenInitializationFailed","_context2","t0","resolveName","raiden_service_EnsResolveFailed","_context3","raidenPackageConfigUrl","createRaiden","PRIVATE_KEY","getAccount","getBalance","setupEventListeners","channels$","subscribe","_context4","t4","deniedReason","message","NO_ACCOUNT","events$","pipe","operators","_callee5","_context5","updateTokenBalances","toEth","getTokenInfo","_context8","progress","progressUpdater","total","openChannel","raiden_service_ChannelOpenFailed","_context9","gt","constants","failed","closeChannel","raiden_service_ChannelCloseFailed","_context11","depositChannel","raiden_service_ChannelDepositFailed","_context12","settleChannel","raiden_service_ChannelSettleFailed","_context13","updateEntries","getTokenList","getToken","retrievedToken","getAvailability","transfer","secretHash","transfers$","secrethash","completed","toPromise","raiden_service_TransferFailed","_context15","_Error","ChannelSettleFailed","wrapNativeSuper","_Error2","ChannelCloseFailed","_Error3","ChannelOpenFailed","_Error4","ChannelDepositFailed","_Error5","EnsResolveFailed","_Error6","TransferFailed","_Error7","RaidenInitializationFailed","Web3Provider","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_provider","_Users_thomas_Projects_light_client_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","ethereum","INFURA_ENDPOINT","enable","web3","currentProvider","isMetaMask","autoRefreshOnNetworkChange","isStringifiable","u","isBigNumber","BigNumberC","es6","utils","a","lossless_json","types_EnumType","_t$Type","EnumType","values","enumObject","some","v","is","_tag","HexString","lodash","UInt","max","pow","gte","lt","Signature","Hash","Secret","PrivateKey","Address","Timed","codec","timed","Date","now","encode","hex","bytes","str","isLosslessNumber","losslessParse","objectDestructuringEmpty","valueOf","ChannelState","Lock","expiration","SignedBalanceProof","tokenNetworkAddress","channelId","nonce","transferredAmount","lockedAmount","locksroot","messageHash","signature","sender","MessageType","ChannelEnd","locks","balanceProof","withdraw","Channel","own","settleTimeout","openBlock","isFirstParticipant","settleable","closeBlock","Channels","RaidenMatrixSetup","userId","accessToken","deviceId","displayName","RaidenSentTransferStatus","MessageTypeC","Message","RetrieableMessage","message_identifier","Delivered","DELIVERED","delivered_message_identifier","Processed","PROCESSED","SecretRequest","SECRET_REQUEST","payment_identifier","SecretReveal","SECRET_REVEAL","secret","EnvelopeMessage","chain_id","token_network_address","channel_identifier","transferred_amount","locked_amount","RouteMetadata","route","Metadata","LockedTransferBase","recipient","lock","initiator","fee","metadata","LockedTransfer","LOCKED_TRANSFER","RefundTransfer","REFUND_TRANSFER","Unlock","UNLOCK","LockExpired","LOCK_EXPIRED","ToDevice","TO_DEVICE","WithdrawBase","participant","total_withdraw","WithdrawRequest","WITHDRAW_REQUEST","WithdrawConfirmation","WITHDRAW_CONFIRMATION","WithdrawExpired","WITHDRAW_EXPIRED","Signed","SignedMessageCodecs","_SignedMessageCodecs","SentTransfer","transferProcessed","refund","channelClosed","secretReveal","unlock","lockExpired","unlockProcessed","lockExpiredProcessed","SentTransfers","RaidenState","registry","blockNumber","transport","matrix","server","setup","rooms","secrets","registerBlock","encodeRaidenState","decodeRaidenState","decode","Either","ThrowReporter","report","right","ShutdownReason","state_initialState","SignatureZero","partialCombineReducers","reducers","initialState","action","subState","newSubState","newBlock","typesafe_actions_umd_production","tokenMonitored","channelOpen","channelOpened","channelOpenFailed","payload","channelMonitored","channelDeposit","channelDeposited","channelDepositFailed","channelWithdrawn","channelClose","channelCloseFailed","channelSettleable","channelSettle","channelSettled","channelSettleFailed","reducer_blockNumber","fp","tokenNetwork","_path","_channel","_path2","_path3","_channel2","totalDeposit","_path4","_channel3","totalWithdraw","_path5","_channel4","_path6","_channel5","_path7","_channel6","_path8","_channel7","_path9","_channel8","channelsReducer","matrixSetup","matrixRequestMonitorPresence","matrixPresenceUpdate","available","ts","matrixRequestMonitorPresenceFailed","matrixRoom","matrixRoomLeave","roomId","toConsumableArray","room","transportReducer","getLocksroot","encoded","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","return","getSecrethash","makeSecret","makePaymentId","makeMessageId","raidenSentTransfer","expired","unlocked","expiring","unlocking","revealed","refunded","received","pending","slicedToArray","status","changedAt","success","paymentId","toNumber","expirationBlock","startedAt","MessageTypeId","CMDIDs","_CMDIDs","createMetadataHash","routeHashes","createBalanceHash","isZero","createMessageHash","packed","packMessage","balanceHash","BALANCE_PROOF","WITHDRAW","isSigned","getMessageSigner","getBalanceProofFromEnvelopeMessage","encodeJsonMessage","decodeJsonMessage","parsed","decoded","signMessage","signer","actions_transfer","transferSigned","transferSecret","transferSecretRequest","transferSecretReveal","transferUnlock","transferUnlocked","transferUnlockProcessed","transferExpire","transferExpired","transferExpireFailed","transferExpireProcessed","transferRefunded","transferred","transferFailed","transferClear","withdrawReceiveRequest","withdrawSendConfirmation","transfersReducer","channelPath","eq","add","sentTransfer","_secrethash","_transfer","_lock","_channelPath","_locks","_locksroot","sub","_sentTransfer","_secrethash2","_transfer2","_lock2","_channelPath2","_locks2","_locksroot2","_sentTransfer2","txHash","_channelPath3","raidenReducers","reducer_raidenReducer","reduce","messageSend","messageSent","messageReceived","raidenShutdown","RaidenActions","actions_namespaceObject","transport_actions_namespaceObject","messages_actions_namespaceObject","transfers_actions_namespaceObject","RaidenEvents","fromEthersEvent","resultSelector","fromEventPattern","handler","removeListener","getEventsStream","contract","filters","fromBlock$","lastSeenBlock$","pastEvents$","empty","combineLatest","defer","of","first","switchMap","fromBlock","toBlock","getLogs","mergeMap","logs","from","log","interface","parseLog","args","Array","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","newEvents$","_len","_key","merge","getNetwork","networks","parseInt","send","patchSignSend","origSend","method","catch","epics_initNewBlockEpic","_ref3","getBlockNumber","epics_initMonitorRegistryEpic","action$","state$","_ref4","registryContract","contractsInfo","publishReplay","withLatestFrom","_ref5","_ref6","TokenNetworkCreated","TokenNetworkRegistry","block_number","_ref7","_ref8","_ref8$","entries","_ref9","_ref10","epics_initMonitorChannelsEpic","_ref11","_i","_Object$entries","_Object$entries$_i","obj","_i2","_Object$entries2","_Object$entries2$_i","epics_initMonitorProviderEpic","_ref12","_ref13","_ref14","listAccounts","accounts","isProviderAccount","interval","pollingInterval","ACCOUNT_CHANGED","curNetwork","NETWORK_CHANGED","epics_tokenMonitoredEpic","_ref15","getTokenNetworkContract","blockNumber$","groupBy","grouped$","exhaustMap","tokenNetworkContract","ChannelOpened","_ref16","_ref17","p1","p2","_ref18","_ref19","epics_channelMonitoredEpic","_ref20","depositFilter","ChannelNewDeposit","withdrawFilter","ChannelWithdraw","closedFilter","ChannelClosed","settledFilter","ChannelSettled","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","settleBlock","takeWhile","epics_channelOpenEpic","_ref29","config$","_ref30","_ref31","channelState","functions","tx","epics_awaiter","epics_this","_callee2","wait","t1","receipt","_ref32","hash","mergeMapTo","catchError","epics_channelOpenedEpic","_ref33","_ref34","_ref35","_ref36","epics_channelDepositEpic","_ref37","getTokenContract","_ref38","_ref39","tn","tokenContract","_error","approve","tap","_callee3","_ref40","_ref41","_ref42","setTotalDeposit","gasLimit","_callee4","_ref43","epics_channelCloseEpic","_ref44","_ref45","_ref46","additionalHash","nonClosingSignature","closingMessage","closingSignature","_ref47","epics_channelSettleEpic","_ref48","_ref49","_ref50","zeroBalanceProof","part1","part2","_ref51","_callee6","_context6","_ref52","epics_channelSettleableEpic","_callee7","_ref53","_ref54","_context7","t2","t3","settleableBlock","yamlListToArray","yml","reg","results","exec","matrixRTT","start","browser_ponyfill_default","resp","NaN","rtt","getServerName","getUserPresence","lib_utils","$userId","_http","authedRequest","lru_LruCache","LruCache","Map","entry","delete","set","keyToDelete","getPresences$","scan","presences","update","startWith","share","AVAILABLE","userRe","epics_initMatrixEpic","matrix$","_ref4$","matrixServer","matrixServerLookup","response","ok","throwError","toArray","rtts","isNaN","JSON","stringify","browser_index","baseUrl","serverName","_matrix","userName","toLowerCase","password","loginWithPassword","register","device_id","opts","access_token","credentials","user_id","signedUserId","setDisplayName","joinRoom","mapTo","complete","epics_matrixStartEpic","startClient","initialSyncLimit","ignoreElements","epics_matrixShutdownEpic","finalize","stopClient","epics_matrixMonitorPresenceEpic","_ref17$","validUsers","getUsers","_user2","presence","recovered","user","searchUserDirectory","term","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_user","display_name","userIds","epics_matrixPresenceUpdateEpic","fromEvent","getType","getUser","getSender","peerAddress","toMonitor","Set","has","_ref28$","displayName$","getProfileInfo","profile","displayname","lastPresenceTs","epics_matrixCreateRoomEpic","multicast","ReplaySubject","presencesStateReplay$","concatMap","take","createRoom","visibility","invite","room_id","epics_matrixInviteEpic","_ref40$","getRoom","member","getMember","epics_matrixHandleInvitesEpic","getUserId","membership","_ref45$","cachedPresence","senderPresence$","takeUntil","timer","senderPresence","syncRoom","epics_matrixLeaveExcessRoomsEpic","_ref49$","THRESHOLD","leave","epics_matrixLeaveUnknownRoomsEpic","delay","_ref54$","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_roomId","_ref55","_ref56","_ref56$","epics_matrixCleanLeftRoomsEpic","_ref57","_ref58","_ref59","_ref60","_ref61","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","finish","epics_matrixMessageSendEpic","_ref62","_ref63","_ref64","_ref65","_ref66","_ref67","_ref68","distinctUntilChanged","_ref69","_ref70","_ref70$","_ref71","_ref72","_ref73","_ref73$","_ref74","_ref75","body","sendEvent","msgtype","epics_matrixMessageReceivedEpic","_ref76","_ref77","content","_ref78","_ref79","_ref80","_ref81","_ref82","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","line","warn","origin_server_ts","epics_matrixMessageReceivedUpdateRoomEpic","_ref83","_ref84","_ref85","_ref86","epics_matrixMonitorChannelPresenceEpic","epics_deliveredEpic","_ref87","_ref88","msgId","delivered","signed","put","splitCombined","tuple$","nextNonce","makeAndSignTransfer","presences$","availableRouteCapacities","capacity","debug","sortedRecipients","sort","b","capA","capB","revealTimeout","makeAndSignUnlock","signed$","lte","makeAndSignLockExpired","makeAndSignWithdrawConfirmation","confirmation","epics_transferGenerateAndSignEnvelopeMessageEpic","deps","_splitCombined","_splitCombined2","withdrawCache","epics_transferSignedRetryMessageEpic","sendOnceAndWaitSent$","repeatWhen","completed$","epics_transferUnlockedRetryMessageEpic","epics_transferExpiredRetryMessageEpic","epics_transferAutoExpireEpic","requests$","_loop","requestAndWait$","epics_initQueuePendingEnvelopeMessagesEpic","_i3","_Object$entries3","_Object$entries3$_i","epics_transferProcessedReceivedEpic","_i4","_Object$entries4","_Object$entries4$_i","epics_transferSecretRequestedEpic","epics_transferSecretRevealEpic","reveal$","epics_transferSecretRevealedEpic","epics_transferUnlockProcessedReceivedEpic","_callee8","_i5","_Object$entries5","_Object$entries5$_i","epics_transferExpireProcessedEpic","_callee9","_i6","_Object$entries6","_Object$entries6$_i","epics_transferChannelClosedEpic","_callee10","_i7","_Object$entries7","_Object$entries7$_i","_context10","epics_transferRefundedEpic","_callee11","_state$sent$secrethas","epics_transferReceivedReplyProcessedEpic","processed","epics_withdrawRequestReceivedEpic","_callee12","epics_withdrawSendConfirmationEpic","RaidenEpics","epics_namespaceObject","transport_epics_namespaceObject","transfers_epics_namespaceObject","epics_raidenRootEpic","shutdownNotification","limitedAction$","limitedState$","stateOutput$","actionOutput$","epic","defaultConfig","raiden_Raiden","Raiden","resetEventsBlock","BehaviorSubject","Subject","partner2channel","partner2raidenChannel","partnerTotal","ownTotal","ownDeposit","partnerDeposit","changed","raiden_awaiter","totalSupply","middlewares","AsyncSubject","ethers_min","TokenNetwork","HumanStandardToken","epicMiddleware","createEpicMiddleware","dependencies","redux","run","dispatch","STOP","newConfig","currentConfig","balanceOf","getState","connection","storageOrState","contracts","isStorage","getItem","providers","deployment_rinkeby","deployment_ropsten","deployment_kovan","deployment_goerli","isSigner","wallet","getSigner","getAddress","loadedState","onState","onStateComplete","parse","loaded","debouncedState","setItem","maxWait","flush","raidenConfig"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,EAAgBP,IAClBK,EAASG,KAAKD,EAAgBP,GAAS,IAExCO,EAAgBP,GAAW,EAE5B,IAAID,KAAYG,EACZO,OAAOC,UAAUC,eAAeC,KAAKV,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBR,KAAKS,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3Bf,EAAgBgB,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAGtE,OAAOD,EAIR,IAAIQ,EAAmB,GAGnBC,EAAqB,CACxBC,IAAO,GAMJtB,EAAkB,CACrBsB,IAAO,GAGJb,EAAkB,GAGtB,SAASc,EAAe9B,GACvB,OAAOyB,EAAoBM,EAAI,OAAS,GAAG/B,IAAUA,GAAW,IAAM,CAACgC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,YAAYtC,GAAW,MAIxR,SAASyB,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAUwC,QAGnC,IAAIC,EAASb,EAAiB5B,GAAY,CACzCK,EAAGL,EACH0C,GAAG,EACHF,QAAS,IAUV,OANA1B,EAAQd,GAAUa,KAAK4B,EAAOD,QAASC,EAAQA,EAAOD,QAASd,GAG/De,EAAOC,GAAI,EAGJD,EAAOD,QAKfd,EAAoBiB,EAAI,SAAuB1C,GAC9C,IAAI2C,EAAW,GAIXC,EAAY,CAACZ,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,iBAAiB,GACjJV,EAAmB5B,GAAU2C,EAASnC,KAAKoB,EAAmB5B,IACzB,IAAhC4B,EAAmB5B,IAAkB4C,EAAU5C,IACtD2C,EAASnC,KAAKoB,EAAmB5B,GAAW,IAAI6C,QAAQ,SAASC,EAASC,GAIzE,IAHA,IAAIC,EAAO,QAAU,GAAGhD,IAAUA,GAAW,IAAM,CAACgC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,WAAWC,iBAAiB,YAAYtC,GAAW,OAChQiD,EAAWxB,EAAoBM,EAAIiB,EACnCE,EAAmBC,SAASC,qBAAqB,QAC7ChD,EAAI,EAAGA,EAAI8C,EAAiB5C,OAAQF,IAAK,CAChD,IAAIiD,EAAMH,EAAiB9C,GACvBkD,EAAWD,EAAIE,aAAa,cAAgBF,EAAIE,aAAa,QACjE,GAAe,eAAZF,EAAIG,MAAyBF,IAAaN,GAAQM,IAAaL,GAAW,OAAOH,IAErF,IAAIW,EAAoBN,SAASC,qBAAqB,SACtD,IAAQhD,EAAI,EAAGA,EAAIqD,EAAkBnD,OAAQF,IAAK,CAC7CiD,EAAMI,EAAkBrD,GACxBkD,EAAWD,EAAIE,aAAa,aAChC,GAAGD,IAAaN,GAAQM,IAAaL,EAAU,OAAOH,IAEvD,IAAIY,EAAUP,SAASQ,cAAc,QACrCD,EAAQF,IAAM,aACdE,EAAQE,KAAO,WACfF,EAAQG,OAASf,EACjBY,EAAQI,QAAU,SAASC,GAC1B,IAAIC,EAAUD,GAASA,EAAME,QAAUF,EAAME,OAAOC,KAAOjB,EACvDkB,EAAM,IAAIC,MAAM,qBAAuBpE,EAAU,cAAgBgE,EAAU,KAC/EG,EAAIE,KAAO,wBACXF,EAAIH,QAAUA,SACPpC,EAAmB5B,GAC1B0D,EAAQY,WAAWC,YAAYb,GAC/BX,EAAOoB,IAERT,EAAQV,KAAOC,EAEf,IAAIuB,EAAOrB,SAASC,qBAAqB,QAAQ,GACjDoB,EAAKC,YAAYf,KACfgB,KAAK,WACP9C,EAAmB5B,GAAW,KAMhC,IAAI2E,EAAqBpE,EAAgBP,GACzC,GAA0B,IAAvB2E,EAGF,GAAGA,EACFhC,EAASnC,KAAKmE,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAI/B,QAAQ,SAASC,EAASC,GAC3C4B,EAAqBpE,EAAgBP,GAAW,CAAC8C,EAASC,KAE3DJ,EAASnC,KAAKmE,EAAmB,GAAKC,GAGtC,IACIC,EADAC,EAAS3B,SAASQ,cAAc,UAGpCmB,EAAOC,QAAU,QACjBD,EAAOE,QAAU,IACbvD,EAAoBwD,IACvBH,EAAOI,aAAa,QAASzD,EAAoBwD,IAElDH,EAAOZ,IAAMpC,EAAe9B,GAE5B6E,EAAmB,SAAUd,GAE5Be,EAAOhB,QAAUgB,EAAOjB,OAAS,KACjCsB,aAAaH,GACb,IAAII,EAAQ7E,EAAgBP,GAC5B,GAAa,IAAVoF,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYtB,IAAyB,SAAfA,EAAMH,KAAkB,UAAYG,EAAMH,MAChE0B,EAAUvB,GAASA,EAAME,QAAUF,EAAME,OAAOC,IAChDqB,EAAQ,IAAInB,MAAM,iBAAmBpE,EAAU,cAAgBqF,EAAY,KAAOC,EAAU,KAChGC,EAAM3B,KAAOyB,EACbE,EAAMvB,QAAUsB,EAChBF,EAAM,GAAGG,GAEVhF,EAAgBP,QAAWwF,IAG7B,IAAIR,EAAUS,WAAW,WACxBZ,EAAiB,CAAEjB,KAAM,UAAWK,OAAQa,KAC1C,MACHA,EAAOhB,QAAUgB,EAAOjB,OAASgB,EACjC1B,SAASqB,KAAKC,YAAYK,GAG5B,OAAOjC,QAAQ6C,IAAI/C,IAIpBlB,EAAoBkE,EAAI9E,EAGxBY,EAAoBmE,EAAIjE,EAGxBF,EAAoBoE,EAAI,SAAStD,EAASuD,EAAMC,GAC3CtE,EAAoBuE,EAAEzD,EAASuD,IAClCrF,OAAOwF,eAAe1D,EAASuD,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEtE,EAAoB2E,EAAI,SAAS7D,GACX,qBAAX8D,QAA0BA,OAAOC,aAC1C7F,OAAOwF,eAAe1D,EAAS8D,OAAOC,YAAa,CAAEC,MAAO,WAE7D9F,OAAOwF,eAAe1D,EAAS,aAAc,CAAEgE,OAAO,KAQvD9E,EAAoB+E,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQ9E,EAAoB8E,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKlG,OAAOmG,OAAO,MAGvB,GAFAnF,EAAoB2E,EAAEO,GACtBlG,OAAOwF,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAO9E,EAAoBoE,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRlF,EAAoBsF,EAAI,SAASvE,GAChC,IAAIuD,EAASvD,GAAUA,EAAOkE,WAC7B,WAAwB,OAAOlE,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAf,EAAoBoE,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRtE,EAAoBuE,EAAI,SAASgB,EAAQC,GAAY,OAAOxG,OAAOC,UAAUC,eAAeC,KAAKoG,EAAQC,IAGzGxF,EAAoBM,EAAI,IAGxBN,EAAoByF,GAAK,SAAS/C,GAA2B,MAApBgD,QAAQ5B,MAAMpB,GAAYA,GAEnE,IAAIiD,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW5G,KAAKsG,KAAKM,GAC5CA,EAAW5G,KAAOX,EAClBuH,EAAaA,EAAWG,QACxB,IAAI,IAAInH,EAAI,EAAGA,EAAIgH,EAAW9G,OAAQF,IAAKP,EAAqBuH,EAAWhH,IAC3E,IAAIU,EAAsBwG,EAI1BtG,EAAgBR,KAAK,CAAC,EAAE,kBAEjBU,K,2MChQYsG,E,4GACHjB,GAAiC,IAAlBkB,EAAkBC,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAAF,GACvCC,EAAY,MAClB,GAAIpB,EAAMjG,QAAUmH,EAClB,OAAOlB,EAEP,IAAMqB,EAAaC,KAAKC,MAAML,EAAQ,GACtC,OACElB,EAAMwB,OAAO,EAAGH,GAChBD,EACApB,EAAMwB,OAAOxB,EAAMjG,OAASsH,K,+BAKlBrB,GAAmC,IAApByB,EAAoBN,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAAD,EAChD,OAAOO,WAAW1B,GAAO2B,QAAQF,K,4BAGtBzB,GACX,OAAKA,EAGEA,EAAM4B,oBAFJ,K,oCAKUC,EAAmBC,GACtC,IAAMC,EAAQC,EAAA,KAAaC,QAAQJ,EAAQC,GACrCI,EAAUR,WAAWK,GAC3B,GAAgB,IAAZG,EACF,MAAO,MACF,GAAIA,EAAU,KACnB,MAAO,WAEP,IAAMC,EAAWC,IAAML,EAAO,KAC9B,OAAII,EAAS,IAAMA,EAAS,GAAGpI,OAAS,EAC/BgI,EAAMP,OAAO,EAAGO,EAAMM,QAAQ,KAAO,GAErCN,I,sCAKU/B,GACrB,OAAOsC,IAAWtC,O,KAItBuC,EAAA,KAAIC,OAAO,WAAYvB,EAAQwB,UAC/BF,EAAA,KAAIC,OAAO,WAAYvB,EAAQa,UAC/BS,EAAA,KAAIC,OAAO,QAASvB,EAAQyB,OAC5BH,EAAA,KAAIC,OAAO,gBAAiBvB,EAAQ0B,eACpCJ,EAAA,KAAIC,OAAO,kBAAmBvB,EAAQ2B,kB,4vBCtDjBC,EAArB,SAAAC,GAAA,SAAAD,IAAA,OAAA3I,OAAA6I,EAAA,KAAA7I,CAAA8I,KAAAH,GAAA3I,OAAA+I,EAAA,KAAA/I,CAAA8I,KAAA9I,OAAAgJ,EAAA,KAAAhJ,CAAA2I,GAAAnI,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAiJ,EAAA,KAAAjJ,CAAA2I,EAAAC,GAAA5I,OAAAkJ,EAAA,KAAAlJ,CAAA2I,EAAA,EAAAvC,IAAA,sBAAAN,MAAA,SACsBqD,GAClBL,KAAKM,QAAQrJ,KAAK,CAChBsF,KAAMgE,EAAA,KAAWC,WACjBC,OAAQ,CACNJ,MAAOA,OALf,CAAA/C,IAAA,iBAAAN,MAAA,WAWIgD,KAAKM,QAAQrJ,KAAK,CAChBsF,KAAMgE,EAAA,KAAWG,SAZvB,CAAApD,IAAA,wBAAAN,MAAA,SAgBwBqD,EAAeM,GACnCX,KAAKM,QAAQrJ,KAAK,CAChBsF,KAAMgE,EAAA,KAAWK,aACjBH,OAAQ,CACNJ,MAAOA,EACPM,QAASA,OArBjB,CAAArD,IAAA,gCAAAN,MAAA,SA0BgCqD,GAC5BL,KAAKM,QAAQrJ,KAAK,CAChBsF,KAAMgE,EAAA,KAAWM,QACjBJ,OAAQ,CAAEJ,MAAOA,OA7BvB,CAAA/C,IAAA,wBAAAN,MAAA,WAkCIgD,KAAKM,QAAQrJ,KAAK,CAChBsF,KAAMgE,EAAA,KAAWO,iBAnCvB,CAAAxD,IAAA,gBAAAN,MAAA,WAwCI,OAAQgD,KAAKe,OAAOxE,MAClB,KAAKgE,EAAA,KAAWM,QAChB,KAAKN,EAAA,KAAWS,SAChB,KAAKT,EAAA,KAAWO,aACdd,KAAKiB,iBACL,MACF,KAAKV,EAAA,KAAWC,WACdR,KAAKkB,wBACL,MACF,KAAKX,EAAA,KAAWK,aACdZ,KAAKmB,oBAAoBnB,KAAKe,OAAON,OAAOJ,OAC5C,WAnDRR,EAAA,CAA6CuB,EAAA,MAAxBvB,EAAewB,EAAA,MADnCD,EAAA,MACoBvB,GAAAyB,EAAA,Q,oCCJrB,IAAAC,EAAArJ,EAAA,QAAAsJ,EAAAtJ,EAAAsF,EAAA+D,GAAwlBC,EAAG,G,2FCA3lBvI,EAAOD,QAAUd,EAAAM,EAA0B,yB,6rFCA3C,IAAAiJ,EAAAvJ,EAAA,QAAAwJ,EAAAxJ,EAAAsF,EAAAiE,GAAklBC,EAAG,G,oCCArlB,IAAAC,EAAAzJ,EAAA,QAAA0J,EAAA1J,EAAAsF,EAAAmE,GAAqlBC,EAAG,G,yCCAxlB,IAAIC,EAAM,CACTC,YAAa,QAId,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAO9J,EAAoB+J,GAE5B,SAASC,EAAsBF,GAC9B,IAAIC,EAAKJ,EAAIG,GACb,KAAKC,EAAK,GAAI,CACb,IAAI9I,EAAI,IAAI0B,MAAM,uBAAyBmH,EAAM,KAEjD,MADA7I,EAAE2B,KAAO,mBACH3B,EAEP,OAAO8I,EAERF,EAAeI,KAAO,WACrB,OAAOjL,OAAOiL,KAAKN,IAEpBE,EAAexI,QAAU2I,EACzBjJ,EAAOD,QAAU+I,EACjBA,EAAeE,GAAK,Q,oCCvBpB,IAAYG,EAAZlK,EAAAoE,EAAAgF,EAAA,sBAAAc,IAAA,SAAYA,GACVA,EAAA,8BACAA,EAAA,+BACAA,EAAA,2BACAA,EAAA,eACAA,EAAA,uBACAA,EAAA,+BANF,CAAYA,MAAU,M,oCCAtB,IAAAC,EAAAnK,EAAA,QAAAoK,EAAApK,EAAAsF,EAAA6E,GAAujBC,EAAG,G,uBCA1jBrJ,EAAOD,QAAUd,EAAAM,EAA0B,+B,oCCA3C,IAAA+J,EAAArK,EAAA,QAAAsK,EAAAtK,EAAAsF,EAAA+E,GAAslBC,EAAG,G,oCCAzlB,IAAIC,EAAS,WAAa,IAAIC,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAAW,CAACE,YAAY,gBAAgBC,MAAM,CAACC,eAAe,GAAGC,iBAAiB,KAAK,CAACL,EAAG,SAAS,CAACE,YAAY,cAAcC,MAAM,CAACG,KAAO,KAAK,CAACN,EAAG,QAAQ,CAACE,YAAY,wCAAwCC,MAAM,CAACI,UAAYV,EAAIW,QAAQC,UAAY,GAAGC,MAAQ,IAAIC,GAAG,CAACC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIe,WAAW,CAACf,EAAIiB,GAAG,WAAWjB,EAAIkB,GAAGlB,EAAImB,MAAM,aAAa,IAAI,IACpdC,EAAkB,G,oFCkBDC,EAArB,SAAAjE,GAAA,SAAAkE,IAAA,OAAA9M,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAgE,GAAA9M,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAA8M,GAAAtM,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAA8M,EAAAlE,GAAA5I,OAAAmN,EAAA,KAAAnN,CAAA8M,EAAA,EAAA1G,IAAA,QAAAN,MAAA,gBAAAgH,EAAA,CAA0CM,EAAA,MAExCC,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,EAAMnK,KAAMoK,W,8BAI9BF,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,K,2BAIlBD,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,I,oBACS,MARS6M,EAAYQ,EAAA,MADhCrN,OAAAoN,EAAA,KAAApN,CAAU,KACU6M,GAAA,IAAAW,EAAA,ECnBkaC,EAAA,E,iFCQnbC,EAAY1N,OAAA2N,EAAA,KAAA3N,CACdyN,EACAlC,EACAqB,GACA,EACA,KACA,WACA,MAIaxC,EAAA,KAAAsD,EAAiB,QAOhCE,IAAkBF,EAAW,CAACG,OAAA,KAAKC,QAAA,KAAMC,UAAA,Q,4HCvBpBC,EAArB,SAAApF,GAAA,SAAAoF,IAAA,OAAAhO,OAAAiO,EAAA,KAAAjO,CAAA8I,KAAAkF,GAAAhO,OAAAkO,EAAA,KAAAlO,CAAA8I,KAAA9I,OAAAmO,EAAA,KAAAnO,CAAAgO,GAAAxN,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAoO,EAAA,KAAApO,CAAAgO,EAAApF,GAAA5I,OAAAqO,EAAA,KAAArO,CAAAgO,EAAA,EAAA5H,IAAA,WAAAN,MAAA,SACWwI,GACP,OAAOxF,KAAKyF,WAAWC,aAAaF,OAFxCN,EAAA,CAA0CS,EAAA,MAArBT,EAAYU,EAAA,MADhCD,EAAA,MACoBT,GAAA5D,EAAA,Q,2DCHrB,IAAAuE,EAAA3N,EAAA,QAAA4N,EAAA5N,EAAAsF,EAAAqI,GAA8lBC,EAAG,G,6DCCjmB5N,EAAAoE,EAAAgF,EAAA,sBAAAyE,IAAA7N,EAAAoE,EAAAgF,EAAA,sBAAA0E,IAAA9N,EAAAoE,EAAAgF,EAAA,sBAAA2E,IAAA/N,EAAAoE,EAAAgF,EAAA,sBAAA4E,IAAAhO,EAAAoE,EAAAgF,EAAA,sBAAA6E,IAAA,IAuFYA,EAvFZC,EAAAlO,EAAA,QAqDa6N,EAAmB,iBAAwB,CACtDM,MAAO,GACPC,MAAO,GACPC,YAAa,KAGFP,EAAkB,iBAAsB,CACnDzJ,KAAM,GACNiK,OAAQ,GACRhB,QAAS,GACTiB,QAAS,EACTC,KAAM,EACNC,QAAS,EACTC,OAAQ,EACRC,SAAU,EACVC,QAAS,IAOEb,EAA0B,CACrCc,QAASX,EAAA,QACTtH,SAAU,GACVC,MAAO,MACPyG,QAAS,IAGEU,EAA8B,CACzC3J,KAAM,GACNyK,SAAU,IAGZ,SAAYb,GACVA,IAAA,4BACAA,IAAA,8BACAA,IAAA,gDACAA,IAAA,qDAJF,CAAYA,MAAY,M,6DCxFxB,IAAAc,EAAA/O,EAAA,QAAAgP,EAAAhP,EAAAsF,EAAAyJ,GAA2lBC,EAAG,G,oCCA9lB,IAAAC,EAAAjP,EAAA,QAAAkP,EAAAlP,EAAAsF,EAAA2J,GAAmlBC,EAAG,G,uBCAtlBnO,EAAOD,QAAUd,EAAAM,EAA0B,8B,uBCA3CS,EAAOD,QAAUd,EAAAM,EAA0B,yB,+0GCA3C,IAAIiK,EAAS,WAAa,IAAIC,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAQD,EAAW,QAAEG,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACL,EAAI2E,GAAI3E,EAAS,MAAE,SAAS4E,EAAKC,GAAO,OAAO1E,EAAG,MAAM,CAACvF,IAAIiK,EAAMxE,YAAY,6BAA6ByE,MAAM,CAC/UC,qCAAsC/E,EAAIgF,UAAYH,IAAU7E,EAAIiF,OACnE,CAAC9E,EAAG,OAAO,CAACE,YAAY,qCAAqC,CAACL,EAAIiB,GAAG,eAAejB,EAAIkB,GAAG0D,EAAKjB,OAAO,oBAAoBxD,EAAG,MAAM,CAACE,YAAY,6BAA6ByE,MAAM,CAAEC,qCAAsC/E,EAAIiF,OAAQ,CAACjF,EAAIiB,GAAG,aAAajB,EAAIkB,GAAGlB,EAAIkF,SAASvB,OAAO,eAAe,GAAGxD,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAACF,EAAG,MAAM,CAACE,YAAY,iCAAiC,CAAEL,EAAQ,KAAEG,EAAG,OAAO,CAACH,EAAIiB,GAAG,eAAejB,EAAIkB,GAAGlB,EAAIkF,SAAStB,OAAO,gBAAgBzD,EAAG,OAAO,CAACH,EAAIiB,GAAGjB,EAAIkB,GAAGlB,EAAImF,MAAMnF,EAAIgF,SAASpB,YAAa5D,EAAQ,KAAEG,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACE,YAAY,+BAA+BC,MAAM,CAACrI,IAAMzC,EAAQ,YAA0B,GAAG2K,EAAG,sBAAsB,CAACE,YAAY,mCAAmCC,MAAM,CAAC8E,KAAO,IAAI5J,MAAQ,EAAE6J,cAAgB,MAAMlF,EAAG,IAAI,CAACE,YAAY,uCAAuC,CAAEL,EAAQ,KAAEG,EAAG,OAAO,CAACH,EAAIiB,GAAG,eAAejB,EAAIkB,GAAGlB,EAAIkF,SAASrB,aAAa,gBAAgB1D,EAAG,OAAO,CAACH,EAAIiB,GAAG,eAAejB,EAAIkB,GAAGlB,EAAImF,MAAMnF,EAAIgF,SAASnB,aAAa,mBAAmB,OAAO7D,EAAIsF,MACziClE,EAAkB,G,wEC0DDmE,EAArB,SAAAnI,GAAA,SAAAoI,IAAA,OAAAhR,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAkI,GAAAhR,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAgR,GAAAxQ,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAgR,EAAApI,GAAAoI,EAAA,CAAqC5D,EAAA,MAEnCC,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,K,8BAIlBD,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,EAAO2D,QAAS,K,8BAIlC5D,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,K,4BAIlBD,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,K,+BAIlBD,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,K,2BAba+Q,EAAO1D,EAAA,MAD3BrN,OAAAoN,EAAA,KAAApN,CAAU,KACU+Q,GAAA,IAAAG,EAAA,EC7D6ZC,EAAA,E,qECQ9azD,EAAY1N,OAAA2N,EAAA,KAAA3N,CACdmR,EACA5F,EACAqB,GACA,EACA,KACA,WACA,MAIaxC,EAAA,KAAAsD,EAAiB,QAMhCE,IAAkBF,EAAW,CAAC0D,OAAA,KAAKC,oBAAA,Q,oHCrBtBC,EAAb,oBAAAA,IAAAtR,OAAA6I,EAAA,KAAA7I,CAAA8I,KAAAwI,GAAA,OAAAtR,OAAAkJ,EAAA,KAAAlJ,CAAAsR,EAAA,OAAAlL,IAAA,QAAAN,MAAA,SACeyL,GACX,OAAOC,EAAA,SAAMC,YAAYF,KAF7B,CAAAnL,IAAA,UAAAN,MAAA,SAKiByL,EAAgB3J,GAC7B,OAAO4J,EAAA,SAAME,YAAYH,EAAK3J,KANlC,CAAAxB,IAAA,mBAAAN,MAAA,SAS0B6L,EAAuB/J,GAC7C,IAAIgK,EAMJ,OAJEA,EADED,EAAcxJ,QAAQ,KAAO,EACjBwJ,EAAcE,MAAM,KAAK,GAEzB,GAETD,EAAY/R,OAAS+H,IAhBhC,CAAAxB,IAAA,QAAAN,MAAA,SAmBekC,EAAiBJ,GAC5B,OAAO4J,EAAA,SAAMM,WAAW9J,EAASJ,OApBrC0J,EAAA,I,yDCJA,IAAAS,EAAA/Q,EAAA,QAAAgR,EAAAhR,EAAAsF,EAAAyL,GAAwlBC,EAAG,G,orBCAvlBC,EAAS,WAAa,IAAIzG,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAAQ,CAACG,MAAM,CAACoG,KAAO,KAAK,CAAE1G,EAAgB,aAAEG,EAAG,gBAAgB,CAACW,GAAG,CAAC6F,QAAU,SAAS3F,GAAQ,OAAOhB,EAAI2G,cAAcxG,EAAG,MAAM,CAACG,MAAM,CAACf,GAAK,wBAAwB,CAACY,EAAG,MAAM,CAACG,MAAM,CAACf,GAAK,wBAAwB,CAACY,EAAG,cAAcA,EAAG,YAAY,CAACA,EAAG,cAAc,CAACE,YAAY,yBAAyBC,MAAM,CAACsG,MAAQ,GAAGC,cAAc,KAAK,CAAC1G,EAAG,gBAAgB,IAAI,IAAI,KAAKA,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,IAAI,CAACG,MAAM,CAACvJ,KAAO,sCAAsCiB,OAAS,WAAW,CAACgI,EAAIiB,GAAG,WAAWjB,EAAIkB,GAAGlB,EAAI8G,GAAG,+BAA+B,eAAe,IACvpB1F,EAAkB,G,4GCDlB2F,EAAS,WAAa,IAAI/G,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACE,YAAY,gBAAgBC,MAAM,CAACsG,MAAQ,GAAGC,cAAc,KAAK,CAAC1G,EAAG,WAAW,CAACG,MAAM,CAACC,eAAe,GAAGC,iBAAiB,KAAK,CAACL,EAAG,SAAS,CAACG,MAAM,CAAC0G,IAAM,GAAGC,IAAM,GAAGC,IAAM,KAAK,CAAC/G,EAAG,MAAM,CAACE,YAAY,oCAAoC,CAACF,EAAG,MAAM,CAACE,YAAY,iCAAiC,CAACF,EAAG,QAAQ,CAACE,YAAY,sBAAsBC,MAAM,CAACrI,IAAMzC,EAAQ,QAAsB2R,YAAY,OAAOC,eAAe,IAAIC,QAAU,OAAO,GAAGlH,EAAG,MAAM,CAACE,YAAY,2BAA2B,CAACF,EAAG,MAAM,CAACH,EAAIiB,GAAG,iBAAiBjB,EAAIkB,GAAGlB,EAAInG,MAAM,sBAAsBsG,EAAG,MAAM,CAACE,YAAY,2DAA2D,CAACL,EAAIiB,GAAG,aAAajB,EAAIkB,GAAGlB,EAAI8G,GAAG,6BAA6B,cAAc3G,EAAG,MAAM,CAACE,YAAY,4DAA4D,CAACL,EAAIiB,GAAG,aAAajB,EAAIkB,GAAGlB,EAAI8G,GAAG,8BAA8B,cAAc3G,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAAEL,EAAoB,iBAAEG,EAAG,gBAAgB,CAACG,MAAM,CAACa,KAAOnB,EAAI8G,GAAG,gCAAgCnG,QAAU,IAAIG,GAAG,CAACC,MAAQ,SAASC,GAAQ,OAAOhB,EAAI2G,cAAcxG,EAAG,OAAO,CAACE,YAAY,8BAA8B,CAACL,EAAIiB,GAAG,eAAejB,EAAIkB,GAAGlB,EAAI8G,GAAG,8BAA8B,iBAAiB,GAAG3G,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAAEL,EAAgB,aAAEG,EAAG,oBAAoB,CAACG,MAAM,CAACgH,OAAStH,EAAIuH,gBAAgBvH,EAAIsF,MAAM,MAAM,IAAI,IACt9CkC,EAAkB,G,wBCDlBC,EAAS,WAAa,IAAIzH,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACE,YAAY,oBAAoBC,MAAM,CAAChG,OAAQ,EAAKoN,MAAQ,QAAQC,KAAO,YAAY,CAACxH,EAAG,MAAM,CAACE,YAAY,gDAAgD,CAAEL,EAAsB,mBAAEG,EAAG,OAAO,CAACH,EAAIiB,GAAG,WAAWjB,EAAIkB,GAAGlB,EAAI8G,GAAG,kCAAkC,YAAa9G,EAAwB,qBAAEG,EAAG,OAAO,CAACH,EAAIiB,GAAG,WAAWjB,EAAIkB,GAAGlB,EAAI8G,GAAG,yCAAyC,YAAY3G,EAAG,OAAO,CAACH,EAAIiB,GAAG,WAAWjB,EAAIkB,GAAGlB,EAAI8G,GAAG,4BAA4B,iBAC7jBc,EAAkB,G,YCoBDC,EAArB,SAAAzK,GAAA,SAAA0K,IAAA,OAAAtT,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAwK,GAAAtT,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAsT,GAAA9S,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAsT,EAAA1K,GAAA5I,OAAAmN,EAAA,KAAAnN,CAAAsT,EAAA,EAAAlN,IAAA,qBAAAV,IAAA,WAKI,OAAOoD,KAAKgK,SAAWS,EAAA,KAAaC,sBALxC,CAAApN,IAAA,uBAAAV,IAAA,WASI,OAAOoD,KAAKgK,SAAWS,EAAA,KAAaE,0BATxCH,EAAA,CAA6ClG,EAAA,MAE3CC,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,K,6BADC+F,EAAehG,EAAA,MADnCrN,OAAAoN,EAAA,KAAApN,CAAU,KACUqT,GAAA,IAAAK,EAAA,ECrBqaC,EAAA,E,yDCQtbjG,EAAY1N,OAAA2N,EAAA,KAAA3N,CACd2T,EACAV,EACAG,GACA,EACA,KACA,WACA,MAIaQ,EAAAlG,EAAiB,QAKhCE,IAAkBF,EAAW,CAACmG,SAAA,O,gBCuCTC,EAArB,SAAAlL,GAPA,SAAAmL,IAAA,IAAAC,EAAA,OAAAhU,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAiL,G,+DASEC,EAAA3O,KAAe,cATjB2O,EAOA,OAAAhU,OAAAkN,EAAA,KAAAlN,CAAA+T,EAAAnL,GAAA5I,OAAAmN,EAAA,KAAAnN,CAAA+T,EAAA,EAAA3N,IAAA,UAAAN,MAAA,eAAAM,IAAA,mBAAAV,IAAA,WAMI,OAAOuO,EAAA,KAAaC,4BANxBH,EAAA,CAAqC3G,EAAA,MAUnCC,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,I,sBACW,MAVO8T,EAAOzG,EAAA,MAP3BrN,OAAAoN,EAAA,KAAApN,CAAU,CACTmU,WAAY,CACVrH,eAAA,KACAwG,gBAAAM,GAEFQ,SAAUpU,OAAAqU,EAAA,KAAArU,CAAS,CAAC,oBAED8T,GAAA,IAAAQ,EAAA,EC/DkaC,EAAA,E,4DCQnbC,EAAYxU,OAAA2N,EAAA,KAAA3N,CACduU,EACAhC,EACAS,GACA,EACA,KACA,WACA,MAIayB,EAAAD,EAAiB,QAQhC5G,IAAkB4G,EAAW,CAACE,aAAA,KAAW5G,QAAA,KAAMsD,OAAA,KAAKrD,UAAA,OC3BpD,IAAI4G,EAAS,WAAa,IAAInJ,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAASD,EAAIoJ,SAAWpJ,EAAIqJ,eAAgBlJ,EAAG,WAAW,CAACE,YAAY,aAAaC,MAAM,CAACgJ,OAAS,KAAK,CAACnJ,EAAG,WAAW,CAACE,YAAY,kBAAkBC,MAAM,CAACE,iBAAiB,GAAGD,eAAe,KAAK,CAACJ,EAAG,SAAS,CAACG,MAAM,CAACiJ,KAAO,KAAK,CAACpJ,EAAG,MAAM,CAACE,YAAY,4BAA4B,CAACF,EAAG,MAAM,CAACE,YAAY,kCAAkC,CAAEL,EAAa,UAAEG,EAAG,QAAQ,CAACG,MAAM,CAACkJ,OAAS,OAAOhO,MAAQ,OAAO2F,KAAO,GAAGwG,KAAO,IAAI7G,GAAG,CAACC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIyJ,mBAAmB,CAACtJ,EAAG,QAAQ,CAACG,MAAM,CAACrI,IAAMzC,EAAQ,QAA4BkU,YAAY,WAAW,GAAG1J,EAAIsF,MAAM,GAAGnF,EAAG,YAAYA,EAAG,WAAW,CAACG,MAAM,CAACgJ,OAAS,GAAG/I,eAAe,GAAGC,iBAAiB,KAAK,CAACL,EAAG,MAAM,CAACE,YAAY,mCAAmC,CAACL,EAAIiB,GAAG,iBAAiBjB,EAAIkB,GAAGlB,EAAI3B,OAAOsL,KAAK/F,OAAO,kBAAkBzD,EAAG,MAAM,CAACE,YAAY,qCAAqC,CAACL,EAAIiB,GAAG,iBAAiBjB,EAAIkB,GAAGlB,EAAI4J,SAAS,oBAAoBzJ,EAAG,YAAYA,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACE,YAAY,oCAAoCC,MAAM,CAACrI,IAAM+H,EAAI6J,SAAS7J,EAAIqJ,gBAAgBG,OAAS,KAAKhO,MAAQ,KAAK6L,QAAU,GAAGD,eAAe,QAAQ,IAAI,MAAM,GAAGjH,EAAG,WAAW,CAACE,YAAY,qBAAqBC,MAAM,CAACC,eAAe,KAAK,CAACJ,EAAG,SAAS,CAACG,MAAM,CAACwJ,IAAM,KAAK,CAAC3J,EAAG,MAAM,CAACE,YAAY,yCAAyC,CAACF,EAAG,YAAY,CAACG,MAAM,CAACyJ,OAAS,IAAIC,YAAYhK,EAAIiK,GAAG,CAAC,CAACrP,IAAI,YAAYsP,GAAG,SAASC,GAC58C,IAAIrJ,EAAKqJ,EAAIrJ,GACb,MAAO,CAACX,EAAG,OAAOH,EAAIoK,GAAG,GAAGtJ,GAAI,CAACd,EAAIiB,GAAG,mBAAmBjB,EAAIkB,GAAGlB,EAAIqK,GAAG,WAAPrK,CAAmBA,EAAIqJ,eAAe,IAAI,wBAAwB,MAAK,EAAM,aAAa,CAAClJ,EAAG,OAAO,CAACH,EAAIiB,GAAGjB,EAAIkB,GAAGlB,EAAIqJ,qBAAqBlJ,EAAG,YAAY,CAACG,MAAM,CAACyJ,OAAS,GAAGrD,KAAO,GAAG4D,UAAY,YAAYC,MAAM,CAACjQ,MAAO0F,EAAU,OAAEwK,SAAS,SAAUC,GAAMzK,EAAI0K,OAAOD,GAAKE,WAAW,WAAW,CAACxK,EAAG,OAAO,CAACH,EAAIiB,GAAGjB,EAAIkB,GAAGlB,EAAI8G,GAAG,iCAAiC3G,EAAG,QAAQ,CAACG,MAAM,CAACf,GAAK,UAAU4B,KAAO,GAAGwG,KAAO,IAAI7G,GAAG,CAACC,MAAQ,SAASC,GAAQ,OAAOhB,EAAI4K,UAAU,CAACzK,EAAG,QAAQ,CAACE,YAAY,oCAAoCC,MAAM,CAACrI,IAAMzC,EAAQ,QAA2B6R,QAAU,OAAO,IAAI,KAAKlH,EAAG,SAAS,CAACG,MAAM,CAACwJ,IAAM,KAAK,CAAC3J,EAAG,MAAM,CAACE,YAAY,0CAA0C,CAACL,EAAIiB,GAAG,aAAajB,EAAIkB,GAAGlB,EAAIqK,GAAG,WAAPrK,CAAmBA,EAAI6K,iBAAiB,cAAc1K,EAAG,OAAO,CAACE,YAAY,yCAAyC,CAACL,EAAIiB,GAAG,eAAejB,EAAIkB,GAAGlB,EAAI8G,GAAG,wBAAwB,qBAAqB,GAAG3G,EAAG,WAAW,CAAC2K,WAAW,CAAC,CAACjR,KAAK,QAAQkR,QAAQ,UAAUzQ,MAAO0F,EAAkB,eAAE2K,WAAW,mBAAmBR,IAAI,OAAO9J,YAAY,wBAAwB2K,SAAS,CAAC1Q,MAAS0F,EAAkB,gBAAGc,GAAG,CAACmK,MAAQ,SAASjK,GAAWA,EAAOhJ,OAAOkT,YAAqBlL,EAAIqJ,eAAerI,EAAOhJ,OAAOsC,YAAW,GAAG0F,EAAIsF,MACnyC6F,EAAkB,G,kpBC6FtB,IAAqBC,EAArB,SAAAC,GANA,SAAAC,IAAA,IAAA9C,EAAA,OAAAhU,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAgO,G,+DAYE9C,EAAAkC,QAAkB,EACVlC,EAAAzP,QAAkB,EAb5ByP,EAMA,OAAAhU,OAAAkN,EAAA,KAAAlN,CAAA8W,EAAAD,GAAA7W,OAAAmN,EAAA,KAAAnN,CAAA8W,EAAA,EAAA1Q,IAAA,OAAAN,MAAA,WAaM,IAAAiR,EAAAjO,KACIkO,EAAWlO,KAAKmO,MAAMb,KAC5BY,EAASE,QACTF,EAASG,SACTrO,KAAKoN,OAASxT,SAAS0U,YAAY,QAE/BtO,KAAKvE,SACPG,aAAaoE,KAAKvE,SAGpBuE,KAAKvE,QAAWS,WAAW,WACzB+R,EAAKb,QAAS,GACb,OAzBP,CAAA9P,IAAA,YAAAV,IAAA,WAUI,OAAOoD,KAAKe,OAAOxE,OAASgS,EAAA,KAAW7N,SAV3CsN,EAAA,CAAuC9W,OAAAoN,EAAA,KAAApN,CAAOsX,EAAA,KAAcC,EAAA,OAAvCX,EAASvJ,EAAA,MAN7BrN,OAAAoN,EAAA,KAAApN,CAAU,CACToU,SAAUoD,EAAF,GACHxX,OAAAqU,EAAA,KAAArU,CAAS,CAAC,UAAW,iBAAkB,mBADpC,GAEHA,OAAAqU,EAAA,KAAArU,CAAW,CAAC,gBAGE4W,GAAA,IAAAa,EAAA,EChG+ZC,EAAA,E,gDCQhbC,GAAY3X,OAAA2N,EAAA,KAAA3N,CACd0X,EACA/C,EACAgC,GACA,EACA,KACA,WACA,MAIaiB,GAAAD,GAAiB,QAUhC/J,IAAkB+J,GAAW,CAAC9J,OAAA,KAAKC,QAAA,KAAMsD,OAAA,KAAKrD,UAAA,KAAQ8J,UAAA,KAAQC,WAAA,OCG9D,IAAqBC,GAArB,SAAAnP,GAME,SAAAoP,IAAA,IAAAhE,EAAA,OAAAhU,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAkP,GACEhE,EAAAhU,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAgY,GAAA7X,KAAA2I,OALFkL,EAAAiE,aAAuB,EAMrBjE,EAAK3O,KAAO,cAFd2O,EANF,OAAAhU,OAAAkN,EAAA,KAAAlN,CAAAgY,EAAApP,GAAA5I,OAAAmN,EAAA,KAAAnN,CAAAgY,EAAA,EAAA5R,IAAA,UAAAN,MAAA,eAAAoS,EAAAlY,OAAAmY,EAAA,KAAAnY,CAAAoY,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAG,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAoBI5P,KAAKmP,aAAc,EACnBnP,KAAK6P,OAAOC,OAAO,SArBvBJ,EAAAE,KAAA,EAsBU5P,KAAK+P,QAAQ1G,UAtBvB,cAAAqG,EAAAE,KAAA,EAuBU5P,KAAK+P,QAAQC,cAvBvB,OAwBIhQ,KAAKmP,aAAc,EAxBvB,wBAAAO,EAAAO,SAAAT,EAAAxP,SAAA,SAAAqJ,IAAA,OAAA+F,EAAA1X,MAAAsI,KAAA7B,WAAA,OAAAkL,EAAA,KAAA/L,IAAA,YAAAN,MAAA,WA4BIgD,KAAK+P,QAAQG,eA5BjB,CAAA5S,IAAA,eAAAV,IAAA,WAYI,OACGoD,KAAKmP,aACNnP,KAAK8L,SACL9L,KAAKiK,eAAiBQ,EAAA,KAAa0F,cAfzCjB,EAAA,CAAiC5K,EAAA,MAAZ2K,GAAG1K,EAAA,MAJvBrN,OAAAoN,EAAA,KAAApN,CAAU,CACToU,SAAUpU,OAAAqU,EAAA,KAAArU,CAAS,CAAC,UAAW,iBAC/BmU,WAAY,CAAE2C,UAAAc,GAAWnD,mBAENsD,IAAA,IAAAmB,GAAA,GChCoYC,GAAA,G,sCCQrZC,GAAYpZ,OAAA2N,EAAA,KAAA3N,CACdmZ,GACAlH,EACArF,GACA,EACA,KACA,WACA,MAIayM,GAAAD,GAAiB,QAOhCxL,IAAkBwL,GAAW,CAACE,QAAA,KAAK5E,aAAA,KAAW6E,YAAA,O,iBCtB9CC,GAAA,KAAUC,cAAc,CACtB,mBACA,mBACA,sB,+CCPEC,GAAS,WAAa,IAAIlO,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,aAC/FgO,GAAkB,GCDlBC,GAAS,WAAa,IAAIpO,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAC/FkO,GAAkB,GCDlBC,GAAS,WAAa,IAAItO,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAAW,CAACG,MAAM,CAACgJ,OAAS,GAAGiF,wBAAwB,GAAG1H,cAAc,KAAK,CAAC1G,EAAG,cAAc,CAACE,YAAY,2BAA2BC,MAAM,CAACkO,OAASxO,EAAI8G,GAAG,8BAA8B3G,EAAG,WAAW,CAACG,MAAM,CAACE,iBAAiB,GAAGqG,cAAc,KAAK,CAAC1G,EAAG,SAAS,CAACG,MAAM,CAACiJ,KAAO,KAAK,CAACpJ,EAAG,SAAS,CAACE,YAAY,2BAA2BC,MAAM,CAACmO,OAAS,KAAKzO,EAAI2E,GAAI3E,EAAU,OAAE,SAASrC,EAAMkH,GAAO,OAAO1E,EAAG,eAAe,CAACvF,IAAI+C,EAAMA,MAAM0C,YAAY,kCAAkCC,MAAM,CAACoO,YAAY,IAAI1E,YAAYhK,EAAIiK,GAAG,CAAC,CAACrP,IAAI,YAAYsP,GAAG,WAAW,MAAO,CAAC/J,EAAG,cAAc,CAACG,MAAM,CAACf,GAAM,SAAWsF,IAAS,CAAC1E,EAAG,qBAAqB,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACG,MAAM,CAACrI,IAAM+H,EAAI6J,SAASlM,EAAMmF,SAAS6L,IAAM3O,EAAI8G,GAAG,2CAA2C3G,EAAG,sBAAsB,CAACA,EAAG,oBAAoB,CAACE,YAAY,yCAAyC,CAACL,EAAIiB,GAAG,uBAAuBjB,EAAIkB,GAAGlB,EAAI8G,GAAG,oCAAqC,CACnhChD,OAAQnG,EAAMmG,OACdjK,KAAM8D,EAAM9D,QACV,wBAAwBsG,EAAG,uBAAuB,CAACE,YAAY,4CAA4C,CAACL,EAAIiB,GAAG,uBAAuBjB,EAAIkB,GAAGvD,EAAMmF,SAAS,yBAAyB,IAAI,KAAK8L,OAAM,IAAO,MAAK,IAAO,CAACzO,EAAG,MAAM,CAACE,YAAY,4CAA4CC,MAAM,CAACf,GAAM,iBAAmBsF,IAAS,CAAC1E,EAAG,WAAW,CAACG,MAAM,CAACE,iBAAiB,KAAK,CAACL,EAAG,QAAQ,CAACE,YAAY,0DAA0DC,MAAM,CAACf,GAAM,OAASsF,EAAOgK,GAAM,YAAelR,EAAa,UAAK,CAACqC,EAAIiB,GAAG,qBAAqBjB,EAAIkB,GAAGlB,EAAI8G,GAAG,uCAAuC,sBAAsB3G,EAAG,QAAQ,CAACE,YAAY,gEAAgEC,MAAM,CAACf,GAAM,SAAWsF,GAAQ/D,GAAG,CAACC,MAAQ,SAASC,GAAQ,OAAOhB,EAAI8O,aAAanR,MAAU,CAACqC,EAAIiB,GAAG,qBAAqBjB,EAAIkB,GAAGlB,EAAI8G,GAAG,8CAA8C,sBAAsB3G,EAAG,QAAQ,CAACE,YAAY,0DAA0DC,MAAM,CAACuO,GAAM,aAAgBlR,EAAa,UAAK,CAACqC,EAAIiB,GAAG,qBAAqBjB,EAAIkB,GAAGlB,EAAI8G,GAAG,iDAAiD,uBAAuB,IAAI,OAAO,IAAI,IAAI,GAAG3G,EAAG,gBAAgB,CAACE,YAAY,2BAA2BC,MAAM,CAACa,KAAOnB,EAAI8G,GAAG,sBAAsBnG,QAAU,IAAIG,GAAG,CAACC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIxB,4BAA4B2B,EAAG,sBAAsB,CAACG,MAAM,CAACyO,QAAU/O,EAAIgP,mBAAmBlO,GAAG,CAACmO,QAAU,SAASjO,GAAQ,OAAOhB,EAAIkP,kBAAkBC,OAAS,SAASnO,GAAQ,OAAOhB,EAAIoP,mBAAmBpF,YAAYhK,EAAIiK,GAAG,CAAC,CAACrP,IAAI,SAASsP,GAAG,WAAW,MAAO,CAAClK,EAAIiB,GAAG,WAAWjB,EAAIkB,GAAGlB,EAAI8G,GAAG,oCAAoC,YAAY8H,OAAM,MAAS,CAAE5O,EAAiB,cAAEG,EAAG,OAAO,CAACG,MAAM,CAAC+O,KAAO,gDAAgDjY,IAAM,QAAQ,CAAC+I,EAAG,IAAI,CAACG,MAAM,CAACgP,MAAQ,WAAW,CAACtP,EAAIiB,GAAGjB,EAAIkB,GAAGlB,EAAIuP,cAAczL,WAAW3D,EAAG,OAAO,CAACE,YAAY,kDAAkDC,MAAM,CAACgP,MAAQ,YAAY,CAACtP,EAAIiB,GAAG,aAAajB,EAAIkB,GAAGlB,EAAIuP,cAAczM,SAAS,gBAAgB9C,EAAIsF,MAAM,GAAGnF,EAAG,UAAU,CAACG,MAAM,CAACyO,QAAU/O,EAAIoJ,QAAQjE,MAAQnF,EAAImF,MAAMD,SAAWlF,EAAIkF,aAAa,IACxoEsK,GAAkB,GCJlBC,GAAS,WAAa,IAAIzP,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAAW,CAACG,MAAM,CAACE,iBAAiB,KAAK,CAACL,EAAG,WAAW,CAACG,MAAM,CAACoP,WAAa,GAAGhG,YAAY,OAAOa,MAAM,CAACjQ,MAAO0F,EAAW,QAAEwK,SAAS,SAAUC,GAAMzK,EAAI+O,QAAQtE,GAAKE,WAAW,YAAY,CAACxK,EAAG,SAAS,CAACA,EAAG,eAAe,CAACA,EAAG,SAAS,CAACA,EAAG,KAAK,CAACE,YAAY,+BAA+B,CAACL,EAAI2P,GAAG,WAAW,MAAM,GAAGxP,EAAG,cAAc,CAACA,EAAG,IAAI,CAACE,YAAY,gCAAgC,CAACL,EAAI2P,GAAG,YAAY,KAAKxP,EAAG,iBAAiB,CAACA,EAAG,YAAYA,EAAG,QAAQ,CAACE,YAAY,8BAA8BC,MAAM,CAACa,KAAO,IAAIL,GAAG,CAACC,MAAQ,SAASC,GAAQ,OAAOhB,EAAImP,YAAY,CAACnP,EAAIiB,GAAG,eAAejB,EAAIkB,GAAGlB,EAAI8G,GAAG,uCAAuC,gBAAgB3G,EAAG,QAAQ,CAACE,YAAY,mEAAmEC,MAAM,CAACa,KAAO,IAAIL,GAAG,CAACC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIiP,aAAa,CAACjP,EAAIiB,GAAG,eAAejB,EAAIkB,GAAGlB,EAAI8G,GAAG,wCAAwC,gBAAgB3G,EAAG,aAAa,IAAI,IAAI,IAAI,IAClhCyP,GAAkB,GCoCDC,GAArB,SAAAzS,GAAA,SAAA0S,IAAA,OAAAtb,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAwS,GAAAtb,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAsb,GAAA9a,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAsb,EAAA1S,GAAA5I,OAAAmN,EAAA,KAAAnN,CAAAsb,EAAA,EAAAlV,IAAA,UAAAN,MAAA,WAKIgD,KAAKyS,MAAM,aALf,CAAAnV,IAAA,SAAAN,MAAA,WASIgD,KAAKyS,MAAM,cATfD,EAAA,CAAgDlO,EAAA,MAE9CC,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,K,+BADC+N,GAAkBhO,EAAA,MADtCrN,OAAAoN,EAAA,KAAApN,CAAU,KACUqb,IAAA,IAAAG,GAAA,GCrCwaC,GAAA,G,mDCQzbC,GAAY1b,OAAA2N,EAAA,KAAA3N,CACdyb,GACAR,GACAG,IACA,EACA,KACA,WACA,MAIaO,GAAAD,GAAiB,QAahC9N,IAAkB8N,GAAW,CAAC7N,OAAA,KAAK+N,SAAA,KAAMC,aAAAC,GAAA,KAAaC,UAAAD,GAAA,KAAUE,WAAAF,GAAA,KAAWG,WAAA,KAAQnO,QAAA,KAAMC,UAAA,KAAQ8J,UAAA,O,8BC0F5EqE,GAArB,SAAArF,GAJA,SAAAsF,IAAA,IAAAnI,EAAA,OAAAhU,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAqT,G,+DAMEnI,EAAA+G,cAAmC,KACnC/G,EAAAwG,mBAA6B,EAE7BxG,EAAAY,SAAmB,EACnBZ,EAAArD,MAA2B,GAC3BqD,EAAAtD,SAA4B1Q,OAAAuT,EAAA,KAAAvT,GAX9BgU,EAIA,OAAAhU,OAAAkN,EAAA,KAAAlN,CAAAmc,EAAAtF,GAAA7W,OAAAmN,EAAA,KAAAnN,CAAAmc,EAAA,EAAA/V,IAAA,UAAAN,MAAA,WAUIgD,KAAK6H,MAAQ,CAAE7H,KAAKwJ,GAAG,0BACvBxJ,KAAK4H,SAAY5H,KAAKwJ,GAAG,uBAX7B,CAAAlM,IAAA,eAAAN,MAAA,WAeIgD,KAAK0R,mBAAoB,EACzB1R,KAAKiS,cAAgB,OAhBzB,CAAA3U,IAAA,eAAAN,MAAA,SAmBeqD,GACXL,KAAKiS,cAAgB5R,EACrBL,KAAK0R,mBAAoB,IArB7B,CAAApU,IAAA,iBAAAN,MAAA,eAAAsW,EAAApc,OAAAmY,EAAA,KAAAnY,CAAAoY,mBAAAC,KAAA,SAAAC,IAAA,IAAAhK,EAAA,OAAA8J,mBAAAG,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAyBUpK,EAAUxF,KAAKiS,cAAezM,QACpCxF,KAAKuT,eACLvT,KAAK8L,SAAU,EA3BnB4D,EAAAE,KAAA,EA4BU5P,KAAK+P,QAAQyB,aAAahM,GA5BpC,OA6BIxF,KAAK8L,SAAU,EA7BnB,wBAAA4D,EAAAO,SAAAT,EAAAxP,SAAA,SAAA4R,IAAA,OAAA0B,EAAA5b,MAAAsI,KAAA7B,WAAA,OAAAyT,EAAA,KAAAtU,IAAA,iBAAAN,MAAA,WAiCIgD,KAAKuT,mBAjCTF,EAAA,CAAoCnc,OAAAoN,EAAA,KAAApN,CAAOsX,EAAA,KAAcC,EAAA,OAApC2E,GAAM7O,EAAA,MAJ1BrN,OAAAoN,EAAA,KAAApN,CAAU,CACTmU,WAAY,CAAEmI,cAAA,KAAYtL,WAAA,KAASsK,mBAAAK,GAAoB7O,eAAA,MACvDsH,SAAUpU,OAAAqU,EAAA,KAAArU,CAAW,CAAC,cAEHkc,IAAA,IAAAK,GAAA,GC1H4ZC,GAAA,G,6ECQ7aC,GAAYzc,OAAA2N,EAAA,KAAA3N,CACdwc,GACA1C,GACAkB,IACA,EACA,KACA,WACA,MAIa0B,GAAAD,GAAiB,QAchC7O,IAAkB6O,GAAW,CAAC5O,OAAA,KAAKC,QAAA,KAAMC,UAAA,KAAQ4O,SAAA,KAAMC,cAAA,KAAWC,aAAA,KAAUC,mBAAA,KAAgBC,iBAAAC,GAAA,KAAiBC,kBAAAD,GAAA,KAAkBE,eAAAF,GAAA,OCtB/H,IAAqBG,GAArB,SAAAvU,GAAA,SAAAwU,IAAA,OAAApd,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAsU,GAAApd,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAod,GAAA5c,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAod,EAAAxU,GAAAwU,EAAA,CAAqChQ,EAAA,MAAhB+P,GAAO9P,EAAA,MAH3BrN,OAAAoN,EAAA,KAAApN,CAAU,CACTmU,WAAY,CAAEgI,OAAAO,OAEKS,IAAA,IAAAE,GAAA,GCX6ZC,GAAA,GCO9aC,GAAYvd,OAAA2N,EAAA,KAAA3N,CACdsd,GACA1D,GACAC,IACA,EACA,KACA,KACA,MAIa2D,GAAAD,G,QCLME,GAArB,SAAA7U,GAAA,SAAA8U,IAAA,OAAA1d,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAA4U,GAAA1d,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAA0d,GAAAld,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAA0d,EAAA9U,GAAA8U,EAAA,CAAkCtQ,EAAA,MAAbqQ,GAAIpQ,EAAA,MALxBrN,OAAAoN,EAAA,KAAApN,CAAU,CACTmU,WAAY,CACViJ,QAAAI,OAGiBC,IAAA,IAAAE,GAAA,GCb0ZC,GAAA,GCO3aC,GAAY7d,OAAA2N,EAAA,KAAA3N,CACd4d,GACAlE,GACAC,IACA,EACA,KACA,KACA,MAIamE,GAAAD,G,6ICCfE,EAAA,KAAIC,IAAI3J,EAAA,MAER,IAAM4J,GAA2B,CAC/BrJ,SAAS,EACTC,eAAgB,GAChBwB,eAAgB,MAChB6H,kBAAkB,EAClBnL,aAAcQ,EAAA,KAAa0F,UAC3BkF,SAAU,GACVC,OAAQ,GACRhJ,QAAS7B,EAAA,MAGL,SAAU8K,KACd,OAAOC,KAAML,IAGf,IAAMM,GAAiC,CACrCC,MAAOH,KACPI,UAAW,CACTC,WADS,SACEF,GACTA,EAAMN,kBAAmB,GAE3BnL,aAJS,SAIIyL,EAAkB1L,GAC7B0L,EAAMzL,aAAeD,GAEvB6L,QAPS,SAODH,EAAkBI,GACxBJ,EAAM3J,eAAiB+J,GAEzBC,aAVS,SAUIL,GACXA,EAAM5J,SAAU,GAElB/E,QAbS,SAaD2O,EAAkBM,GACxBN,EAAMnI,eAAiByI,GAEzBC,eAhBS,SAgBMP,EAAkBL,GAC/BK,EAAML,SAAWA,GAEnBa,aAnBS,SAmBIR,EAAkBJ,GAC7BI,EAAMJ,OAASpe,OAAOif,OAAO,GAAIb,IAEnChJ,QAtBS,SAsBDoJ,EAAkBU,GACxBV,EAAMpJ,QAAU8J,GAElBC,MAzBS,SAyBHX,GACJxe,OAAOif,OAAOT,EAAOH,QAGzBe,QAAS,GACTC,QAAS,CACPjB,OAAQ,SAASI,GACf,IAAMc,EAAU,SACdC,EACAC,GAIA,OAFAD,EAAIjR,QAAUkR,EAAQrW,MACrBoW,EAAIC,EAAQhB,QAAqB,EAC3Be,GAGT,OAAOE,KAAIC,KAAQlB,EAAML,UAAW,SAAAwB,GAClC,IAAM5J,EAAQ6J,KAAOD,EAAeL,EAAStf,OAAAuT,EAAA,KAAAvT,IACvC6f,EAAYrB,EAAMJ,OAAOrI,EAAMzH,SAMrC,OALIuR,IACF9J,EAAM1Q,KAAOwa,EAAUxa,MAAQ,GAC/B0Q,EAAMzG,OAASuQ,EAAUvQ,QAAU,IAG9ByG,KAGX+J,UAAW,SAACtB,GACV,OAAOoB,KACLpB,EAAMJ,OACN,SAAC1d,EAAiBoF,EAAcM,GAC9B,IAAM2P,EAAe,CACnBzH,QAASlI,EACTyJ,QAAS/J,EAAM+J,QACfjI,SAAU9B,EAAM8B,SAChBC,MAAO/B,EAAM+B,MACbyH,OAAQxJ,EAAMwJ,OACdjK,KAAMS,EAAMT,MAGd,OADA3E,EAAOX,KAAKgW,GACLrV,GAET,KAGJyd,SAAU,SAACK,GAAD,OAAsB,SAACuB,GAC/B,IAAI5B,EAA4B,GAC1BwB,EAAgBnB,EAAML,SAAS4B,GAIrC,OAHIJ,IACFxB,EAAWuB,KAAQC,IAEdxB,IAEThV,MAAO,SAACqV,GAAD,OAAsB,SAACuB,GAC5B,OAAIA,KAAgBvB,EAAMJ,OACjBI,EAAMJ,OAAO2B,GAEb,OAGX3K,QAAS,SAACoJ,GACR,OAAOA,EAAMpJ,QAAQ/P,MAAd,SAAA2a,OAA+BxB,EAAMpJ,QAAQtF,UAEtDmQ,2BAA4B,SAACC,EAAGb,GAAJ,OAAgB,SAACU,GAC3C,IAAM5B,EAA4BkB,EAAQlB,SAAS4B,GAC7CI,EAAehC,EAAS7V,OAC5B,SAAAxC,GAAK,OAAIA,EAAM0Y,QAAU4B,GAAA,KAAa5Q,OAExC,OAAO6Q,KAAQF,EAAc,CAAC,YAAa,CAAC,SAAS,OAK5CG,GAAA,IAAIjM,EAAA,KAAKkM,MAAMhC,IC9H9BR,EAAA,KAAIC,IAAIwC,GAAA,MAMD,IAAMC,GAAyB,SAACC,EAErChI,EACA0F,GACQ,IAHNjV,EAGMuX,EAHNvX,MAIF,OAAKA,EAEEnJ,OAAOiL,KAAKmT,GAChBzT,IAAI,SAAAvE,GAAG,OAAIgY,EAAOhY,GAAKkI,UAAYnF,IACnCwX,UAAS,GACRjI,IACAA,EAAK,KANUA,KAcRkI,GAAoB,SAACC,EAEhCX,EACAxH,GAH+B,IAC7BnP,EAD6BsX,EAC7BtX,OAD6B,OAI5BkX,GAAuBlX,EAAQmP,EAAM4H,GAAMjB,QAAQS,YAElDgB,GAAS,IAAIN,GAAA,KAAO,CACxBxa,KAAM,UACN+a,KAAM,IACNC,OAAQ,CACN,CACEnG,KAAM,IACNxV,KAAMgS,EAAA,KAAW7N,KACjB2L,KAAM,CACJ/F,MAAO,eAET1B,UAAWoQ,IAEb,CACEjD,KAAM,IACNoG,SAAU,KAEZ,CACEpG,KAAM,kBACNxV,KAAMgS,EAAA,KAAW1N,QACjBwL,KAAM,CACJ/F,MAAO,QAET1B,UAAW,kBAAMtL,QAAA6C,IAAA,CAAAjE,EAAAiB,EAAA,kBAAAjB,EAAAiB,EAAA,kBAAAjB,EAAAiB,EAAA,oBAAAgC,KAAAjD,EAAAqF,KAAA,eACjB6a,YAAaN,IAEf,CACE/F,KAAM,WACNxV,KAAMgS,EAAA,KAAWzN,aACjBuL,KAAM,CACJ/F,MAAO,gBAET1B,UAAW,kBAAM1M,EAAAiB,EAAA,kBAAAgC,KAAAjD,EAAAqF,KAAA,gBAEnB,CACEwU,KAAM,kBACNxV,KAAMgS,EAAA,KAAW/N,WACjB6L,KAAM,CACJ/F,MAAO,cAET1B,UAAW,kBAAMtL,QAAA6C,IAAA,CAAAjE,EAAAiB,EAAA,kBAAAjB,EAAAiB,EAAA,oBAAAgC,KAAAjD,EAAAqF,KAAA,eACjB6a,YAAaN,IAEf,CACE/F,KAAM,2BACNxV,KAAMgS,EAAA,KAAW3N,aACjByL,KAAM,CACJ/F,MAAO,gBAET1B,UAAW,kBAAMtL,QAAA6C,IAAA,CAAAjE,EAAAiB,EAAA,kBAAAjB,EAAAiB,EAAA,kBAAAjB,EAAAiB,EAAA,oBAAAgC,KAAAjD,EAAAqF,KAAA,eACjB6a,YAAaN,IAEf,CACE/F,KAAM,mBACNxV,KAAMgS,EAAA,KAAWvN,SACjBqL,KAAM,CACJ/F,MAAO,YAET1B,UAAW,kBAAMtL,QAAA6C,IAAA,CAAAjE,EAAAiB,EAAA,kBAAAjB,EAAAiB,EAAA,oBAAAgC,KAAAjD,EAAAqF,KAAA,eACjB6a,YAAaN,OAKJO,GAAA,GCpGf3H,GAAA,KAAUC,cAAc,CACtB,mBACA,mBACA,sB,iBCHI,SAAU2H,GAAaC,EAAkBC,GAC7CD,EAAIphB,UAAU4Y,QAAU,IAAI0I,GAAA,KAAcjB,I,4BCH/BkB,GAAb,WAGE,SAAAC,IAAAzhB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAA2Y,GAFQ3Y,KAAA4Y,MAAkC,GAD5C,OAAA1hB,OAAAmN,EAAA,KAAAnN,CAAAyhB,EAAA,EAAArb,IAAA,eAAAN,MAAA,SAKsBwI,GAClB,IAAMqT,EAAS7Y,KAAK4Y,MAAMpT,GAE1B,GAAKqT,EAKH,OAAOA,EAJP,IAAMC,EAAYC,KAAYvT,GAE9B,OADAxF,KAAK4Y,MAAMpT,GAAWsT,EACfA,MAXbH,EAAA,GCCM,SAAUK,GAAgBT,EAAkBC,GAChDD,EAAIphB,UAAUsO,WAAa,IAAIiT,G,2BCEjC,SAASO,KACP,IAAMC,EAAUhhB,EAAA,QAKVihB,EAA2B,GAQjC,OAPAD,EAAQ/W,OAAOiX,QAAQ,SAAA9b,GACrB,IAAM+b,EAAU/b,EAAIgc,MAAM,uBAC1B,GAAID,GAAWA,EAAQtiB,OAAS,EAAG,CACjC,IAAMwiB,EAASF,EAAQ,GACvBF,EAASI,GAAUL,EAAQ5b,MAGxB6b,EAhBTlE,EAAA,KAAIC,IAAIsE,GAAA,MAmBO,IAAAC,GAAA,IAAID,GAAA,KAAQ,CACzBD,OAAQ,KACRG,eAAgB,KAChBP,SAAUF,O,aCrBZhE,EAAA,KAAIC,IAAIyE,GAAA,MAEO,IAAAC,GAAA,IAAID,GAAA,KAAQ,CACzBE,MAAO,CACLC,SAAU,OAEZC,MAAO,CACL3Q,MAAM,EACN4Q,OAAQ,CACN5Q,KAAM,CACJ6Q,QAAS,UACTC,UAAW,eCFnBjF,EAAA,KAAIkF,OAAOC,eAAgB,EAE3BnF,EAAA,KAAIC,IAAIoD,IACRrD,EAAA,KAAIC,IAAI8D,IAER,IAAI/D,EAAA,KAAI,CACN2E,WACA5B,OAAAK,GACA5C,MAAA+B,GAEA6C,QALM,WAMJ,GAAIC,eAAenC,SAAU,CAC3B,IAAMA,EAAWmC,eAAenC,gBACzBmC,eAAenC,SACtBnY,KAAKM,QAAQrJ,KAAKkhB,KAItBsB,QACAhX,OAAQ,SAAA8X,GAAC,OAAIA,EAAEhK,OACdiK,OAAO,S,kCClCV,IAAI/X,EAAS,WAAa,IAAIC,EAAI1C,KAAS2C,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAAW,CAACE,YAAY,eAAe,CAACF,EAAG,SAAS,CAACG,MAAM,CAACiJ,KAAO,KAAK,CAACpJ,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACL,EAAIiB,GAAGjB,EAAIkB,GAAGlB,EAAIwO,WAAWrO,EAAG,MAAM,CAACE,YAAY,4BAA4B,IACrSe,EAAkB,G,wECYD2W,EAArB,SAAA3a,GAAA,SAAA0T,IAAA,OAAAtc,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAwT,GAAAtc,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAsc,GAAA9b,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAsc,EAAA1T,GAAA0T,EAAA,CAAwClP,EAAA,MAEtCC,EAAA,MADCrN,OAAAoN,EAAA,KAAApN,CAAK,CAAEsN,UAAU,K,6BADCiW,EAAUlW,EAAA,MAD9BrN,OAAAoN,EAAA,KAAApN,CAAU,KACUujB,GAAA,IAAAC,EAAA,ECbgaC,EAAA,E,qECQjb/V,EAAY1N,OAAA2N,EAAA,KAAA3N,CACdyjB,EACAlY,EACAqB,GACA,EACA,KACA,WACA,MAIaxC,EAAA,KAAAsD,EAAiB,QAMhCE,IAAkBF,EAAW,CAACI,QAAA,KAAMC,UAAA,Q,uoRCzBvB2V,G,UAAb,oBAAAC,IAAA3jB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAA6a,GAAA,OAAA3jB,OAAAmN,EAAA,KAAAnN,CAAA2jB,EAAA,OAAAvd,IAAA,QAAAN,MAAA,SAAA8d,GAAA,SAAAC,EAAAC,GAAA,OAAAF,EAAApjB,MAAAsI,KAAA7B,WAAA,OAAA4c,EAAAE,SAAA,kBAAAH,EAAAG,YAAAF,EAAA,gBAAAnD,EAAA1gB,OAAAmY,EAAA,KAAAnY,CAAAoY,mBAAAC,KAAA,SAAAC,EAEI0L,GAFJ,OAAA5L,mBAAAG,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAIQsL,EAJR,CAAAxL,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIiCmL,MAAMG,GAJvC,cAAAxL,EAAAE,KAAA,EAAAF,EAAAyL,KAI6CC,OAJ7C,cAAA1L,EAAA2L,OAAA,SAAA3L,EAAAyL,MAAA,cAAAzL,EAAA2L,OAAA,cAMWpf,GANX,wBAAAyT,EAAAO,SAAAT,MAAA,gBAAA8L,GAAA,OAAA1D,EAAAlgB,MAAAsI,KAAA7B,YAAA,OAAA0c,EAAA,I,oGCgBqBU,E,WAwCnB,SAAAC,EAAY/F,GAAuBve,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAwb,GACjCxb,KAAKyb,aAAUxf,EACf+D,KAAKyV,MAAQA,E,2NAlBPiG,EAAe1b,KAAKyV,MAAMC,MAAMJ,O,6BAChBoG,G,iDAAXlW,E,WACJkW,EAAatkB,eAAeoO,G,4DAG3BnF,EAAQqb,EAAalW,G,SACLxF,KAAK2b,OAAOC,gBAAgBpW,G,OAA5CuB,E,OACN2U,EAAalW,GAAWtO,OAAOif,OAAO,GAAI9V,EAAO,CAC/C0G,QAASA,EACThI,MAAO8c,EAAA,KAAa5c,QAAQ8H,EAAS1G,EAAMvB,Y,uBAI/CkB,KAAKyV,MAAM3F,OAAO,eAAgB4L,G,qIArBlC,QAAqBzf,IAAjB+D,KAAKyb,QACP,MAAM,IAAI5gB,MAAM,uCAEhB,OAAOmF,KAAKyb,W,8FAddK,G,yGACAjG,E,+BAA2B,E,kBAGZyB,EAAA,KAAOja,OAAOye,EAAUjG,EAAS/X,OAAOie,c,iFAE/C,IAAIC,EAAJC,EAAAC,I,gOAkCO3f,G,yGAEAyD,KAAK2b,OAAOQ,YAAY5f,G,iFAE/B,IAAI6f,EAAJC,EAAAH,I,2TAMAI,EAAyB,gBAK3BA,E,iCACa1B,EAAeG,MAAMuB,G,cAApCnC,E,gBACiBhP,EAAA,KAAa2Q,SAAS3B,G,OAAvC2B,E,gDAEiB3Q,EAAA,KAAa2Q,W,QAA9BA,E,kBAGGA,E,iBACH9b,KAAKyV,MAAM3F,OAAO,c,4BAEdqK,E,kCACaqB,EAAce,aAC3BT,EACA3B,EAAOqC,a,QAFTb,E,gDAKeH,EAAce,aAAaT,G,QAA1CH,E,sBAGF3b,KAAKyb,QAAUE,E,KAEf3b,KAAKyV,M,UAA8BzV,KAAKyc,a,gCAA7B3M,O,UAAO,U,WAClB9P,KAAKyV,M,UAA8BzV,KAAK0c,a,yBAA7B5M,O,UAAO,U,MAElB9P,KAAK2c,oBAAoBhB,GAEzBA,EAAOiB,UAAUC,UAAU,SAAA7f,GACzBkO,EAAKuK,MAAM3F,OAAO,iBAAkB9S,KAGtCgD,KAAKyV,MAAM3F,OAAO,UAAW6L,EAAOrP,S,6DAGtC1O,QAAQ5B,MAAR8gB,EAAAC,IAGEC,EADEF,EAAAC,GAAEE,SAAWH,EAAAC,GAAEE,QAAQ5d,QAAQ,4BAA8B,EAChDoL,EAAA,KAAaC,oBACnBoS,EAAAC,cAAaf,EACPvR,EAAA,KAAaE,sBAEbF,EAAA,KAAayS,WAE9Bld,KAAKyV,MAAM3F,OAAO,eAAgBkN,G,QAGpChd,KAAKyV,MAAM3F,OAAO,gB,2JAGQ6L,GAAc,IAAA1N,EAAAjO,KACxC2b,EAAOwB,QACJC,KAAKlmB,OAAAmmB,EAAA,UAAAnmB,CAAO,SAAA8F,GAAK,MAAmB,mBAAfA,EAAM3C,QAC3BwiB,UAAU,kBAAM5O,EAAKwH,MAAM3F,OAAO,WAErC6L,EAAOwB,QACJC,KAAKlmB,OAAAmmB,EAAA,UAAAnmB,CAAO,SAAA8F,GAAK,MAAmB,aAAfA,EAAM3C,QAC3BwiB,UAFH3lB,OAAAmY,EAAA,KAAAnY,CAAAoY,mBAAAC,KAEa,SAAA+N,IAAA,OAAAhO,mBAAAG,KAAA,SAAA8N,GAAA,eAAAA,EAAA5N,KAAA4N,EAAA3N,MAAA,cAAA2N,EAAA3N,KAAA,EAAkB3B,EAAKuP,sBAAvB,cAAAD,EAAAlC,OAAA,SAAAkC,EAAApC,MAAA,wBAAAoC,EAAAtN,SAAAqN,S,mCAIbtd,KAAK2b,OAAO1L,S,sMAILjQ,KAAK2b,OAAOnW,S,0SAIGxF,KAAK2b,OAAOe,a,cAA5B3V,E,yBACC8U,EAAA,KAAa4B,MAAM1W,I,gMAGbkQ,G,2GACP0E,EAAS3b,KAAK2b,O,kBAEkCriB,QAAQ6C,IAAI,CAC9Dwf,EAAOC,gBAAgB3E,GACvB0E,EAAO+B,aAAazG,K,6CAFflQ,E,YAAWjI,E,EAAAA,SAAU0H,E,EAAAA,OAAQjK,E,EAAAA,K,kBAI7B,CACLA,KAAMA,EACNiK,OAAQA,EACRO,QAASA,EACTjI,SAAUA,EACVC,MAAO8c,EAAA,KAAa5c,QAAQ8H,EAASjI,GACrC0G,QAASyR,I,4CAGXrZ,QAAQ5B,MAAR2hB,EAAAzB,I,kBACO,M,8MAKT7b,EACAM,EACA9B,EACA+e,G,+FAEMC,EAAkB,SAACnW,EAAiBoW,GACpCF,GACFA,EAAS,CACPlW,UACAoW,WAKAnC,EAAS3b,KAAK2b,OACpBkC,EAAgB,EAAG,G,kBAGXlC,EAAOoC,YAAY1d,EAAOM,G,gEAE1B,IAAIqd,EAAJC,EAAA/B,I,WAGR2B,EAAgB,EAAG,IAEfhf,EAAOqf,GAAGC,EAAA,S,kCACNne,KAAKd,QAAQmB,EAAOM,EAAS9B,G,oNAKrC2G,EACAoY,G,8FAEMvI,EAA4BrV,KAAKyV,MAAMc,QAAQlB,SAAS7P,GACxD5N,EAAS,CACbgP,OAAQ,EACRwX,OAAQ,GAGJN,EAAQzI,EAASte,OACdF,EAAI,E,YAAGA,EAAIinB,G,wBACdF,GACFA,EAAS,CACPlW,QAAS7Q,EAAI,EACbinB,MAAOA,IAILpH,EAAUrB,EAASxe,G,mBAEjBmJ,KAAKqe,aAAa3H,EAAQrW,MAAOqW,EAAQ/V,S,QAC/C/I,EAAOgP,QAAU,E,qDAEjBhP,EAAOwmB,QAAU,E,QAbMvnB,I,gDAiBpBe,G,iNAGUyI,EAAeM,G,yGAExBX,KAAK2b,OAAO0C,aAAahe,EAAOM,G,+DAEhC,IAAI2d,EAAJC,EAAArC,I,0MAII7b,EAAeM,EAAiB9B,G,yGAEpCmB,KAAK2b,OAAO6C,eAAene,EAAOM,EAAS9B,G,+DAE3C,IAAI4f,EAAJC,EAAAxC,I,kNAIU7b,EAAeM,G,yGAEzBX,KAAK2b,OAAOgD,cAActe,EAAOM,G,+DAEjC,IAAIie,EAAJC,EAAA3C,I,uTAKFtD,EAAQ5Y,KAAKyV,MAAMC,MAAMJ,OAC3BwJ,EAAgB,E,kBAGH9e,KAAK2b,OAAOoD,e,OAA3BzJ,E,0DAEAA,EAAS,G,QAGFze,EAAI,E,aAAGA,EAAIye,EAAOve,Q,oBACnBsJ,EAAQiV,EAAOze,KACjBwJ,KAASuY,G,yEAGgB5Y,KAAKgf,SAAS3e,G,QAArC4e,E,OACFA,IACFrG,EAAMvY,GAAS4e,EACfH,GAAiB,G,QARcjoB,I,wBAY/BioB,EAAgB,GAClB9e,KAAKyV,MAAM3F,OAAO,eAAgB8I,G,yMAIvBvY,EAAe3F,EAAgBmE,G,+GAEpCmB,KAAK2b,OAAOuD,gBAAgBxkB,G,uBACTsF,KAAK2b,OAAOwD,SAAS9e,EAAO3F,EAAQmE,G,cAAvDugB,E,gBAGApf,KAAK2b,OAAO0D,WACfjC,KACClmB,OAAAmmB,EAAA,SAAAnmB,CACE,SAACioB,GAAD,OACEA,EAASG,aAAeF,GAAcD,EAASI,aAGpDC,Y,kEAEG,IAAIC,EAAJC,EAAAxD,I,6HAKC0C,EAAb,SAAAe,GAAA,SAAAC,IAAA,OAAA1oB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAA4f,GAAA1oB,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAA0oB,GAAAloB,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAA0oB,EAAAD,GAAAC,EAAA,CAAA1oB,OAAA2oB,EAAA,KAAA3oB,CAAyC2D,QAE5ByjB,EAAb,SAAAwB,GAAA,SAAAC,IAAA,OAAA7oB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAA+f,GAAA7oB,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAA6oB,GAAAroB,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAA6oB,EAAAD,GAAAC,EAAA,CAAA7oB,OAAA2oB,EAAA,KAAA3oB,CAAwC2D,QAE3BmjB,EAAb,SAAAgC,GAAA,SAAAC,IAAA,OAAA/oB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAigB,GAAA/oB,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAA+oB,GAAAvoB,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAA+oB,EAAAD,GAAAC,EAAA,CAAA/oB,OAAA2oB,EAAA,KAAA3oB,CAAuC2D,QAE1B4jB,EAAb,SAAAyB,GAAA,SAAAC,IAAA,OAAAjpB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAmgB,GAAAjpB,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAipB,GAAAzoB,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAipB,EAAAD,GAAAC,EAAA,CAAAjpB,OAAA2oB,EAAA,KAAA3oB,CAA0C2D,QAE7BuhB,EAAb,SAAAgE,GAAA,SAAAC,IAAA,OAAAnpB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAqgB,GAAAnpB,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAmpB,GAAA3oB,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAmpB,EAAAD,GAAAC,EAAA,CAAAnpB,OAAA2oB,EAAA,KAAA3oB,CAAsC2D,QAEzB4kB,EAAb,SAAAa,GAAA,SAAAC,IAAA,OAAArpB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAugB,GAAArpB,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAqpB,GAAA7oB,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAqpB,EAAAD,GAAAC,EAAA,CAAArpB,OAAA2oB,EAAA,KAAA3oB,CAAoC2D,QAEvBmhB,EAAb,SAAAwE,GAAA,SAAAC,IAAA,OAAAvpB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAygB,GAAAvpB,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAAupB,GAAA/oB,MAAAsI,KAAA7B,YAAA,OAAAjH,OAAAkN,EAAA,KAAAlN,CAAAupB,EAAAD,GAAAC,EAAA,CAAAvpB,OAAA2oB,EAAA,KAAA3oB,CAAgD2D,S,8wLCzTnC6lB,EAAb,oBAAAA,IAAAxpB,OAAAypB,EAAA,KAAAzpB,CAAA8I,KAAA0gB,GAAA,OAAAxpB,OAAA0pB,EAAA,KAAA1pB,CAAAwpB,EAAA,OAAApjB,IAAA,WAAAN,MAAA,eAAA6jB,EAAA3pB,OAAA4pB,EAAA,KAAA5pB,CAAAoY,mBAAAC,KAAA,SAAAC,EACwB2K,GADxB,IAAA4G,EAAAjF,EAAA,OAAAxM,mBAAAG,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEUmR,EAAWjjB,OAAOijB,SACpBjF,EAAW,MAEX3B,EALR,CAAAzK,EAAAE,KAAA,QAMMkM,EAAW,WAAH5E,OAAciD,EAAO6G,iBANnCtR,EAAAE,KAAA,mBAOmC,qBAAbmR,EAPtB,CAAArR,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAQYmR,EAASE,SARrB,OASMnF,EAAWiF,EATjBrR,EAAAE,KAAA,iBAUe9R,OAAOojB,OAChBpF,EAAWhe,OAAOojB,KAAKC,iBAX7B,eAcQrF,GAAYA,EAASsF,aACvBtF,EAASuF,4BAA6B,GAf5C3R,EAAA2L,OAAA,SAkBWS,GAlBX,yBAAApM,EAAAO,SAAAT,MAAA,SAAAsM,EAAAd,GAAA,OAAA6F,EAAAnpB,MAAAsI,KAAA7B,WAAA,OAAA2d,EAAA,MAAA4E,EAAA,GAqBSA,EAAAtV,sBAAwB,kBAAetN,OAAOijB,UAAYjjB,OAAOojB,O,i6JCPpEI,EAAkB,SAACC,GAAD,OAEhB,OAANA,QAAoBtlB,IAANslB,GAAqD,oBAA1BA,EAAU,aAC/CC,EAAc,SAACD,GAAD,OAAgCA,GAAmC,cAA7BA,EAAU,gBAOvDE,EAAa,IAAIC,EAAA,KAC5B,YACAF,EACA,SAACD,EAAGllB,GACF,GAAImlB,EAAYD,GAAI,OAAOG,EAAA,KAAUH,GACrC,IACE,GAAID,EAAgBC,GAAI,OAAOG,EAAA,KAAUxqB,OAAAyqB,EAAA,gBAAAzqB,CAAaqqB,EAAEtG,aACxD,MAAOrgB,GACP,OAAO8mB,EAAA,KAAUH,EAAGllB,EAAGzB,EAAIqiB,SAE3B,OAAKyE,EAAA,KAAUH,EAAGllB,IAEtB,SAAAulB,GAAC,OAAI,IAAIC,EAAA,kBAAeD,EAAE3G,cAMf6G,EAAb,SAAAC,GAGE,SAAAC,EAAmB7oB,EAAWoD,GAAa,IAAA2O,EAAA,OAAAhU,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAgiB,GACzC9W,EAAAhU,OAAAgN,EAAA,KAAAhN,CAAA8I,KAAA9I,OAAAiN,EAAA,KAAAjN,CAAA8qB,GAAA3qB,KAAA2I,KACEzD,GAAQ,OACR,SAACglB,GAAD,OAAerqB,OAAO+qB,OAAO/W,EAAKgX,YAAYC,KAAK,SAAAC,GAAC,OAAIA,IAAMb,KAC9D,SAACA,EAAGllB,GAAJ,OAAW6O,EAAKmX,GAAGd,GAAKG,EAAA,KAAUH,GAAKG,EAAA,KAAUH,EAAGllB,IACpDqlB,EAAA,OAPYxW,EAAAoX,KAAmB,WASjCpX,EAAKgX,WAAa/oB,EAPuB+R,EAH7C,OAAAhU,OAAAkN,EAAA,KAAAlN,CAAA8qB,EAAAD,GAAAC,EAAA,CAAiCN,EAAA,MA+BpBa,EAAYrrB,OAAAsrB,EAAA,WAAAtrB,CAEvB,SAAoC4Q,GACpC,OAAO4Z,EAAA,KACLA,EAAA,KACA,SAAClkB,GAAD,MACe,kBAANA,IAAmBsK,EAAO5Q,OAAAyqB,EAAA,iBAAAzqB,CAAcsG,KAAOsK,EAAO5Q,OAAAyqB,EAAA,eAAAzqB,CAAYsG,KAC3E,eAmBSilB,EAAOvrB,OAAAsrB,EAAA,WAAAtrB,CAElB,SAAoC4Q,GACpC,IAAM4a,EAAM5a,EAAOqW,EAAA,OAAIwE,IAAW,EAAP7a,QAAY7L,EACvC,OAAOylB,EAAA,KACLD,EACA,SAACjkB,GAAD,OACEikB,EAAWY,GAAG7kB,IAAMA,EAAEolB,IAAI,UAAe3mB,IAARymB,GAAqBllB,EAAEqlB,GAAGH,KAC7D,UAQSI,EAAYP,EAAU,IAItBQ,EAAOR,EAAU,IAIjBS,EAAST,IAITU,EAAaV,EAAU,IASvBW,EAAUxB,EAAA,KACrBa,EAAU,IACV,SAAChB,GACC,IACE,MAAoB,kBAANA,GAAkBrqB,OAAAyqB,EAAA,cAAAzqB,CAAWqqB,KAAOA,EAClD,MAAOpoB,IACT,OAAO,GAET,WAUWgqB,EAAQjsB,OAAAsrB,EAAA,WAAAtrB,CACnB,SAAoBksB,GAApB,OAAiC1B,EAAA,KAAQ,CAACA,EAAA,KAAU0B,MAUhD,SAAUC,EAASjB,GACvB,MAAO,CAACkB,KAAKC,MAAOnB,GCnJhB,SAAUoB,EACdjtB,EACAQ,GAEE,IAAE0sB,EAEF,GADkB,kBAATltB,IAAmBA,EAAOW,OAAAyqB,EAAA,gBAAAzqB,CAAaX,IAC9CkrB,EAAWY,GAAG9rB,GAAO,CACnB,GAAAA,EAAKssB,GAAG,GAAI,MAAM,IAAIhoB,MAAM,sBAChC,GAAItE,EAAKqsB,IAAIzE,EAAA,OAAIwE,IAAa,EAAT5rB,IAAc,MAAM,IAAI8D,MAAM,oBACnD4oB,EAAMvsB,OAAAwsB,EAAA,cAAAxsB,CAAWA,OAAAwsB,EAAA,WAAAxsB,CAAQX,GAAOQ,OAC3B,IAAoB,kBAATR,IAAqBW,OAAAwsB,EAAA,cAAAxsB,CAAWX,GAM5C,MAAE,IAAIsE,MAAM,yCALZ,IAAE8oB,EAAMzsB,OAAAwsB,EAAA,WAAAxsB,CAAQX,GAChB,GAAAW,OAAAwsB,EAAA,iBAAAxsB,CAAcysB,KAAS5sB,EACzB,MAAM,IAAI8D,MAAM,oDAClB4oB,EAAME,EAIN,OAAKF,EAGT,IAAMG,EAAmB,SAACrC,GAAD,OAEvBA,IAAwC,IAAlCA,EAAU,qBAUZ,SAAUsC,EAAchgB,GAC1B,OAAK3M,OAAA2qB,EAAA,SAAA3qB,CAAM2M,EAAM,SAAA+T,EAAK5a,GAClB,GAD2B9F,OAAA4sB,EAAA,KAAA5sB,CAAA0gB,GAC3BgM,EAAiB5mB,GACb,IACJ,OAAOA,EAAM+mB,UACb,MAAO5qB,IAEP,OAAG6D,ICtDJ,ICCKgnB,EDDCC,EAAOvC,EAAA,KAClB,CACE7iB,OAAQ4jB,EAAK,IACbyB,WAAYzB,EAAK,IACjBnD,WAAYyD,GAEd,QAUWoB,EAAqBzC,EAAA,KAAO,CAErC1a,QAAOyb,EAAK,IACZ2B,oBAAmBlB,EACnBmB,UAAS5B,EAAK,IAEhB6B,MAAO7B,EAAK,GACZ8B,kBAAmB9B,EAAK,IACxB+B,aAAc/B,EAAK,IACnBgC,UAAW1B,EACX2B,YAAa3B,EACb4B,UAAW7B,EACX8B,OAAQ1B,KC3BV,SAAYc,GACRA,EAAa,WAAf,UACEA,EAAa,QAAf,OACEA,EAAa,WAAf,UACEA,EAAa,UAAf,SACEA,EAAa,cAAf,aACAA,EAAA,uBACAA,EAAA,sBAPF,CAAYA,MAAe,KAUE,IAAIlC,EAAuBkC,EAAc,gBAA/D,I,ECFKa,EDOCC,EAAapD,EAAA,KACxBA,EAAA,KAAe,CACbA,EAAA,KAAO,CACHxiB,QAAOujB,EAAK,MAEhBf,EAAA,KAAU,CACRqD,MAAOrD,EAAA,KAAQuC,GACfe,aAAcb,EACZc,SAAQxC,EAAK,SAMRyC,EAAUxD,EAAA,KAAe,CACpCA,EAAA,KACEA,EAAA,KAAO,CACHyD,IAAGL,EACHnkB,QAAOmkB,KAGbpD,EAAA,KAAQ,CAONA,EAAA,KAAWA,EAAA,KAAO,CAAEhM,MAAOgM,EAAA,KAAUsC,EAAavd,YAClDib,EAAA,KACEA,EAAA,KAAO,CACHhM,MAAKgM,EAAA,KAAQ,CAACA,EAAA,KAAUsC,EAAatd,MAAOgb,EAAA,KAAUsC,EAAard,WACnE1E,GAAEyf,EAAA,KACF0D,cAAa1D,EAAA,KACb2D,UAAS3D,EAAA,KACT4D,mBAAkB5D,EAAA,QAGxBA,EAAA,KACEA,EAAA,KAAO,CACLhM,MAAOgM,EAAA,KAAQ,CACbA,EAAA,KAAUsC,EAAapd,QACvB8a,EAAA,KAAUsC,EAAauB,YACvB7D,EAAA,KAAUsC,EAAand,YAEzB5E,GAAIyf,EAAA,KACJ0D,cAAe1D,EAAA,KACf2D,UAAW3D,EAAA,KACX4D,mBAAoB5D,EAAA,KACpB8D,WAAY9D,EAAA,YAcP+D,EAAW/D,EAAA,KACtBA,EAAA,KACEA,EAAA,KACAA,EAAA,KAAWA,EAAA,KAASA,EAAA,KAAiCwD,MErF5CQ,EAAoBhE,EAAA,KAC/BA,EAAA,KAAO,CACLiE,OAAQjE,EAAA,KACRkE,YAAalE,EAAA,KACbmE,SAAUnE,EAAA,KACVoE,YAAapE,EAAA,Q,aDOjB,SAAYmD,GACRA,EAAY,aAAe,YAC3BA,EAAY,aAAe,YAC3BA,EAAY,kBAAoB,gBAChCA,EAAY,iBAAmB,eAC/BA,EAAY,mBAAqB,iBACjCA,EAAY,mBAAqB,iBACjCA,EAAY,UAAY,SACxBA,EAAY,gBAAkB,cAC9BA,EAAY,aAAe,WAC3BA,EAAY,oBAAsB,kBAClCA,EAAY,yBAA2B,uBACvCA,EAAY,oBAAsB,mBAZtC,CAAYA,MAAW,KAchB,IEoDKkB,EFpDCC,EAAe,IAAIlE,EAAsB+C,EAAa,eAGtDoB,EAAUvE,EAAA,KAAWA,EAAA,KAAO,CAAErnB,KAAM2rB,KAG3CE,EAAoBxE,EAAA,KACxBA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLyE,mBAAoB1D,EAAK,KAE3BwD,KAKSG,EAAY1E,EAAA,KACvBA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAYwB,WAC5BC,6BAA8B7D,EAAK,KAErCwD,KAMSM,GAAY7E,EAAA,KACvBA,EAAA,KAAe,CACbA,EAAA,KAAO,CACHrnB,KAAIqnB,EAAA,KAAUmD,EAAY2B,aAE9BN,KAMSO,GAAgB/E,EAAA,KAC3BA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAY6B,gBAC5BC,mBAAoBlE,EAAK,GACzBnD,WAAYyD,EACZlkB,OAAQ4jB,EAAK,IACbyB,WAAYzB,EAAK,MAEnByD,KAMSU,GAAelF,EAAA,KAC1BA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAYgC,eAC5BC,OAAQ9D,IAEVkD,KAMSa,GAAkBrF,EAAA,KAC7BA,EAAA,KAAe,CACbA,EAAA,KAAO,CACHsF,SAAQvE,EAAK,IACbwE,sBAAqB/D,EACrBgE,mBAAkBzE,EAAK,IACvB6B,MAAK7B,EAAK,GACV0E,mBAAkB1E,EAAK,IACzB2E,cAAe3E,EAAK,IACpBgC,UAAW1B,IAEbmD,KAISmB,GAAgB3F,EAAA,KAC3BA,EAAA,KAAO,CACL4F,MAAO5F,EAAA,KAAQwB,MAKNqE,GAAW7F,EAAA,KACtBA,EAAA,KAAO,CACLxJ,OAAQwJ,EAAA,KAAQ2F,OAMdG,GAAqB9F,EAAA,KACzBA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLiF,mBAAoBlE,EAAK,GACzBpiB,MAAO6iB,EACPuE,UAAWvE,EACXwE,KAAMzD,EACNvpB,OAAQwoB,EACRyE,UAAWzE,EACT0E,IAAGnF,EAAK,IACRoF,SAAQN,KAEZR,MAKSe,GAAiBpG,EAAA,KAC5BA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAYkD,mBAE9BP,MAOSQ,GAAiBtG,EAAA,KAC5BA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAYoD,mBAE9BT,MAOSU,GAASxG,EAAA,KACpBA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAYsD,QAC5BxB,mBAAoBlE,EAAK,GACzBqE,OAAQ9D,IAEV+D,MAMSqB,GAAc1G,EAAA,KACzBA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAYwD,cAC5BZ,UAAWvE,EACX5D,WAAYyD,IAEdgE,MAKSuB,GAAW5G,EAAA,KACtBA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAY0D,WAC5BpC,mBAAoB1D,EAAK,KAE3BwD,KAKSuC,GAAe9G,EAAA,KAC1BA,EAAA,KAAO,CACLsF,SAAUvE,EAAK,IACfwE,sBAAuB/D,EACvBgE,mBAAoBzE,EAAK,IACzBgG,YAAavF,EACbwF,eAAgBjG,EAAK,IACrB6B,MAAO7B,EAAK,GACZyB,WAAYzB,EAAK,OAIRkG,GAAkBjH,EAAA,KAC7BA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAY+D,oBAE9BJ,GACAtC,KAKS2C,GAAuBnH,EAAA,KAClCA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAYiE,yBAE9BN,GACAtC,KAKS6C,GAAkBrH,EAAA,KAC7BA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLrnB,KAAMqnB,EAAA,KAAUmD,EAAYmE,oBAE9BR,GACAtC,KAwBS+C,GAAS/xB,OAAAsrB,EAAA,WAAAtrB,CAapB,SAAoBksB,GAApB,OACA1B,EAAA,KAAe,CAAC0B,EAAO1B,EAAA,KAAWA,EAAA,KAAO,CAAEiD,UAAW7B,SAI3CoG,IAAmBC,EAAA,GAAAjyB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAC7BtE,EAAYwB,UAAY4C,GAAO7C,IADFlvB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAE7BtE,EAAY2B,UAAYyC,GAAO1C,KAFFrvB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAG7BtE,EAAY6B,eAAiBuC,GAAOxC,KAHPvvB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAI7BtE,EAAYgC,cAAgBoC,GAAOrC,KAJN1vB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAK7BtE,EAAYkD,gBAAkBkB,GAAOnB,KALR5wB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAM7BtE,EAAYoD,gBAAkBgB,GAAOjB,KANR9wB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAO7BtE,EAAYsD,OAASc,GAAOf,KAPChxB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAQ7BtE,EAAYwD,aAAeY,GAAOb,KARLlxB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAS7BtE,EAAY0D,UAAYU,GAAOX,KATFpxB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAU7BtE,EAAY+D,iBAAmBK,GAAON,KAVTzxB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAW7BtE,EAAYiE,sBAAwBG,GAAOJ,KAXd3xB,OAAAwF,EAAA,KAAAxF,CAAAiyB,EAY7BtE,EAAYmE,iBAAmBC,GAAOF,KAZTI,GEzQnBC,GAAe1H,EAAA,KAC1BA,EAAA,KAAe,CACbA,EAAA,KAAO,CAEHvC,SAAQgE,EAAM8F,GAAOnB,OAEzBpG,EAAA,KAAU,CAEN2H,kBAAiBlG,EAAM8F,GAAO1C,KAO9B+C,OAAMnG,EAAM8F,GAAOjB,KAMnBuB,cAAapG,EAAMJ,GAMnByG,aAAYrG,EAAM8F,GAAOrC,KAKzB6C,OAAMtG,EAAM8F,GAAOf,KAMnBwB,YAAWvG,EAAM8F,GAAOb,KAM1BuB,gBAAiBxG,EAAM8F,GAAO1C,KAM9BqD,qBAAsBzG,EAAM8F,GAAO1C,UAS5BsD,GAAgBnI,EAAA,KAAWA,EAAA,KAASA,EAAA,KAAiC0H,MAGlF,SAAYrD,GACVA,EAAA,qBACAA,EAAA,uBACAA,EAAA,uBACAA,EAAA,mBACAA,EAAA,uBACAA,EAAA,yBACAA,EAAA,uBACAA,EAAA,uBACAA,EAAA,sBATF,CAAYA,MAAwB,KCnE7B,IAAM+D,GAAcpI,EAAA,KACzBA,EAAA,KAAO,CACLlc,QAAS0d,EACTlc,QAAS0a,EAAA,KACTqI,SAAU7G,EACR8G,YAAWtI,EAAA,KACXrM,SAAQoQ,EACRnQ,OAAMoM,EAAA,KAAWA,EAAA,KAASA,EAAA,KAA+BwB,IACzD+G,UAASvI,EAAA,KACTA,EAAA,KAAU,CACJwI,OAAIxI,EAAA,KACNA,EAAA,KAAe,CACbA,EAAA,KAAO,CACLyI,OAAQzI,EAAA,OAEVA,EAAA,KAAU,CACR0I,MAAO1E,EACP2E,MAAO3I,EAAA,KAAWA,EAAA,KAASA,EAAA,KAAiCA,EAAA,KAAQA,EAAA,gBAM9E4I,QAAS5I,EAAA,KACPA,EAAA,KACEA,EAAA,KACAA,EAAA,KACEA,EAAA,KAAe,CAACA,EAAA,KAAO,CAAEoF,OAAQ9D,IAAWtB,EAAA,KAAU,CAAE6I,cAAe7I,EAAA,YAI7EvG,KAAM0O,MAoBJ,SAAUW,GAAkB9U,GAC9B,OAAKxe,OAAA2qB,EAAA,aAAA3qB,CAAkB4yB,GAAYtG,OAAO9N,QAAQzZ,EAAW,GAW3D,SAAUwuB,GAAkBl0B,GACZ,kBAATA,IAAmBA,EAAOstB,EAActtB,IACnD,IAAMqB,EAASkyB,GAAYY,OAAOn0B,GAClC,GAAIW,OAAAyzB,EAAA,UAAAzzB,CAAOU,GAAS,MAAMgzB,EAAA,iBAAcC,OAAOjzB,GAC/C,OAAOA,EAAOkzB,MAGT,IC/EKC,GD+ECC,GAA4B,CACvCxlB,QAAS2Y,EAAA,eACTnX,QAAS,EACT+iB,SAAU5L,EAAA,eACV6L,YAAa,EACb3U,SAAU,GACVC,OAAQ,GACR2U,UAAW,GACXK,QAAS,GACTnP,KAAM,IC1FK8P,GAAgB/zB,OAAAyqB,EAAA,YAAAzqB,CAAS,GAAI,KAE1C,SAAY6zB,GACRA,EAAe,QAAjB,gBACEA,EAAe,mBAAjB,yBACAA,EAAA,6CAHF,CAAYA,QAAiB,K,obCUvB,SAAUG,GACdC,EACAC,GAEE,OAAK,WAA2C,IAAlC1V,EAAkCvX,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAAvBitB,EAAcC,EAASltB,UAAApH,OAAA,EAAAoH,UAAA,QAAAlC,EAC5C,IAAC,IAAMqB,KAAO6tB,EAAU,CACpB,IAAA3U,EAAU2U,EAAS7tB,GACnB,GAADkZ,EAAC,CACA,IAAA8U,EAAW5V,EAAMpY,IAAQ8tB,EAAa9tB,GACtCiuB,EAAc/U,EAAQ8U,EAAUD,GAClCE,IAAgBD,IAClB5V,EAAKxe,OAAAif,OAAA,GAAQT,EAARxe,OAAAwF,EAAA,KAAAxF,CAAA,GAAgBoG,EAAMiuB,MAG/B,OAAO7V,GCjBJ,IAAM8V,GAAWt0B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,WAArBA,GAMXw0B,GAAiBx0B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,iBAArBA,GAYjBy0B,GAAcz0B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,cAArBA,GAMd00B,GAAgB10B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,gBAArBA,GAYhB20B,GAAoB30B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,qBAAqB2K,IACzE,SAACiqB,EAAgBzf,GAAjB,MAAsC,CAAEyf,UAAS9vB,OAAO,EAAMqQ,UAInD0f,GAAmB70B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,mBAArBA,GAMnB80B,GAAiB90B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,iBAArBA,GAMjB+0B,GAAmB/0B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,mBAArBA,GAMnBg1B,GAAuBh1B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,wBAAwB2K,IAC/E,SAACiqB,EAAgBzf,GAAjB,MAAsC,CAAEyf,UAAS9vB,OAAO,EAAMqQ,UAInD8f,GAAmBj1B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,mBAArBA,GAMnBk1B,GAAel1B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,eAArBA,GAGfqyB,GAAgBryB,OAAAu0B,GAAA,wBAAAv0B,CAAqB,gBAArBA,GAMhBm1B,GAAqBn1B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,sBAAsB2K,IAC3E,SAACiqB,EAAgBzf,GAAjB,MAAsC,CAAEyf,UAAS9vB,OAAO,EAAMqQ,UAInDigB,GAAoBp1B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,oBAArBA,GAMpBq1B,GAAgBr1B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,gBAArBA,GAGhBs1B,GAAiBt1B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,iBAArBA,GAMjBu1B,GAAsBv1B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,uBAAuB2K,IAC7E,SAACiqB,EAAgBzf,GAAjB,MAAsC,CAAEyf,UAAS9vB,OAAO,EAAMqQ,UCtFhE,SAASqgB,KAA0E,IAA9DhX,EAA8DvX,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAA9C6sB,GAAahB,YAAaqB,EAAoBltB,UAAApH,OAAA,EAAAoH,UAAA,QAAAlC,EAC/E,OAAE/E,OAAAu0B,GAAA,cAAAv0B,CAAWs0B,GAAUH,GAAgBA,EAAOS,QAAQ9B,YAC5CtU,EAId,SAASJ,KAA+E,IAAxEI,EAAwEvX,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAAzC6sB,GAAa1V,OAAQ+V,EAAoBltB,UAAApH,OAAA,EAAAoH,UAAA,QAAAlC,EACpF,OAAE/E,OAAAu0B,GAAA,cAAAv0B,CAAWw0B,GAAgBL,GACtBn0B,OAAAy1B,GAAA,OAAAz1B,CAAI,CAACm0B,EAAOS,QAAQzrB,OAAQgrB,EAAOS,QAAQc,aAAclX,GACtDA,EAId,SAASL,KAAsE,IAA7DK,EAA6DvX,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAA3C6sB,GAAa3V,SAAUgW,EAAoBltB,UAAApH,OAAA,EAAAoH,UAAA,QAAAlC,EAC3E,GAAE/E,OAAAu0B,GAAA,cAAAv0B,CAAWy0B,GAAaN,GAAS,CAC/B,IAAEtZ,EAAO,CAACsZ,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAChD,GAAAzJ,OAAAy1B,GAAA,OAAAz1B,CAAI6a,EAAM2D,GAAQ,OAAOA,EACzB,IAAEgB,EAAmB,CACvBhB,MAAOsO,EAAavd,QACpB0e,IAAK,CAAEjmB,QAASif,EAAA,SAChBxd,QAAS,CAAEzB,QAASif,EAAA,UAElB,OAAGjnB,OAAAy1B,GAAA,OAAAz1B,CAAI6a,EAAM2E,EAAShB,GACrB,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAW00B,GAAeP,GAAS,CACxC,IAAEwB,EAAO,CAACxB,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAClDmsB,EAAmB,CACjBpX,MAAOsO,EAAatd,KACpBye,IAAK,CAAEjmB,QAASif,EAAA,SAChBxd,QAAS,CAAEzB,QAASif,EAAA,SACpBlc,GAAIopB,EAAOS,QAAQ7pB,GACnBmjB,cAAeiG,EAAOS,QAAQ1G,cAC9BC,UAAWgG,EAAOS,QAAQzG,UAC1BC,mBAAoB+F,EAAOS,QAAQxG,oBAGnC,OAAGpuB,OAAAy1B,GAAA,OAAAz1B,CAAI21B,EAAMC,EAASpX,GACrB,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAW20B,GAAmBR,GAAS,CAChD,IAAM0B,EAAO,CAAC1B,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SACpD,OAAIzJ,OAAAy1B,GAAA,OAAAz1B,CAAG,GAAAggB,OAAK6V,EAAL,CAAW,UAAUrX,KAAWsO,EAAavd,QAAgBiP,EAC7Dxe,OAAAy1B,GAAA,SAAAz1B,CAAM61B,EAAMrX,GACd,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAW+0B,GAAkBZ,GAAS,CAC3C,IAAE2B,EAAO,CAAC3B,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAChDssB,EAA+B/1B,OAAAy1B,GAAA,OAAAz1B,CAAI81B,EAAMtX,GACzC,OAACuX,GAAWA,EAAQvX,QAAUsO,EAAatd,MAAQumB,EAAQhrB,KAAOopB,EAAOS,QAAQ7pB,IAGnFgrB,EADE5B,EAAOS,QAAQrD,cAAgB4C,EAAOhf,KAAK1L,QACtCzJ,OAAAif,OAAA,GACF8W,EAAO,CACVtsB,QAAOzJ,OAAAif,OAAA,GACF8W,EAAQtsB,QAAO,CAClBzB,QAASmsB,EAAOS,QAAQoB,iBAIrBh2B,OAAAif,OAAA,GACF8W,EAAO,CACV9H,IAAGjuB,OAAAif,OAAA,GACE8W,EAAQ9H,IAAG,CACdjmB,QAASmsB,EAAOS,QAAQoB,iBAGvBh2B,OAAAy1B,GAAA,OAAAz1B,CAAI81B,EAAMC,EAASvX,IAjBjBA,EAkBJ,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWi1B,GAAkBd,GAAS,CAC3C,IAAE8B,EAAO,CAAC9B,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAChDysB,EAA+Bl2B,OAAAy1B,GAAA,OAAAz1B,CAAIi2B,EAAMzX,GACzC,OAAC0X,GAAWA,EAAQ1X,QAAUsO,EAAatd,MAAQ0mB,EAAQnrB,KAAOopB,EAAOS,QAAQ7pB,IAGnFmrB,EADE/B,EAAOS,QAAQrD,cAAgB4C,EAAOhf,KAAK1L,QACtCzJ,OAAAif,OAAA,GACFiX,EAAO,CACVzsB,QAAOzJ,OAAAif,OAAA,GACFiX,EAAQzsB,QAAO,CAClBskB,SAAUoG,EAAOS,QAAQuB,kBAItBn2B,OAAAif,OAAA,GACFiX,EAAO,CACVjI,IAAGjuB,OAAAif,OAAA,GACEiX,EAAQjI,IAAG,CACdF,SAAUoG,EAAOS,QAAQuB,kBAGxBn2B,OAAAy1B,GAAA,OAAAz1B,CAAIi2B,EAAMC,EAAS1X,IAjBjBA,EAkBJ,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWk1B,GAAcf,GAAS,CACvC,IAAEiC,EAAO,CAACjC,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAChD4sB,EAA+Br2B,OAAAy1B,GAAA,OAAAz1B,CAAIo2B,EAAM5X,GACzC,OAAC6X,GAAWA,EAAQ7X,QAAUsO,EAAatd,MAC3C6mB,EAAGr2B,OAAAif,OAAA,GAAQoX,EAAO,CAAE7X,MAAOsO,EAAard,UACrCzP,OAAAy1B,GAAA,OAAAz1B,CAAIo2B,EAAMC,EAAS7X,IAFkCA,EAGvD,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWqyB,GAAe8B,GAAS,CAC5C,IAAMmC,EAAO,CAACnC,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAChD8sB,EAA+Bv2B,OAAAy1B,GAAA,OAAAz1B,CAAIs2B,EAAM9X,GAC7C,OACG+X,GACCA,EAAQ/X,QAAUsO,EAAatd,MAAQ+mB,EAAQ/X,QAAUsO,EAAard,SACxE8mB,EAAQxrB,KAAOopB,EAAOS,QAAQ7pB,GAEvByT,GACT+X,EAAOv2B,OAAAif,OAAA,GAAQsX,EAAO,CAAE/X,MAAOsO,EAAapd,OAAQ4e,WAAY6F,EAAOS,QAAQtG,aACxEtuB,OAAAy1B,GAAA,OAAAz1B,CAAIs2B,EAAMC,EAAS/X,IACrB,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWo1B,GAAmBjB,GAAS,CAChD,IAAMqC,EAAO,CAACrC,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAChDgtB,EAA+Bz2B,OAAAy1B,GAAA,OAAAz1B,CAAIw2B,EAAMhY,GAC7C,OAAKiY,GAAWA,EAAQjY,QAAUsO,EAAapd,QAC/C+mB,EAAOz2B,OAAAif,OAAA,GAAQwX,EAAO,CAAEjY,MAAOsO,EAAauB,aACrCruB,OAAAy1B,GAAA,OAAAz1B,CAAIw2B,EAAMC,EAASjY,IAFoCA,EAGzD,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWq1B,GAAelB,GAAS,CAC5C,IAAMuC,EAAO,CAACvC,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAChDktB,EAA+B32B,OAAAy1B,GAAA,OAAAz1B,CAAI02B,EAAMlY,GAC7C,OAAKmY,GAAWA,EAAQnY,QAAUsO,EAAauB,YAC/CsI,EAAO32B,OAAAif,OAAA,GAAQ0X,EAAO,CAAEnY,MAAOsO,EAAand,WACrC3P,OAAAy1B,GAAA,OAAAz1B,CAAI02B,EAAMC,EAASnY,IAFwCA,EAG7D,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWs1B,GAAgBnB,GAAS,CAC7C,IAAMyC,EAAO,CAACzC,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAC9CotB,EAA+B72B,OAAAy1B,GAAA,OAAAz1B,CAAI42B,EAAMpY,GAC/C,OACGqY,GACA,CAAC/J,EAAapd,OAAQod,EAAauB,WAAYvB,EAAand,UAAUgR,SACrEkW,EAAQrY,OAILxe,OAAAy1B,GAAA,SAAAz1B,CAAM42B,EAAMpY,GADVA,EAEJ,OAAOA,EAST,IAAMsY,GAAkB9C,GAC7B,CAAElB,YAAA0C,GAAapX,UAAQD,aACvB2V,I,aC1JWiD,GAAc/2B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,cAArBA,GAMdg3B,GAA+Bh3B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,+BAArBA,GAS/Bi3B,GAAuBj3B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,wBAAwB2K,IAC/E,SAAA+V,EAEEvL,GAFF,IACIsZ,EADJ/N,EACI+N,OAAQyI,EADZxW,EACYwW,UAAWC,EADvBzW,EACuByW,GADvB,MAGM,CAAEvC,QAAS,CAAEnG,SAAQyI,YAAWC,GAAIA,GAAM/K,KAAKC,OAASlX,UAInDiiB,GAAqCp3B,OAAAu0B,GAAA,wBAAAv0B,CAChD,sCACA2K,IAAI,SAACiqB,EAAgBzf,GAAjB,MAAiD,CAAEyf,UAAS9vB,OAAO,EAAMqQ,UAGlEkiB,GAAar3B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,aAArBA,GAMbs3B,GAAkBt3B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,kBAArBA,GCxB/B,SAAS+yB,KAEa,IADpBvU,EACoBvX,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GADc6sB,GAAaf,UAC/CoB,EAAoBltB,UAAApH,OAAA,EAAAoH,UAAA,QAAAlC,EAElB,GAAE/E,OAAAu0B,GAAA,cAAAv0B,CAAW+2B,GAAa5C,GACtB,OAAJn0B,OAAAif,OAAA,GACKT,EAAK,CACRwU,OAAMhzB,OAAAif,OAAA,GACDT,EAAMwU,OACNmB,EAAOS,WAGT,GAAI50B,OAAAu0B,GAAA,cAAAv0B,CAAWq3B,GAAYlD,GAAS,CACrC,IAAEtZ,EAAO,CAAC,SAAU,QAASsZ,EAAOhf,KAAK7G,SAC7C,OAAOtO,OAAAy1B,GAAA,OAAAz1B,CACL6a,EADQ,CAGNsZ,EAAOS,QAAQ2C,QAHTvX,OAAAhgB,OAAAw3B,GAAA,KAAAx3B,CAIFA,OAAAy1B,GAAA,SAAAz1B,CAAM,GAAI6a,EAAM2D,GAAoBlW,OAAO,SAAAmvB,GAAI,OAAIA,IAAStD,EAAOS,QAAQ2C,WAEjF/Y,GAEG,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWs3B,GAAiBnD,GAAS,CAC9C,IAAMwB,EAAO,CAAC,SAAU,QAASxB,EAAOhf,KAAK7G,SAO7C,OANAkQ,EAAQxe,OAAAy1B,GAAA,OAAAz1B,CACN21B,EACC31B,OAAAy1B,GAAA,SAAAz1B,CAAM,GAAI21B,EAAMnX,GAAoBlW,OAAO,SAAA3C,GAAC,OAAIA,IAAMwuB,EAAOS,QAAQ2C,SACtE/Y,GAEExe,OAAAy1B,GAAA,WAAAz1B,CAAQA,OAAAy1B,GAAA,OAAAz1B,CAAI21B,EAAMnX,MAASA,EAAQxe,OAAAy1B,GAAA,SAAAz1B,CAAM21B,EAAMnX,IAC5CA,EACF,OAAOA,EAOT,I,GAAMkZ,GAAmB1D,GAAuB,CAAEjB,cAAae,I,oBCtChE,SAAU6D,GAAa9J,GAC3B,IAAM+J,EAAuB,GADoBC,GAAA,EAAAC,GAAA,EAAAC,OAAAhzB,EAAA,IAEjD,QAAAizB,EAAAC,EAAmBpK,EAAnBjoB,OAAAsyB,cAAAL,GAAAG,EAAAC,EAAAvf,QAAAjI,MAAAonB,GAAA,OAAWrH,EAAXwH,EAAAlyB,MACE8xB,EAAQ73B,KAAKusB,EAAOkE,EAAKxD,WAAY,IAAKV,EAAOkE,EAAK7oB,OAAQ,IAAK6oB,EAAKpI,aAHzB,MAAA1kB,GAAAo0B,GAAA,EAAAC,EAAAr0B,EAAA,YAAAm0B,GAAA,MAAAI,EAAAE,QAAAF,EAAAE,SAAA,WAAAL,EAAA,MAAAC,GAIjD,OAAO/3B,OAAAyqB,EAAA,aAAAzqB,CAAUA,OAAAwsB,EAAA,UAAAxsB,CAAO43B,IAUpB,SAAUQ,GAAcxI,GAC5B,OAAO5vB,OAAAyqB,EAAA,UAAAzqB,CAAO4vB,GASV,SAAUyI,KAAsB,IAAXx4B,EAAWoH,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAAF,GAClC,OAAOjH,OAAAwsB,EAAA,WAAAxsB,CAAQA,OAAAyqB,EAAA,eAAAzqB,CAAYH,IAQvB,SAAUy4B,KACZ,OAAKt4B,OAAAyqB,EAAA,gBAAAzqB,CAAaA,OAAAyqB,EAAA,eAAAzqB,CAAY,IAQ5B,SAAUu4B,KACZ,OAAKv4B,OAAAyqB,EAAA,gBAAAzqB,CAAaosB,KAAKC,OASrB,SAAUmM,GAAmBvU,GAAkB,IAAAvD,EACauD,EAAKyO,qBAC/D,CAAC7D,EAAyB4J,QAASxU,EAAKyO,qBAAqB,IAC7DzO,EAAKwO,gBACL,CAAC5D,EAAyB6J,SAAUzU,EAAKwO,gBAAgB,IACzDxO,EAAKuO,YACL,CAAC3D,EAAyB8J,SAAU1U,EAAKuO,YAAY,IACrDvO,EAAKsO,OACL,CAAC1D,EAAyB+J,UAAW3U,EAAKsO,OAAO,IACjDtO,EAAKqO,aACL,CAACzD,EAAyBgK,SAAU5U,EAAKqO,aAAa,IACtDrO,EAAKoO,cACL,CAACxD,EAAyBnf,OAAQuU,EAAKoO,cAAc,IACrDpO,EAAKmO,OACL,CAACvD,EAAyBiK,SAAU7U,EAAKmO,OAAO,IAChDnO,EAAKkO,kBACL,CAACtD,EAAyBkK,SAAU9U,EAAKkO,kBAAkB,IAC3D,CAACtD,EAAyBmK,QAAS/U,EAAKgE,SAAS,IAjBJpH,EAAA7gB,OAAAi5B,GAAA,KAAAj5B,CAAA0gB,EAAA,GAC5CwY,EAD4CrY,EAAA,GACpCsY,EADoCtY,EAAA,GAkBjDuY,KACEnV,EAAKqO,eAAgBrO,EAAKsO,WAEtBtO,EAAKmO,QAAUnO,EAAKuO,aAAevO,EAAKoO,qBAExCttB,EACNsjB,KAAepE,EAAKwO,iBAAmBxO,EAAKyO,sBAAwBzO,EAAKoO,eACzE,MAAK,CACDjK,WAAQnE,EAAKgE,SAAS,GAAGuI,KAAKpI,WAC9B8Q,OAAJA,EACIzI,UAAOxM,EAAKgE,SAAS,GAAGwI,UACxBF,UAAOtM,EAAKgE,SAAS,GAAGsI,UAC5B/sB,OAAQygB,EAAKgE,SAAS,GAAGzkB,OACzB61B,UAAWpV,EAAKgE,SAAS,GAAGwH,mBAC5B3f,QAASmU,EAAKgE,SAAS,GAAG6H,SAASwJ,WACnCnwB,MAAO8a,EAAKgE,SAAS,GAAG9e,MACxBusB,aAAczR,EAAKgE,SAAS,GAAG8H,sBAC/B5C,UAAWlJ,EAAKgE,SAAS,GAAG+H,mBAC5BroB,OAAQsc,EAAKgE,SAAS,GAAGuI,KAAK7oB,OAC9B4xB,gBAAiBtV,EAAKgE,SAAS,GAAGuI,KAAKxD,WAAWsM,WAClD5I,IAAKzM,EAAKgE,SAAS,GAAGyI,IACtB8I,UAAW,IAAIpN,KAAKnI,EAAKgE,SAAS,IAClCkR,UAAW,IAAI/M,KAAK+M,GACpBC,UACA/Q,a,ICzECoR,G,yQAhBCC,IAAMC,GAAA,GAAA35B,OAAAwF,EAAA,KAAAxF,CAAA25B,GACThM,EAAYwB,UAAY,IADfnvB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAEThM,EAAY2B,UAAY,GAFftvB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAGThM,EAAY6B,eAAiB,GAHpBxvB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAIThM,EAAYgC,cAAgB,IAJnB3vB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAKThM,EAAYkD,gBAAkB,GALrB7wB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAMThM,EAAYoD,gBAAkB,GANrB/wB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAOThM,EAAYsD,OAAS,GAPZjxB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAQThM,EAAYwD,aAAe,IARlBnxB,OAAAwF,EAAA,KAAAxF,CAAA25B,GASThM,EAAY0D,UAAY,IATfrxB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAUThM,EAAY+D,iBAAmB,IAVtB1xB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAWThM,EAAYiE,sBAAwB,IAX3B5xB,OAAAwF,EAAA,KAAAxF,CAAA25B,GAYThM,EAAYmE,iBAAmB,IAZtB6H,IA2BN,SAAUC,GAAmBjJ,GACjC,IAAMkJ,EAAclJ,EAAS3P,OAAOrW,IAAI,SAAA7E,GAAK,OAAI9F,OAAAyqB,EAAA,aAAAzqB,CAAUyqB,EAAA,OAAI6B,OAAOxmB,EAAMsqB,UAC5E,OAAOpwB,OAAAyqB,EAAA,aAAAzqB,CAAUyqB,EAAA,OAAI6B,OAAOuN,IAWxB,SAAUC,GACdzM,EACAC,EACAC,GAEA,OAAQF,EAAkB0M,UAAYzM,EAAayM,UAAYxM,IAActG,EAAA,YACzEA,EAAA,YACAjnB,OAAAyqB,EAAA,aAAAzqB,CACEA,OAAAwsB,EAAA,UAAAxsB,CAAO,CAACssB,EAAOe,EAAmB,IAAKf,EAAOgB,EAAc,IAAKhB,EAAOiB,EAAW,OAUrF,SAAUyM,GAAkBjU,GAC9B,OAAMA,EAAQ5iB,MACV,KAACwqB,EAAYkD,gBACb,KAAClD,EAAYoD,gBAET,IAAFkJ,EAASj6B,OAAAwsB,EAAA,UAAAxsB,CAAO,CAClBssB,EAAOoN,GAAO3T,EAAQ5iB,MAAO,GAC7BmpB,EAAOvG,EAAQkJ,mBAAoB,GACnC3C,EAAOvG,EAAQ0J,mBAAoB,GACnCnD,EAAOvG,EAAQyK,KAAKxD,WAAY,IAChCV,EAAOvG,EAAQ5c,MAAO,IACtBmjB,EAAOvG,EAAQwK,UAAW,IAC1BjE,EAAOvG,EAAQviB,OAAQ,IACvB8oB,EAAOvG,EAAQ0K,UAAW,IAC1BnE,EAAOvG,EAAQyK,KAAKpI,WAAY,IAChCkE,EAAOvG,EAAQyK,KAAK7oB,OAAQ,IAC5B2kB,EAAOvG,EAAQ2K,IAAK,MAKhB,OAFF3K,EAAQ5iB,OAASwqB,EAAYkD,kBAC/BoJ,EAASj6B,OAAAwsB,EAAA,UAAAxsB,CAAO,CAACi6B,EAAQL,GAAmB7T,EAAQ4K,aAC/C3wB,OAAAyqB,EAAA,aAAAzqB,CAAUi6B,GACnB,KAAKtM,EAAYsD,OACf,OAAOjxB,OAAAyqB,EAAA,aAAAzqB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOoN,GAAO3T,EAAQ5iB,MAAO,GAC7BmpB,EAAOvG,EAAQkJ,mBAAoB,GACnC3C,EAAOvG,EAAQ0J,mBAAoB,GACnCnD,EAAOvG,EAAQ6J,OAAQ,OAG7B,KAAKjC,EAAYwD,aACf,OAAOnxB,OAAAyqB,EAAA,aAAAzqB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOoN,GAAO3T,EAAQ5iB,MAAO,GAC7BmpB,EAAOvG,EAAQkJ,mBAAoB,GACnC3C,EAAOvG,EAAQwK,UAAW,IAC1BjE,EAAOvG,EAAQqC,WAAY,QAgB/B,SAAU8R,GAAYnU,GACxB,OAAMA,EAAQ5iB,MACV,KAACwqB,EAAYwB,UACT,OAACnvB,OAAAwsB,EAAA,WAAAxsB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOoN,GAAO3T,EAAQ5iB,MAAO,GAC7BmpB,EAAO,EAAG,GACVA,EAAOvG,EAAQqJ,6BAA8B,MAG/C,KAACzB,EAAY2B,UACT,OAACtvB,OAAAwsB,EAAA,WAAAxsB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOoN,GAAO3T,EAAQ5iB,MAAO,GAC7BmpB,EAAO,EAAG,GACVA,EAAOvG,EAAQkJ,mBAAoB,MAGrC,KAACtB,EAAYkD,gBACb,KAAClD,EAAYoD,gBACb,KAACpD,EAAYsD,OACb,KAACtD,EAAYwD,aACP,IAAF3D,EAAcwM,GAAkBjU,GACpCoU,EAAcL,GACZ/T,EAAQkK,mBACRlK,EAAQmK,cACRnK,EAAQwH,WAEZ,OAAOvtB,OAAAwsB,EAAA,WAAAxsB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOvG,EAAQgK,sBAAuB,IACtCzD,EAAOvG,EAAQ+J,SAAU,IACzBxD,EAAOmN,GAAcW,cAAe,IACpC9N,EAAOvG,EAAQiK,mBAAoB,IACnC1D,EAAO6N,EAAa,IACpB7N,EAAOvG,EAAQqH,MAAO,IACtBd,EAAOkB,EAAa,OAItB,KAACG,EAAY6B,eACT,OAACxvB,OAAAwsB,EAAA,WAAAxsB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOoN,GAAO3T,EAAQ5iB,MAAO,GAC7BmpB,EAAO,EAAG,GACVA,EAAOvG,EAAQkJ,mBAAoB,GACnC3C,EAAOvG,EAAQ0J,mBAAoB,GACnCnD,EAAOvG,EAAQqC,WAAY,IAC3BkE,EAAOvG,EAAQpe,OAAQ,IACvB2kB,EAAOvG,EAAQiH,WAAY,OAGjC,KAAKW,EAAYgC,cACf,OAAO3vB,OAAAwsB,EAAA,WAAAxsB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOoN,GAAO3T,EAAQ5iB,MAAO,GAC7BmpB,EAAO,EAAG,GACVA,EAAOvG,EAAQkJ,mBAAoB,GACnC3C,EAAOvG,EAAQ6J,OAAQ,OAG7B,KAAKjC,EAAY0D,UACf,OAAOrxB,OAAAwsB,EAAA,WAAAxsB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOoN,GAAO3T,EAAQ5iB,MAAO,GAC7BmpB,EAAO,EAAG,GACVA,EAAOvG,EAAQkJ,mBAAoB,MAGzC,KAAKtB,EAAY+D,iBACjB,KAAK/D,EAAYmE,iBACjB,KAAKnE,EAAYiE,sBACf,OAAO5xB,OAAAwsB,EAAA,WAAAxsB,CACLA,OAAAwsB,EAAA,UAAAxsB,CAAO,CACLssB,EAAOvG,EAAQgK,sBAAuB,IACtCzD,EAAOvG,EAAQ+J,SAAU,IACzBxD,EAAOmN,GAAcY,SAAU,IAC/B/N,EAAOvG,EAAQiK,mBAAoB,IACnC1D,EAAOvG,EAAQwL,YAAa,IAC5BjF,EAAOvG,EAAQyL,eAAgB,IAC/BlF,EAAOvG,EAAQiH,WAAY,QAY/B,SAAUsN,GACdvU,GAEA,OAAO6F,EAAUT,GAAGpF,EAAQ0H,WASxB,SAAU8M,GAAiBxU,GAC7B,OAAK/lB,OAAAyqB,EAAA,iBAAAzqB,CAAcA,OAAAwsB,EAAA,YAAAxsB,CAASk6B,GAAYnU,IAAWA,EAAQ0H,WASzD,SAAU+M,GACdzU,GAEA,MAAO,CACLjW,QAASiW,EAAQ+J,SACjB5C,oBAAqBnH,EAAQgK,sBAC7B5C,UAAWpH,EAAQiK,mBACf5C,MAAGrH,EAAQqH,MACXC,kBAAetH,EAAQkK,mBACvB3C,aAAUvH,EAAQmK,cAClB3C,UAAOxH,EAAQwH,UACnBC,YAAawM,GAAkBjU,GAC/B0H,UAAW1H,EAAQ0H,UACnBC,OAAQ6M,GAAiBxU,IAWvB,SAAU0U,GAAqC1U,GACnD,IAAMmG,EAAQ8F,GAAoBjM,EAAQ5iB,MAC1C,OAAOnD,OAAA2qB,EAAA,aAAA3qB,CAAkBksB,EAAMI,OAAOvG,IAUlC,SAAU2U,GAAkB/tB,GAChC,IAAMguB,EAAShO,EAAchgB,GAC7B,IAAKoiB,EAAQ5D,GAAGwP,GAAS,MAAM,IAAIh3B,MAAJ,oCAAAqc,OAA8CrT,IAC7E,IAAMiuB,EAAU5I,GAAoB2I,EAAOx3B,MAAMqwB,OAAOmH,GACxD,GAAI36B,OAAAyzB,EAAA,UAAAzzB,CAAO46B,GAAU,MAAMlH,EAAA,iBAAcC,OAAOiH,GAChD,OAAOA,EAAQhH,MAUX,SAAgBiH,GACpBC,EACA/U,G,4JAEIuU,GAASvU,G,yCAAiBA,G,OACX,O,SAAM+U,EAAOD,YAAY76B,OAAAwsB,EAAA,YAAAxsB,CAASk6B,GAAYnU,K,cAA3D0H,E,yBACNztB,OAAAif,OAAA,GAAY8G,EAAO,CAAE0H,e,0CA1QvB,SAAKgM,GACHA,IAAA,oCACAA,IAAA,2BAFF,CAAKA,QAAa,KCjBX,IAAMsB,GAAW/6B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,WAArBA,GAaXg7B,GAAiBh7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,iBAArBA,GAMjBmyB,GAAoBnyB,OAAAu0B,GAAA,wBAAAv0B,CAAqB,oBAArBA,GAMpBi7B,GAAiBj7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,iBAArBA,GAMjBk7B,GAAwBl7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,wBAArBA,GAMxBm7B,GAAuBn7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,uBAArBA,GAMvBo7B,GAAiBp7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,iBAArBA,GAGjBq7B,GAAmBr7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,mBAArBA,GAMnBs7B,GAA0Bt7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,0BAArBA,GAM1Bu7B,GAAiBv7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,iBAArBA,GAGjBw7B,GAAkBx7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,kBAArBA,GAUlBy7B,GAAuBz7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,wBAAwB2K,IAC/E,SAACiqB,EAAgBzf,GAAjB,MAAuC,CAAEyf,UAAS9vB,OAAO,EAAMqQ,UAIpDumB,GAA0B17B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,0BAArBA,GAM1B27B,GAAmB37B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,mBAArBA,GAiBnB47B,GAAc57B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,cAArBA,GAad67B,GAAiB77B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,kBAAkB2K,IACnE,SAACiqB,EAAgBzf,GAAjB,MAAuC,CAAEyf,UAAS9vB,OAAO,EAAMqQ,UAIpD2mB,GAAgB97B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,gBAArBA,GAYhB+7B,GAAyB/7B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,yBAArBA,GAMzBg8B,GAA2Bh8B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,2BAArBA,GCvHlC,SAAUi8B,KAEM,IADpBzd,EACoBvX,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GADC6sB,GACrBK,EAAoBltB,UAAApH,OAAA,EAAAoH,UAAA,QAAAlC,EAElB,GAAE/E,OAAAu0B,GAAA,cAAAv0B,CAAWi7B,GAAgB9G,GACzB,OACFA,EAAOhf,KAAKiT,cAAc5J,EAAM4U,SAChC5U,EAAM4U,QAAQe,EAAOhf,KAAKiT,YAAYiL,cAE/B7U,EACTxe,OAAAif,OAAA,GACKT,EAAK,CACR4U,QAAOpzB,OAAAif,OAAA,GACFT,EAAM4U,QADJpzB,OAAAwF,EAAA,KAAAxF,CAAA,GAEJm0B,EAAOhf,KAAKiT,WAAa+L,EAAOS,YAGhC,GAAI50B,OAAAu0B,GAAA,cAAAv0B,CAAWg7B,GAAgB7G,GAAS,CAC7C,IAAMlM,EAAWkM,EAAOS,QAAQ7O,QAC9ByK,EAAOvI,EAASuI,KAChBpI,EAAaoI,EAAKpI,WAEhB,GAAAA,KAAc5J,EAAMyF,KAAM,OAAOzF,EACrC,IAAM0d,EAAc,CAAC,WAAYjU,EAAS8H,sBAAuB9H,EAASsI,WACtE/Q,EAA+Bxf,OAAAy1B,GAAA,OAAAz1B,CAAIk8B,EAAa1d,GAChD,IAACgB,EAAS,OAAOhB,EAEjB,IAAEqP,EAAK,GAAA7N,OAAAhgB,OAAAw3B,GAAA,KAAAx3B,CAAQwf,EAAQyO,IAAIJ,OAAS,IAA7B,CAAkC2C,IAC3CjD,EAAYoK,GAAa9J,GACvB,GACF5F,EAASsF,YAAcA,IACtBtF,EAASmF,MAAM+O,IACb3c,EAAQyO,IAAIH,aAAetO,EAAQyO,IAAIH,aAAaV,MAAQnG,EAAA,SAAMmV,IAAI,MAExEnU,EAASgI,mBAAmBkM,GAC3B3c,EAAQyO,IAAIH,aAAetO,EAAQyO,IAAIH,aAAaT,kBAAoBpG,EAAA,WAEzEgB,EAASiI,cAAciM,IACrB3c,EAAQyO,IAAIH,aAAetO,EAAQyO,IAAIH,aAAaR,aAAerG,EAAA,SAAMmV,IAAI5L,EAAK7oB,SAGrF,OAAO6W,EAELgB,EAAGxf,OAAAif,OAAA,GACFO,EAAO,CACVyO,IAAGjuB,OAAAif,OAAA,GACEO,EAAQyO,IAAG,CACdJ,QAEAC,aAAc0M,GAAmCvS,OAGjD,IAAEoU,EAA6B,CAAEpU,SAAUkE,EAAMlE,IAIjD,OAFAzJ,EAAIxe,OAAAy1B,GAAA,OAAAz1B,CAAIk8B,EAAa1c,EAAShB,GAC9BA,EAAIxe,OAAAy1B,GAAA,OAAAz1B,CAAI,CAAC,OAAQooB,GAAaiU,EAAc7d,GACzCA,EACF,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWmyB,GAAmBgC,GACnC,OAAEA,EAAOhf,KAAKiT,cAAc5J,EAAMyF,KACtCjkB,OAAAif,OAAA,GACKT,EAAK,CACFyF,KAAFjkB,OAAAif,OAAA,GACCT,EAAMyF,KADPjkB,OAAAwF,EAAA,KAAAxF,CAAA,GAEDm0B,EAAOhf,KAAKiT,WAAWpoB,OAAAif,OAAA,GACnBT,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAW,CACrC+J,kBAAmBhG,EAAMgI,EAAOS,QAAQ7O,eAPMvH,EAW/C,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWm7B,GAAsBhH,GACtC,OAAEA,EAAOhf,KAAKiT,cAAc5J,EAAMyF,OAASzF,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAYkK,aAElFtyB,OAAAif,OAAA,GACKT,EAAK,CACRyF,KAAIjkB,OAAAif,OAAA,GACCT,EAAMyF,KADPjkB,OAAAwF,EAAA,KAAAxF,CAAA,GAEDm0B,EAAOhf,KAAKiT,WAAWpoB,OAAAif,OAAA,GACnBT,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAW,CACrCkK,aAAcnG,EAAMgI,EAAOS,QAAQ7O,eAPhCvH,EAWJ,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWq7B,GAAkBlH,GAAS,CAC/C,IAAM5B,EAAS4B,EAAOS,QAAQ7O,QAC5BuW,EAAanI,EAAOhf,KAAKiT,WACvB,KAAEkU,KAAc9d,EAAMyF,OAASzF,EAAMyF,KAAKqY,GAAY/J,OAAQ,OAAO/T,EACrE,IAAE+d,EAAW/d,EAAMyF,KAAKqY,GAAYrU,SAAS,GAC/CuU,EAAOD,EAAS/L,KACZiM,EAAc,CAAC,WAAYF,EAASxM,sBAAuBwM,EAAShM,WACtEqF,EAA+B51B,OAAAy1B,GAAA,OAAAz1B,CAAIy8B,EAAaje,GAChD,IAACoX,IAAYA,EAAQ3H,IAAIJ,QAAU+H,EAAQ3H,IAAIH,aAAc,OAAOtP,EAEpE,IAAEke,EAAQ9G,EAAQ3H,IAAIJ,MAAMvlB,OAAO,SAAAtG,GAAC,OAAIA,EAAEomB,aAAekU,IAC3DK,EAAYhF,GAAa+E,GACvB,GACFnK,EAAOhF,YAAcoP,IACpB/G,EAAQ3H,IAAIH,aAAaV,MAAMgP,IAAI,GAAGD,GAAG5J,EAAOnF,SAChDmF,EAAOtC,mBAAmBkM,GAAGvG,EAAQ3H,IAAIH,aAAaT,kBAAkB+O,IAAII,EAAK70B,WACjF4qB,EAAOrC,cAAciM,GAAGvG,EAAQ3H,IAAIH,aAAaR,aAAasP,IAAIJ,EAAK70B,SAExE,OAAO6W,EAEToX,EAAO51B,OAAAif,OAAA,GACF2W,EAAO,CACV3H,IAAGjuB,OAAAif,OAAA,GACE2W,EAAQ3H,IAAG,CACdJ,MAAA6O,EAEA5O,aAAc0M,GAAmCjI,OAGjD,IAAEsK,EAAY78B,OAAAif,OAAA,GAAsBT,EAAMyF,KAAKqY,GAAW,CAAE/J,OAAQpG,EAAMoG,KAI1E,OAFA/T,EAAIxe,OAAAy1B,GAAA,OAAAz1B,CAAIy8B,EAAa7G,EAASpX,GAC9BA,EAAIxe,OAAAy1B,GAAA,OAAAz1B,CAAI,CAAC,OAAQs8B,GAAaO,EAAcre,GACzCA,EACF,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWw7B,GAAiBrH,GAAS,CAC1C,IAAE3B,EAAc2B,EAAOS,QAAQ7O,QACjC+W,EAAa3I,EAAOhf,KAAKiT,WACvB,KACA0U,KAActe,EAAMyF,OACtBzF,EAAMyF,KAAK6Y,GAAYvK,QACvB/T,EAAMyF,KAAK6Y,GAAYtK,YAEvB,OAAOhU,EACL,IAAEue,EAAWve,EAAMyF,KAAK6Y,GAAY7U,SAAS,GAC/C+U,EAAOD,EAASvM,KACZyM,EAAc,CAAC,WAAYF,EAAShN,sBAAuBgN,EAASxM,WACtEwF,EAA+B/1B,OAAAy1B,GAAA,OAAAz1B,CAAIi9B,EAAaze,GACpD,IAAKuX,IAAYA,EAAQ9H,IAAIJ,QAAUkI,EAAQ9H,IAAIH,aAAc,OAAOtP,EAExE,IAAM0e,EAAQnH,EAAQ9H,IAAIJ,MAAMvlB,OAAO,SAAAtG,GAAC,OAAIA,EAAEomB,aAAe0U,IAC3DK,EAAYxF,GAAauF,GAC3B,GACE1K,EAAYjF,YAAc4P,IACzBpH,EAAQ9H,IAAIH,aAAaV,MAAMgP,IAAI,GAAGD,GAAG3J,EAAYpF,SACrDoF,EAAYvC,mBAAmBkM,GAAGpG,EAAQ9H,IAAIH,aAAaT,qBAC3DmF,EAAYtC,cAAciM,GAAGpG,EAAQ9H,IAAIH,aAAaR,aAAasP,IAAII,EAAKr1B,SAE7E,OAAO6W,EAETuX,EAAO/1B,OAAAif,OAAA,GACF8W,EAAO,CACV9H,IAAGjuB,OAAAif,OAAA,GACE8W,EAAQ9H,IAAG,CACdJ,MAAAqP,EAEApP,aAAc0M,GAAmChI,OAGrD,IAAM4K,EAAYp9B,OAAAif,OAAA,GACbT,EAAMyF,KAAK6Y,GAAW,CACzBtK,YAAarG,EAAMqG,KAKrB,OAFAhU,EAAQxe,OAAAy1B,GAAA,OAAAz1B,CAAIi9B,EAAalH,EAASvX,GAClCA,EAAQxe,OAAAy1B,GAAA,OAAAz1B,CAAI,CAAC,OAAQ88B,GAAaM,EAAc5e,GACzCA,EACF,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWs7B,GAAyBnH,GAC7C,OAAMA,EAAOhf,KAAKiT,cAAc5J,EAAMyF,KACtCjkB,OAAAif,OAAA,GACKT,EAAK,CACRyF,KAAIjkB,OAAAif,OAAA,GACCT,EAAMyF,KADPjkB,OAAAwF,EAAA,KAAAxF,CAAA,GAEDm0B,EAAOhf,KAAKiT,WAAWpoB,OAAAif,OAAA,GACnBT,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAW,CACrCqK,gBAAiBtG,EAAMgI,EAAOS,QAAQ7O,eAPQvH,EAW/C,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAW07B,GAAyBvH,GAC7C,OAAMA,EAAOhf,KAAKiT,cAAc5J,EAAMyF,KACtCjkB,OAAAif,OAAA,GACKT,EAAK,CACRyF,KAAIjkB,OAAAif,OAAA,GACCT,EAAMyF,KADPjkB,OAAAwF,EAAA,KAAAxF,CAAA,GAEDm0B,EAAOhf,KAAKiT,WAAWpoB,OAAAif,OAAA,GACnBT,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAW,CACrCsK,qBAAsBvG,EAAMgI,EAAOS,QAAQ7O,eAPGvH,EAW/C,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAW27B,GAAkBxH,GACtC,OAAMA,EAAOhf,KAAKiT,cAAc5J,EAAMyF,KACtCjkB,OAAAif,OAAA,GACKT,EAAK,CACRyF,KAAIjkB,OAAAif,OAAA,GACCT,EAAMyF,KADPjkB,OAAAwF,EAAA,KAAAxF,CAAA,GAEDm0B,EAAOhf,KAAKiT,WAAWpoB,OAAAif,OAAA,GACnBT,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAW,CACrCgK,OAAQjG,EAAMgI,EAAOS,QAAQ7O,eAPiBvH,EAW/C,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWqyB,GAAe8B,GACnC,OAAAn0B,OAAAif,OAAA,GACKT,EAAK,CACRyF,KAAMjkB,OAAAy1B,GAAA,aAAAz1B,CACJ,SAACkrB,GAAD,OAEEA,EAAEjD,SAAS,GAAG+H,mBAAmBmM,GAAGhI,EAAOS,QAAQ7pB,KACnDmgB,EAAEjD,SAAS,GAAGsI,YAAc4D,EAAOhf,KAAK1L,SACxCyhB,EAAEjD,SAAS,GAAG8H,wBAA0BoE,EAAOhf,KAAKugB,aACjD11B,OAAAif,OAAA,GAAMiM,EAAC,CAAEmH,cAAelG,EAAMgI,EAAOS,QAAQyI,UAC5CnS,GAPFlrB,CAQJwe,EAAMyF,QAEL,GAAIjkB,OAAAu0B,GAAA,cAAAv0B,CAAW87B,GAAe3H,GACnC,OAAMA,EAAOhf,KAAKiT,cAAc5J,EAAMyF,MACtCzF,EAAQxe,OAAAy1B,GAAA,SAAAz1B,CAAM,CAAC,OAAQm0B,EAAOhf,KAAKiT,YAAa5J,GAChDA,EAAQxe,OAAAy1B,GAAA,SAAAz1B,CAAM,CAAC,UAAWm0B,EAAOhf,KAAKiT,YAAa5J,GAC5CA,GAH6CA,EAI/C,GAAIxe,OAAAu0B,GAAA,cAAAv0B,CAAWg8B,GAA0B7H,GAAS,CACvD,IAAMpO,EAAUoO,EAAOS,QAAQ7O,QAC7BuX,EAAc,CAAC,WAAYnJ,EAAOhf,KAAKugB,aAAcvB,EAAOhf,KAAK1L,SAC/DysB,EAA+Bl2B,OAAAy1B,GAAA,OAAAz1B,CAAIs9B,EAAa9e,GACpD,IAAK0X,GAAWA,EAAQ1X,QAAUsO,EAAatd,KAAM,OAAOgP,EAE5D,IAAMsP,EAAmCoI,EAAQjI,IAAIH,cAAgB,CACnEhe,QAASiW,EAAQ+J,SACjB5C,oBAAqBiH,EAAOhf,KAAKugB,aACjCvI,UAAWpH,EAAQiK,mBAEnB5C,MAAOnG,EAAA,QACPoG,kBAAmBpG,EAAA,QACnBqG,aAAcrG,EAAA,QACdsG,UAAWtG,EAAA,YACXuG,YAAavG,EAAA,YACbwG,UAAWztB,OAAAyqB,EAAA,WAAAzqB,CAAQ+zB,IACnBrG,OAAQlP,EAAMlQ,SAgBhB,OAbIyX,EAAQqH,MAAM+O,GAAGrO,EAAaV,MAAMgP,IAAI,KAAOrW,EAAQiH,WAAWhG,GAAGxI,EAAMsU,eAC7EoD,EAAOl2B,OAAAif,OAAA,GACFiX,EAAO,CACVjI,IAAGjuB,OAAAif,OAAA,GACEiX,EAAQjI,IAAG,CACdH,aAAY9tB,OAAAif,OAAA,GACP6O,EAAY,CACfV,MAAOrH,EAAQqH,YAIrB5O,EAAQxe,OAAAy1B,GAAA,OAAAz1B,CAAIs9B,EAAapH,EAAS1X,IAE7BA,EACF,OAAOA,ECnRhB,IAAM+e,GAAiB,CACrBzG,mBACAY,oBACAuE,qBAgBWuB,GAAgB,eAAChf,EAADvX,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAAsB6sB,GAAcK,EAApCltB,UAAApH,OAAA,EAAAoH,UAAA,QAAAlC,EAAA,OAC3B/E,OAAO+qB,OAAOwS,IAAgBE,OAAO,SAACx8B,EAAGqe,GAAJ,OAAgBA,EAAQre,EAAGkzB,IAAS3V,I,iECrB9Dkf,GAAc19B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,cAArBA,GAed29B,GAAc39B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,cAArBA,GASd49B,GAAkB59B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,mBAAmB2K,IACrE,SAAA+V,EAcEvL,GAdF,IAEIxI,EAFJ+T,EAEI/T,KACAoZ,EAHJrF,EAGIqF,QACAoR,EAJJzW,EAIIyW,GACA1I,EALJ/N,EAKI+N,OACA8I,EANJ7W,EAMI6W,OANJ,MAeM,CAAE3C,QAAS,CAAEjoB,OAAMoZ,UAASoR,GAAIA,GAAM/K,KAAKC,MAAOoC,SAAQ8I,UAAUpiB,UClC/D0oB,GAAiB79B,OAAAu0B,GAAA,wBAAAv0B,CAAqB,iBAArBA,GAIjB89B,GAAa99B,OAAAif,OAAA,CACxB4e,mBACGE,EACAC,EACAC,EACAC,GAQQC,GAAen+B,OAAAsrB,EAAA,QAAAtrB,CAC1B89B,GACA,CAACA,GAAcD,eAAgBC,GAAcxJ,SAAUwJ,GAAc7G,sBAAsBtsB,IACzF4pB,GAAA,a,gcCbE,SAAU6J,GACd56B,EACAF,EACA+6B,GAEA,OAAOr+B,OAAAs+B,GAAA,KAAAt+B,CACL,SAACu+B,GAAD,OAAuB/6B,EAAO8I,GAAGhJ,EAAOi7B,IACxC,SAACA,GAAD,OAAuB/6B,EAAOg7B,eAAel7B,EAAOi7B,IACpDF,GAmBE,SAAUI,GACdC,EACAC,EACAC,EACAC,GAEE,IAAIja,EAAW8Z,EAAS9Z,SAItBka,EAA6BC,GAAA,KAC7BH,GAAcC,IACZC,EAAU9+B,OAAAg/B,GAAA,KAAAh/B,CACZ4+B,EACA5+B,OAAAi/B,GAAA,KAAAj/B,CAAM,kBAAO4kB,EAASkO,YAAc9yB,OAAAk/B,GAAA,KAAAl/B,CAAG4kB,EAASkO,aAAe+L,KAC/D3Y,KACAlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAAo/B,GAAA,KAAAp/B,CAAU,SAAA0gB,GAAA,IAAAG,EAAA7gB,OAAAi5B,GAAA,KAAAj5B,CAAA0gB,EAAA,GAAE2e,EAAFxe,EAAA,GAAaye,EAAbze,EAAA,UACRze,QAAQ6C,IAAI05B,EAAQh0B,IAAI,SAAArC,GAAM,OAAIsc,EAAS2a,QAAOv/B,OAAAif,OAAA,GAAM3W,EAAM,CAAE+2B,YAAWC,kBAI7Et/B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAy/B,GAAI,OAAIz/B,OAAA0/B,GAAA,KAAA1/B,CAAKA,OAAAsrB,EAAA,UAAAtrB,CAAOA,OAAAsrB,EAAA,WAAAtrB,CAAQy/B,GAAO,CAAC,mBAC7Cz/B,OAAA2K,GAAA,KAAA3K,CAAI,SAAA2/B,GAGF,IAAMhF,EAAS+D,EAASkB,UAAUC,SAASF,GAC3C,GAAKhF,EAAL,CACA,IAAMmF,EAAOC,MAAM9/B,UAAU6G,MAAM3G,KAAKw6B,EAAO5P,QAEzCznB,EAAKtD,OAAAif,OAAA,GACN0gB,EACAhF,EAAM,CACTmF,OACAtB,eAAgB,aAChBwB,SAAU,kBAAMpb,EAASob,SAASL,EAAIM,YACtCC,eAAgB,kBAAMtb,EAASsb,eAAeP,EAAIQ,kBAClDC,sBAAuB,kBAAMxb,EAASwb,sBAAsBT,EAAIQ,kBAChE3M,YAAQzuB,IAEV,SAAAib,OAAAhgB,OAAAw3B,GAAA,KAAAx3B,CAAW8/B,GAAX,CAAiBx8B,OAEnBtD,OAAAsI,GAAA,KAAAtI,CAAO,SAACsD,GAAD,QAAyBA,MAOlC,IAAI+8B,EAA4BrgC,OAAA0/B,GAAA,KAAA1/B,CAAK2+B,GAASzY,KAC9ClmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAsI,GAAM,OAAI81B,GAAgBM,EAAUp2B,EAAQ,mBAAAg4B,EAAAr5B,UAAApH,OAAIigC,EAAJ,IAAAC,MAAAO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIT,EAAJS,GAAAt5B,UAAAs5B,GAAA,OAAaT,OAGlE,OAAK9/B,OAAAwgC,GAAA,KAAAxgC,CAAM8+B,EAAauB,GAStB,SAAgBI,GAAW7b,G,kJACF,O,KAAtB8b,GAAA,c,KAAaC,S,SAAe/b,EAASgc,KAAK,cAAe,I,yHAS5D,SAAUC,GAAcjc,GAC5B,IAAMkc,EAA0Dlc,EAASgc,KACzEhc,EAASgc,KAAO,SAAeG,EAAgBx3B,G,qJAC9B,aAAXw3B,E,yCAEKD,EAAStgC,MAAMsI,KAAM,CAAC,gBAAiB,CAACS,EAAO,GAAIA,EAAO,MAAMy3B,MAAM,SAAAt9B,GAE3E,GACEA,aAAeC,QACdD,EAAIqiB,QAAQpF,SAAS,4CACpBjd,EAAIqiB,QAAQpF,SAAS,uCAGvB,OADAiE,EAASgc,KAAOE,EACTlc,EAASgc,KAAKG,EAAQx3B,GAE/B,MAAM7F,K,gCAGHo9B,EAAStgC,MAAMsI,KAAM,CAACi4B,EAAQx3B,K,sUC7E5B03B,GAAmB,SAAAvgB,EAAAG,EAAAqgB,GAAAlhC,OAAA4sB,EAAA,KAAA5sB,CAAA0gB,GAAA1gB,OAAA4sB,EAAA,KAAA5sB,CAAA6gB,GAAA,IAG5B+D,EAH4Bsc,EAG5Btc,SAH4B,OAK9B5kB,OAAA0/B,GAAA,KAAA1/B,CAAK4kB,EAASuc,kBAAkBjb,KAC9BlmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA8yB,GAAW,OAAI9yB,OAAAwgC,GAAA,KAAAxgC,CAAMA,OAAAk/B,GAAA,KAAAl/B,CAAG8yB,GAAcsL,GAAwBxZ,EAAU,YACjF5kB,OAAA2K,GAAA,KAAA3K,CAAI,SAAA8yB,GAAW,OAAIwB,GAAS,CAAExB,oBAWrBsO,GAA0B,SACrCC,EACAC,EAFqCC,GAAA,IAGnCC,EAHmCD,EAGnCC,iBAAkBC,EAHiBF,EAGjBE,cAHiB,OAKrCH,EAAOpb,KACLlmB,OAAA0hC,GAAA,KAAA1hC,CAAc,OAAG+E,EAAW,SAAAu8B,GAAM,OAChCD,EAAQnb,KACNlmB,OAAAm/B,GAAA,KAAAn/B,CAAMA,OAAAu0B,GAAA,cAAAv0B,CAAWs0B,KACjBt0B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAo/B,GAAA,KAAAp/B,CAAU,SAAA4hC,GAAA,IAAAC,EAAA7hC,OAAAi5B,GAAA,KAAAj5B,CAAA4hC,EAAA,GAAe9O,EAAf+O,EAAA,GAAIjN,QAAW9B,YAAiBtU,EAAhCqjB,EAAA,UACR7hC,OAAAwgC,GAAA,KAAAxgC,CAGEy+B,GACE+C,EACA,CAACA,EAAiB7C,QAAQmD,oBAAoB,KAAM,OACpD9hC,OAAAsrB,EAAA,WAAAtrB,CAAQwe,EAAMJ,QACVpe,OAAAk/B,GAAA,KAAAl/B,CAAGyhC,EAAcM,qBAAqBC,mBACtCj9B,EACJ/E,OAAAsrB,EAAA,WAAAtrB,CAAQwe,EAAMJ,QAAUpe,OAAAk/B,GAAA,KAAAl/B,CAAG8yB,QAAe/tB,GAC1CmhB,KACAlmB,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAA2K,GAAA,KAAA3K,CAAI,SAAAiiC,GAAA,IAAAC,EAAAliC,OAAAi5B,GAAA,KAAAj5B,CAAAiiC,EAAA,GAAAE,EAAAniC,OAAAi5B,GAAA,KAAAj5B,CAAAkiC,EAAA,MAAG/4B,EAAHg5B,EAAA,GAAUzM,EAAVyM,EAAA,GAAwB7+B,EAAxB6+B,EAAA,GAAgC3jB,EAAhC0jB,EAAA,UACF1N,GAAe,CACbrrB,QACAusB,eACA2J,UAAal2B,KAASqV,EAAMJ,YAA8BrZ,EAApBzB,EAAMwvB,iBAKlD9yB,OAAA0/B,GAAA,KAAA1/B,CAAKA,OAAOoiC,QAAQ5jB,EAAMJ,SAAS8H,KACjClmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAqiC,GAAA,IAAAC,EAAAtiC,OAAAi5B,GAAA,KAAAj5B,CAAAqiC,EAAA,GAAEl5B,EAAFm5B,EAAA,GAAS5M,EAAT4M,EAAA,UACF9N,GAAe,CAAErrB,MAAOA,EAAkBusB,4BAgB7C6M,GAA0B,SAAAC,EAErClB,GAFqC,OAAAthC,OAAA4sB,EAAA,KAAA5sB,CAAAwiC,GAIrClB,EAAOpb,KACLlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAC,EAAUkG,GAAV,IAAAikB,EAAAC,EAAAC,EAAAjN,EAAAkN,EAAAC,EAAAC,EAAAC,EAAAt5B,EAAA+V,EAAA,OAAApH,mBAAAG,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA+pB,EAAA,EAAAC,EAC2B1iC,OAAOoiC,QAAQ5jB,EAAML,UADhD,YAAAskB,EAAAC,EAAA7iC,QAAA,CAAA2Y,EAAAE,KAAA,SAAAiqB,EAAA3iC,OAAAi5B,GAAA,KAAAj5B,CAAA0iC,EAAAD,GAAA,GACK/M,EADLiN,EAAA,GACmBC,EADnBD,EAAA,GAAAE,EAAA,EAAAC,EAE4B9iC,OAAOoiC,QAAQQ,GAF3C,YAAAC,EAAAC,EAAAjjC,QAAA,CAAA2Y,EAAAE,KAAA,YAAAqqB,EAAA/iC,OAAAi5B,GAAA,KAAAj5B,CAAA8iC,EAAAD,GAAA,GAEOp5B,EAFPs5B,EAAA,GAEgBvjB,EAFhBujB,EAAA,GAGCvjB,EAAQhB,QAAUsO,EAAavd,QAHhC,CAAAiJ,EAAAE,KAAA,eAAAF,EAAA2L,OAAA,sBAIH,OAJG3L,EAAAE,KAAA,GAIGmc,GACJ,CAAE9pB,GAAIyU,EAAQzU,IACd,CAAE2qB,aAAcA,EAAyBjsB,QAASA,IANjD,QAAAo5B,IAAArqB,EAAAE,KAAA,gBAAA+pB,IAAAjqB,EAAAE,KAAA,iCAAAF,EAAAO,SAAAT,QAqBA0qB,GAA0B,SAAAC,EAAAC,EAAAC,GAAAnjC,OAAA4sB,EAAA,KAAA5sB,CAAAijC,GAAAjjC,OAAA4sB,EAAA,KAAA5sB,CAAAkjC,GAAA,IAGnC50B,EAHmC60B,EAGnC70B,QAAS8G,EAH0B+tB,EAG1B/tB,QAASwP,EAHiBue,EAGjBve,SAHiB,OAKrC5kB,OAAA0/B,GAAA,KAAA1/B,CAAK4kB,EAASwe,gBAAgBld,KAQ5BlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAqjC,GAAQ,OAAIA,EAAS1iB,SAASrS,KAClCtO,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAsjC,GAAiB,OACxBtjC,OAAAujC,GAAA,KAAAvjC,CAAS4kB,EAAS4e,iBAAiBtd,KACjClmB,OAAAw/B,GAAA,KAAAx/B,CAAS,kBACPA,OAAAwgC,GAAA,KAAAxgC,CAEEsjC,EACItjC,OAAA0/B,GAAA,KAAA1/B,CAAK4kB,EAASwe,gBAAgBld,KAC5BlmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAqjC,GAAQ,OACdA,EAAS1iB,SAASrS,GAEfywB,GAAA,KADA/+B,OAAAk/B,GAAA,KAAAl/B,CAAG69B,GAAe,CAAE/qB,OAAQ+gB,GAAe4P,sBAInD1E,GAAA,KAEJ/+B,OAAA0/B,GAAA,KAAA1/B,CAAKygC,GAAW7b,IAAWsB,KACzBlmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA0jC,GAAU,OACjBA,EAAW5zB,UAAYsF,EAAQtF,QAC3B9P,OAAAk/B,GAAA,KAAAl/B,CAAG69B,GAAe,CAAE/qB,OAAQ+gB,GAAe8P,mBAC3C5E,GAAA,gBAoBP6E,GAAqB,SAChCvC,EACAC,EAFgCuC,GAAA,IAG9Bv1B,EAH8Bu1B,EAG9Bv1B,QAASw1B,EAHqBD,EAGrBC,wBAHqB,OAKhCxC,EAAOpb,KACLlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAwe,GAAK,OAAIA,EAAMsU,cACnB9yB,OAAA0hC,GAAA,KAAA1hC,CAAc,OAAG+E,EAAW,SAAAg/B,GAAY,OACtC1C,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWw0B,KAClBx0B,OAAAgkC,GAAA,KAAAhkC,CAAQ,SAAAm0B,GAAM,OAAIA,EAAOS,QAAQc,eACjC11B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAikC,GAAQ,OACfA,EAAS/d,KACPlmB,OAAAkkC,GAAA,KAAAlkC,CAAW,SAAAm0B,GACT,IAAMgQ,EAAuBL,EAAwB3P,EAAOS,QAAQc,cAM9DiJ,EAAU,CACdwF,EAAqBxF,QAAQyF,cAAc,KAAM91B,EAAS,KAAM,MAChE61B,EAAqBxF,QAAQyF,cAAc,KAAM,KAAM91B,EAAS,OAGlE,OAAOmwB,GACL0F,EACAxF,EAGAxK,EAAOS,QAAQyK,UAAYr/B,OAAAk/B,GAAA,KAAAl/B,CAAGm0B,EAAOS,QAAQyK,gBAAat6B,EAC1DovB,EAAOS,QAAQyK,UAAY0E,OAAeh/B,GAC1CmhB,KACAlmB,OAAAsI,GAAA,KAAAtI,CAAO,SAAAqkC,GAAA,IAAAC,EAAAtkC,OAAAi5B,GAAA,KAAAj5B,CAAAqkC,EAAA,GAAIE,EAAJD,EAAA,GAAQE,EAARF,EAAA,UAAgBC,IAAOj2B,GAAWk2B,IAAOl2B,IAChDtO,OAAA2K,GAAA,KAAA3K,CAAI,SAAAykC,GAAA,IAAAC,EAAA1kC,OAAAi5B,GAAA,KAAAj5B,CAAAykC,EAAA,GAAE15B,EAAF25B,EAAA,GAAMH,EAANG,EAAA,GAAUF,EAAVE,EAAA,GAAcxW,EAAdwW,EAAA,GAA6BphC,EAA7BohC,EAAA,UACFhQ,GACE,CACE3pB,GAAIA,EAAGuuB,WACPpL,cAAeA,EAAcoL,WAC7BnL,UAAW7qB,EAAMwvB,YACjB1E,mBAAoB9f,IAAYi2B,EAChClH,OAAQ/5B,EAAM68B,iBAEhB,CACEzK,aAAcyO,EAAqB71B,QACnC7E,QAAS6E,IAAYi2B,EAAKC,EAAKD,iBA2BxCI,GAAuB,SAClCtD,EACAC,EAFkCsD,GAAA,IAGhCd,EAHgCc,EAGhCd,wBAHgC,OAYlCxC,EAAOpb,KACLlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAwe,GAAK,OAAIA,EAAMsU,cACnB9yB,OAAA0hC,GAAA,KAAA1hC,CAAc,OAAG+E,EAAW,SAAAg/B,GAAY,OACtC1C,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW60B,KAClB70B,OAAAgkC,GAAA,KAAAhkC,CACE,SAAAm0B,GAAM,SAAAnU,OAAOmU,EAAOS,QAAQ7pB,GAAtB,KAAAiV,OAA4BmU,EAAOhf,KAAK1L,QAAxC,KAAAuW,OAAmDmU,EAAOhf,KAAKugB,gBAEvE11B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAikC,GAAQ,OACfA,EAAS/d,KACPlmB,OAAAkkC,GAAA,KAAAlkC,CAAW,SAAAm0B,GACT,IAAMgQ,EAAuBL,EAAwB3P,EAAOhf,KAAKugB,cAgB3DmP,EAAgBV,EAAqBxF,QAAQmG,kBAC/C3Q,EAAOS,QAAQ7pB,GACf,KACA,MAEFg6B,EAAiBZ,EAAqBxF,QAAQqG,gBAC5C7Q,EAAOS,QAAQ7pB,GACf,KACA,MAEFk6B,EAAed,EAAqBxF,QAAQuG,cAC1C/Q,EAAOS,QAAQ7pB,GACf,KACA,KACA,MAEFo6B,EAAgBhB,EAAqBxF,QAAQyG,eAC3CjR,EAAOS,QAAQ7pB,GACf,KACA,KACA,KACA,MAGJ,OAAO/K,OAAAwgC,GAAA,KAAAxgC,CACLy+B,GACE0F,EACA,CAACU,GAGD1Q,EAAOS,QAAQyK,UAAYr/B,OAAAk/B,GAAA,KAAAl/B,CAAGm0B,EAAOS,QAAQyK,gBAAat6B,EAC1DovB,EAAOS,QAAQyK,UAAY0E,OAAeh/B,GAC1CmhB,KACAlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAqlC,GAAA,IAAAC,EAAAtlC,OAAAi5B,GAAA,KAAAj5B,CAAAqlC,EAAA,GAAEt6B,EAAFu6B,EAAA,GAAM/T,EAAN+T,EAAA,GAAmBtP,EAAnBsP,EAAA,GAAiChiC,EAAjCgiC,EAAA,UACFvQ,GACE,CACEhqB,GAAIA,EAAGuuB,WACP/H,cACAyE,eACAqH,OAAQ/5B,EAAM68B,iBAEhBhM,EAAOhf,SAIbspB,GACE0F,EACA,CAACY,GACD5Q,EAAOS,QAAQyK,UAAYr/B,OAAAk/B,GAAA,KAAAl/B,CAAGm0B,EAAOS,QAAQyK,gBAAat6B,EAC1DovB,EAAOS,QAAQyK,UAAY0E,OAAeh/B,GAC1CmhB,KACAlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAulC,GAAA,IAAAC,EAAAxlC,OAAAi5B,GAAA,KAAAj5B,CAAAulC,EAAA,GAAEx6B,EAAFy6B,EAAA,GAAMjU,EAANiU,EAAA,GAAmBrP,EAAnBqP,EAAA,GAAkCliC,EAAlCkiC,EAAA,UACFvQ,GACE,CACElqB,GAAIA,EAAGuuB,WACP/H,cACA4E,gBACAkH,OAAQ/5B,EAAM68B,iBAEhBhM,EAAOhf,SAIbspB,GACE0F,EACA,CAACc,GACD9Q,EAAOS,QAAQyK,UAAYr/B,OAAAk/B,GAAA,KAAAl/B,CAAGm0B,EAAOS,QAAQyK,gBAAat6B,EAC1DovB,EAAOS,QAAQyK,UAAY0E,OAAeh/B,GAC1CmhB,KACAlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAylC,GAAA,IAAAC,EAAA1lC,OAAAi5B,GAAA,KAAAj5B,CAAAylC,EAAA,GAAE16B,EAAF26B,EAAA,GAAMnU,EAANmU,EAAA,GAAuBpiC,EAAvBoiC,EAAA,UACFrT,GACE,CACEtnB,GAAIA,EAAGuuB,WACP/H,cACAjD,WAAYhrB,EAAMwvB,YAClBuK,OAAQ/5B,EAAM68B,iBAEhBhM,EAAOhf,SAIbspB,GACE0F,EACA,CAACgB,GACDhR,EAAOS,QAAQyK,UAAYr/B,OAAAk/B,GAAA,KAAAl/B,CAAGm0B,EAAOS,QAAQyK,gBAAat6B,EAC1DovB,EAAOS,QAAQyK,UAAY0E,OAAeh/B,GAC1CmhB,KACAlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAA2lC,GAAA,IAAAC,EAAA5lC,OAAAi5B,GAAA,KAAAj5B,CAAA2lC,EAAA,GAAE56B,EAAF66B,EAAA,GAActiC,EAAdsiC,EAAA,UACFtQ,GACE,CACEvqB,GAAIA,EAAGuuB,WACPuM,YAAaviC,EAAMwvB,YACnBuK,OAAQ/5B,EAAM68B,iBAEhBhM,EAAOhf,UAIb+Q,KAEAlmB,OAAA8lC,GAAA,KAAA9lC,CAOEA,OAAAsrB,EAAA,UAAAtrB,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWs1B,MAAkB,cAqBzCyQ,GAAkB,SAC7B1E,EACAC,EAF6B0E,GAAA,IAG3BlC,EAH2BkC,EAG3BlC,wBAAyBmC,EAHED,EAGFC,QAHE,OAK7B5E,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWy0B,KAClBz0B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,EAAQ2E,GACvBjmC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAkmC,GAA4B,IAAAC,EAAAnmC,OAAAi5B,GAAA,KAAAj5B,CAAAkmC,EAAA,GAA1B/R,EAA0BgS,EAAA,GAAlB3nB,EAAkB2nB,EAAA,GAAXljB,EAAWkjB,EAAA,GAC7BzQ,EAAeoO,EAAwB3P,EAAOhf,KAAKugB,cACnD0Q,EAAepmC,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAML,SAAU,CACvCgW,EAAOhf,KAAKugB,aACZvB,EAAOhf,KAAK1L,QACZ,UAGF,OAAI28B,IAAiBtZ,EAAavd,QACzBvP,OAAAk/B,GAAA,KAAAl/B,CACL20B,GAAkB,IAAIhxB,MAAJ,0BAAAqc,OAAoComB,IAAiBjS,EAAOhf,OAI3EnV,OAAA0/B,GAAA,KAAA1/B,CACL01B,EAAa2Q,UAAUxf,YACrBrI,EAAMlQ,QACN6lB,EAAOhf,KAAK1L,QACZ0qB,EAAOS,QAAQ1G,eAAiBjL,EAAOiL,gBAEzChI,KACAlmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAMsmC,GAAN,OAAWC,GAAAC,QAAA,SAAApuB,mBAAAC,KAAA,SAAAouB,IAAA,OAAAruB,mBAAAG,KAAA,SAAAwM,GAAA,eAAAA,EAAAtM,KAAAsM,EAAArM,MAAA,OAAa,OAAbqM,EAAArM,KAAA,EAAmB4tB,EAAGI,OAAtB,cAAA3hB,EAAAC,GAAAD,EAAAd,KAAAc,EAAA4hB,GAA8BL,EAA9BvhB,EAAAZ,OAAA,UAAIyiB,QAAJ7hB,EAAAC,GAA8BshB,GAA9BvhB,EAAA4hB,KAAA,wBAAA5hB,EAAAhM,SAAA0tB,QACpBzmC,OAAA2K,GAAA,KAAA3K,CAAI,SAAA6mC,GAAoB,IAAjBD,EAAiBC,EAAjBD,QAASN,EAAQO,EAARP,GACd,IAAKM,EAAQ1N,OAAQ,MAAM,IAAIv1B,MAAJ,4BAAAqc,OAAsCsmB,EAAGQ,KAAzC,aAC3B,OAAOR,EAAGQ,OAMZ9mC,OAAA+mC,GAAA,KAAA/mC,CAAW++B,GAAA,MACX/+B,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA8E,GAAK,OAAI9E,OAAAk/B,GAAA,KAAAl/B,CAAG20B,GAAkB7vB,EAAOqvB,EAAOhf,cAYlD8xB,GAAoB,SAC/B5F,EACAC,GAF+B,OAI/BD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW00B,KAClB10B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GAEfthC,OAAAsI,GAAA,KAAAtI,CAAO,SAAAknC,GAAoB,IAAAC,EAAAnnC,OAAAi5B,GAAA,KAAAj5B,CAAAknC,EAAA,GAAlB/S,EAAkBgT,EAAA,GAAV3oB,EAAU2oB,EAAA,GACnB3nB,EAA+Bxf,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAML,SAAU,CACvDgW,EAAOhf,KAAKugB,aACZvB,EAAOhf,KAAK1L,UAEd,QAAS+V,GAAWA,EAAQhB,QAAUsO,EAAatd,OAErDxP,OAAA2K,GAAA,KAAA3K,CAAI,SAAAonC,GAAA,IAAAC,EAAArnC,OAAAi5B,GAAA,KAAAj5B,CAAAonC,EAAA,GAAEjT,EAAFkT,EAAA,UACFxS,GACE,CACE9pB,GAAIopB,EAAOS,QAAQ7pB,GACnBs0B,UAAWlL,EAAOS,QAAQzG,WAE5BgG,EAAOhf,UAkBFmyB,GAAqB,SAChCjG,EACAC,EAFgCiG,GAAA,IAG9Bj5B,EAH8Bi5B,EAG9Bj5B,QAASk5B,EAHqBD,EAGrBC,iBAAkB1D,EAHGyD,EAGHzD,wBAHG,OAKhCzC,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW80B,KAClB90B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAynC,GAAoB,IAAAC,EAAA1nC,OAAAi5B,GAAA,KAAAj5B,CAAAynC,EAAA,GAAlBtT,EAAkBuT,EAAA,GAAVlpB,EAAUkpB,EAAA,GACrBv+B,EAAQnJ,OAAAsrB,EAAA,WAAAtrB,CAAQwe,EAAMJ,OAAQ,SAAAupB,GAAE,OAAIA,IAAOxT,EAAOhf,KAAKugB,eAG7D,IAAKvsB,EAAO,CACV,IAAMrE,EAAQ,IAAInB,MAAJ,2BAAAqc,OAAqCmU,EAAOhf,KAAKugB,aAAjD,gBACd,OAAO11B,OAAAk/B,GAAA,KAAAl/B,CAAGg1B,GAAqBlwB,EAAOqvB,EAAOhf,OAE/C,IAAMyyB,EAAgBJ,EAAiBr+B,GACjCg7B,EAAuBL,EAAwB3P,EAAOhf,KAAKugB,cAC3DlW,EAAmBxf,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAML,SAAU,CAC3CgW,EAAOhf,KAAKugB,aACZvB,EAAOhf,KAAK1L,UAEd,IAAK+V,GAAWA,EAAQhB,QAAUsO,EAAatd,WAAuBzK,IAAfya,EAAQzU,GAAkB,CAC/E,IAAM88B,EAAQ,IAAIlkC,MAAJ,gBAAAqc,OACImU,EAAOhf,KAAKugB,aADhB,WAAA1V,OACsCmU,EAAOhf,KAAK1L,QADlD,wCAGd,OAAOzJ,OAAAk/B,GAAA,KAAAl/B,CAAGg1B,GAAqB6S,EAAO1T,EAAOhf,OAE/C,IAAMgY,EAAY3N,EAAQzU,GAG1B,OAAO/K,OAAA0/B,GAAA,KAAA1/B,CACL4nC,EAAcvB,UAAUyB,QAAQ3T,EAAOhf,KAAKugB,aAAcvB,EAAOS,QAAQ5sB,UAExEke,KACClmB,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAsmC,GAAE,OAAI5/B,QAAQi5B,IAAR,oBAAA3f,OAAgCsmB,EAAGQ,KAAnC,UAAA9mB,OAAgD7W,EAAhD,QACVnJ,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAMsmC,GAAN,OAAWC,GAAAC,QAAA,SAAApuB,mBAAAC,KAAA,SAAA2vB,IAAA,OAAA5vB,mBAAAG,KAAA,SAAA4M,GAAA,eAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,OAAa,OAAbyM,EAAAzM,KAAA,EAAmB4tB,EAAGI,OAAtB,cAAAvhB,EAAAH,GAAAG,EAAAlB,KAAAkB,EAAAwhB,GAA8BL,EAA9BnhB,EAAAhB,OAAA,UAAIyiB,QAAJzhB,EAAAH,GAA8BshB,GAA9BnhB,EAAAwhB,KAAA,wBAAAxhB,EAAApM,SAAAivB,QACpBhoC,OAAA2K,GAAA,KAAA3K,CAAI,SAAAioC,GAAoB,IAAjBrB,EAAiBqB,EAAjBrB,QAASN,EAAQ2B,EAAR3B,GACd,IAAKM,EAAQ1N,OACX,MAAM,IAAIv1B,MAAJ,UAAAqc,OAAoB7W,EAApB,2BAAA6W,OAAmDsmB,EAAGQ,KAAtD,aACR,OAAOR,EAAGQ,OAEZ9mC,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAq9B,GAAM,OAAI32B,QAAQi5B,IAAR,eAAA3f,OAA2Bqd,EAA3B,4BAEfnX,KACClmB,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAkoC,GAAA,IAAAC,EAAAnoC,OAAAi5B,GAAA,KAAAj5B,CAAAkoC,EAAA,GAAI1pB,EAAJ2pB,EAAA,UAEPhE,EAAqBkC,UAAU+B,gBAC7Bjb,EACA7e,EACAkQ,EAAML,SAASgW,EAAOhf,KAAKugB,cAAcvB,EAAOhf,KAAK1L,SAASwkB,IAAIjmB,QAAQo0B,IACxEjI,EAAOS,QAAQ5sB,SAEjBmsB,EAAOhf,KAAK1L,QACZ,CAAE4+B,SAAU,QAGhBroC,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAsmC,GAAE,OACJ5/B,QAAQi5B,IAAR,4BAAA3f,OAAwCsmB,EAAGQ,KAA3C,UAAA9mB,OAAwDmU,EAAOhf,KAAKugB,aAApE,QAEF11B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAMsmC,GAAN,OAAWC,GAAAC,QAAA,SAAApuB,mBAAAC,KAAA,SAAAiwB,IAAA,OAAAlwB,mBAAAG,KAAA,SAAAqN,GAAA,eAAAA,EAAAnN,KAAAmN,EAAAlN,MAAA,OAAa,OAAbkN,EAAAlN,KAAA,EAAmB4tB,EAAGI,OAAtB,cAAA9gB,EAAAZ,GAAAY,EAAA3B,KAAA2B,EAAA+gB,GAA8BL,EAA9B1gB,EAAAzB,OAAA,UAAIyiB,QAAJhhB,EAAAZ,GAA8BshB,GAA9B1gB,EAAA+gB,KAAA,wBAAA/gB,EAAA7M,SAAAuvB,QACpBtoC,OAAA2K,GAAA,KAAA3K,CAAI,SAAAuoC,GAAoB,IAAjB3B,EAAiB2B,EAAjB3B,QAASN,EAAQiC,EAARjC,GACd,IAAKM,EAAQ1N,OACX,MAAM,IAAIv1B,MAAJ,iBAAAqc,OACamU,EAAOhf,KAAKugB,aADzB,mCAAA1V,OACuEsmB,EAAGQ,KAD1E,aAGR,OAAOR,EAAGQ,OAEZ9mC,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAq9B,GAAM,OAAI32B,QAAQi5B,IAAR,uBAAA3f,OAAmCqd,EAAnC,2BAKdr9B,OAAA+mC,GAAA,KAAA/mC,CAAW++B,GAAA,MACX/+B,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA8E,GAAK,OAAI9E,OAAAk/B,GAAA,KAAAl/B,CAAGg1B,GAAqBlwB,EAAOqvB,EAAOhf,cAiBvDqzB,GAAmB,SAC9BnH,EACAC,EAF8BmH,GAAA,IAG5Bn6B,EAH4Bm6B,EAG5Bn6B,QAAS8G,EAHmBqzB,EAGnBrzB,QAAS0uB,EAHU2E,EAGV3E,wBAAyBhJ,EAHf2N,EAGe3N,OAHf,OAK9BuG,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWk1B,KAClBl1B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA0oC,GAAoB,IAAAC,EAAA3oC,OAAAi5B,GAAA,KAAAj5B,CAAA0oC,EAAA,GAAlBvU,EAAkBwU,EAAA,GAAVnqB,EAAUmqB,EAAA,GACrBxE,EAAuBL,EAAwB3P,EAAOhf,KAAKugB,cAC3DlW,EAAmBxf,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAML,SAAU,CAC3CgW,EAAOhf,KAAKugB,aACZvB,EAAOhf,KAAK1L,UAEd,IACG+V,GACCA,EAAQhB,QAAUsO,EAAatd,MAAQgQ,EAAQhB,QAAUsO,EAAard,UACvE+P,EAAQzU,GACT,CACA,IAAMjG,EAAQ,IAAInB,MAAJ,gBAAAqc,OACImU,EAAOhf,KAAKugB,aADhB,WAAA1V,OACsCmU,EAAOhf,KAAK1L,QADlD,qDAGd,OAAOzJ,OAAAk/B,GAAA,KAAAl/B,CAAGm1B,GAAmBrwB,EAAOqvB,EAAOhf,OAE7C,IAAMgY,EAAY3N,EAAQzU,GAEpBovB,EAAclT,EAAA,YAClBmG,EAAQnG,EAAA,QACR2hB,EAAiB3hB,EAAA,YACjB4hB,EAAsB7oC,OAAAyqB,EAAA,WAAAzqB,CAAQ+zB,IAc1B+U,EAAiB9oC,OAAAyqB,EAAA,UAAAzqB,CAAO,CAC5BssB,EAAO6H,EAAOhf,KAAKugB,aAAc,IACjCpJ,EAAOlX,EAAQtF,QAAS,IACxBwc,EAAO,EAAG,IACVA,EAAOa,EAAW,IAClBb,EAAO6N,EAAa,IACpB7N,EAAOc,EAAO,IACdd,EAAOsc,EAAgB,IACvBtc,EAAOuc,EAAqB,MAK9B,OAAO7oC,OAAA0/B,GAAA,KAAA1/B,CAAK86B,EAAOD,YAAYiO,IAAuC5iB,KACpElmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA+oC,GAAgB,OACvB5E,EAAqBkC,UAAUlf,aAC7BgG,EACAgH,EAAOhf,KAAK1L,QACZ6E,EACA6rB,EACA/M,EACAwb,EACAC,EACAE,KAGJ/oC,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAsmC,GAAE,OACJ5/B,QAAQi5B,IAAR,yBAAA3f,OAAqCsmB,EAAGQ,KAAxC,UAAA9mB,OAAqDmU,EAAOhf,KAAKugB,aAAjE,QAEF11B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAMsmC,GAAN,OAAWC,GAAAC,QAAA,SAAApuB,mBAAAC,KAAA,SAAA+N,IAAA,OAAAhO,mBAAAG,KAAA,SAAA8N,GAAA,eAAAA,EAAA5N,KAAA4N,EAAA3N,MAAA,OAAa,OAAb2N,EAAA3N,KAAA,EAAmB4tB,EAAGI,OAAtB,cAAArgB,EAAArB,GAAAqB,EAAApC,KAAAoC,EAAAsgB,GAA8BL,EAA9BjgB,EAAAlC,OAAA,UAAIyiB,QAAJvgB,EAAArB,GAA8BshB,GAA9BjgB,EAAAsgB,KAAA,wBAAAtgB,EAAAtN,SAAAqN,QACpBpmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAgpC,GAAoB,IAAjBpC,EAAiBoC,EAAjBpC,QAASN,EAAQ0C,EAAR1C,GACd,IAAKM,EAAQ1N,OACX,MAAM,IAAIv1B,MAAJ,iBAAAqc,OACamU,EAAOhf,KAAKugB,aADzB,gCAAA1V,OACoEsmB,EAAGQ,KADvE,aAIR,OADApgC,QAAQi5B,IAAR,oBAAA3f,OAAgCsmB,EAAGQ,KAAnC,yBACOR,EAAGQ,OAMZ9mC,OAAA+mC,GAAA,KAAA/mC,CAAW++B,GAAA,MACX/+B,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA8E,GAAK,OAAI9E,OAAAk/B,GAAA,KAAAl/B,CAAGm1B,GAAmBrwB,EAAOqvB,EAAOhf,cAiBnD8zB,GAAoB,SAC/B5H,EACAC,EAF+B4H,GAAA,IAG7B56B,EAH6B46B,EAG7B56B,QAASw1B,EAHoBoF,EAGpBpF,wBAHoB,OAK/BzC,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWq1B,KAClBr1B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAmpC,GAAoB,IAAAC,EAAAppC,OAAAi5B,GAAA,KAAAj5B,CAAAmpC,EAAA,GAAlBhV,EAAkBiV,EAAA,GAAV5qB,EAAU4qB,EAAA,GACrBjF,EAAuBL,EAAwB3P,EAAOhf,KAAKugB,cAC3DlW,EAA+Bxf,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAML,SAAU,CACvDgW,EAAOhf,KAAKugB,aACZvB,EAAOhf,KAAK1L,UAEd,IACG+V,GACCA,EAAQhB,QAAUsO,EAAauB,YAAc7O,EAAQhB,QAAUsO,EAAand,WAC7E6P,EAAQzU,GACT,CACA,IAAMjG,EAAQ,IAAInB,MAAJ,gBAAAqc,OACImU,EAAOhf,KAAKugB,aADhB,WAAA1V,OACsCmU,EAAOhf,KAAK1L,QADlD,4DAGd,OAAOzJ,OAAAk/B,GAAA,KAAAl/B,CAAGu1B,GAAoBzwB,EAAOqvB,EAAOhf,OAE9C,IAAMgY,EAAY3N,EAAQzU,GAEpBs+B,EAAmB,CACvBhc,kBAAmBpG,EAAA,QACnBqG,aAAcrG,EAAA,QACdsG,UAAWtG,EAAA,aAETqiB,EAAKtpC,OAAAif,OAAA,CACL3Q,QAAS6lB,EAAOhf,KAAK1L,SACjB+V,EAAQ/V,QAAQqkB,cAAgBub,GAEtCE,EAAKvpC,OAAAif,OAAA,CACH3Q,WACIkR,EAAQyO,IAAIH,cAAgBub,GAEpC,GAAI7pB,EAAQ4O,mBAAZ,KAAAob,EAAiD,CAACD,EAAOD,GAAxBA,EAAjCE,EAAA,GAAwCD,EAAxCC,EAAA,GAGA,OAAOxpC,OAAA0/B,GAAA,KAAA1/B,CACLmkC,EAAqBkC,UAAU5e,cAC7B0F,EACAmc,EAAMh7B,QACNg7B,EAAMjc,kBACNic,EAAMhc,aACNgc,EAAM/b,UACNgc,EAAMj7B,QACNi7B,EAAMlc,kBACNkc,EAAMjc,aACNic,EAAMhc,YAERrH,KACAlmB,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAsmC,GAAE,OACJ5/B,QAAQi5B,IAAR,0BAAA3f,OAAsCsmB,EAAGQ,KAAzC,UAAA9mB,OAAsDmU,EAAOhf,KAAKugB,aAAlE,QAEF11B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAMsmC,GAAN,OAAWC,GAAAC,QAAA,SAAApuB,mBAAAC,KAAA,SAAAoxB,IAAA,OAAArxB,mBAAAG,KAAA,SAAAmxB,GAAA,eAAAA,EAAAjxB,KAAAixB,EAAAhxB,MAAA,OAAa,OAAbgxB,EAAAhxB,KAAA,EAAmB4tB,EAAGI,OAAtB,cAAAgD,EAAA1kB,GAAA0kB,EAAAzlB,KAAAylB,EAAA/C,GAA8BL,EAA9BoD,EAAAvlB,OAAA,UAAIyiB,QAAJ8C,EAAA1kB,GAA8BshB,GAA9BoD,EAAA/C,KAAA,wBAAA+C,EAAA3wB,SAAA0wB,QACpBzpC,OAAA2K,GAAA,KAAA3K,CAAI,SAAA2pC,GAAoB,IAAjB/C,EAAiB+C,EAAjB/C,QAASN,EAAQqD,EAARrD,GACd,IAAKM,EAAQ1N,OACX,MAAM,IAAIv1B,MAAJ,iBAAAqc,OACamU,EAAOhf,KAAKugB,aADzB,iCAAA1V,OACqEsmB,EAAGQ,KADxE,aAIR,OADApgC,QAAQi5B,IAAR,qBAAA3f,OAAiCsmB,EAAGQ,KAApC,yBACOR,EAAGQ,OAMZ9mC,OAAA+mC,GAAA,KAAA/mC,CAAW++B,GAAA,MACX/+B,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA8E,GAAK,OAAI9E,OAAAk/B,GAAA,KAAAl/B,CAAGu1B,GAAoBzwB,EAAOqvB,EAAOhf,cAYpDy0B,GAAwB,SACnCvI,EACAC,GAFmC,OAInCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWs0B,KAClBt0B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAwxB,EAAAC,GAAA,IAAAC,EAAAjX,EAAAtU,EAAAkX,EAAAjsB,EAAA+V,EAAA,OAAApH,mBAAAG,KAAA,SAAAyxB,GAAA,eAAAA,EAAAvxB,KAAAuxB,EAAAtxB,MAAA,OAAAqxB,EAAA/pC,OAAAi5B,GAAA,KAAAj5B,CAAA8pC,EAAA,GAEMhX,EAFNiX,EAAA,GAELnV,QAAW9B,YAEbtU,EAJOurB,EAAA,GAAAC,EAAAhlB,GAAA5M,mBAAAnN,KAMoBuT,EAAML,UAN1B,WAAA6rB,EAAArD,GAAAqD,EAAAhlB,MAAAvU,KAAA,CAAAu5B,EAAAtxB,KAAA,SAMIgd,EANJsU,EAAArD,GAAA7gC,MAAAkkC,EAAAC,GAAA7xB,mBAAAnN,KAOiBuT,EAAML,SAASuX,IAPhC,WAAAsU,EAAAE,GAAAF,EAAAC,MAAAx5B,KAAA,CAAAu5B,EAAAtxB,KAAA,YAOMjP,EAPNugC,EAAAE,GAAApkC,MAQG0Z,EAAUhB,EAAML,SAASuX,GAAcjsB,KAE3C+V,EAAQhB,QAAUsO,EAAapd,QAC/B8P,EAAQ0O,eACR1O,EAAQ8O,YACRwE,EAActT,EAAQ8O,WAAa9O,EAAQ0O,eAb1C,CAAA8b,EAAAtxB,KAAA,SAeD,OAfCsxB,EAAAtxB,KAAA,GAeK0c,GACJ,CAAE+U,gBAAiBrX,GACnB,CAAE4C,aAAcA,EAAyBjsB,QAASA,IAjBnD,QAAAugC,EAAAtxB,KAAA,gBAAAsxB,EAAAtxB,KAAA,iCAAAsxB,EAAAjxB,SAAA8wB,Q,ufCtyBP,SAAUO,GAAgBC,GAG9B,IAEIjoB,EAFEkoB,EAAM,sBACNC,EAAoB,GAE1B,MAAQnoB,EAAQkoB,EAAIE,KAAKH,GACvBE,EAAQxqC,KAAKqiB,EAAM,IAEnB,OAAKmoB,EASH,SAAgBE,GAAUxX,G,4JAQf,OAPXjP,EAAMiP,EACLjP,EAAIrD,SAAS,SAChBqD,EAAG,WAAAhE,OAAcgE,IAEnBA,GAAG,2BACC0mB,EAAQte,KAAKC,M,kBAEIse,KAAM3mB,G,UAAnB4mB,E,SACFA,EAAK1R,OAAS,KAAO0R,EAAK1R,QAAU,K,uBAAW2R,I,6DAEnDH,EAAQG,I,iCAEH,CAAE5X,SAAQ6X,IAAK1e,KAAKC,MAAQqe,I,wDAS/B,SAAUK,GAAc9X,GAC5B,IAAM7Q,EAAQ,6BAA4BooB,KAAKvX,GAC/C,OAAO7Q,GAASA,EAAM,GAUlB,SAAU4oB,GACdhY,EACAvE,GAOE,IAAI5T,EAAO7a,OAAAirC,GAAA,aAAAjrC,CAAU,2BAA4B,CAAEkrC,QAASzc,IAC9D,OAAOuE,EAAOmY,MAAMC,mBAAcrmC,EAAW,MAAO8V,G,cCzEzCwwB,GAAb,WAII,SAAFC,EAAmB9f,GAAWxrB,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAAwiC,GAHvBxiC,KAAAiiB,OAAoB,IAAIwgB,IAI7BziC,KAAK0iB,IAAMA,EALf,OAAAxrB,OAAAmN,GAAA,KAAAnN,CAAAsrC,EAAA,EAAAllC,IAAA,MAAAN,MAAA,SAQaM,GACH,IAAAolC,EAAQ1iC,KAAKiiB,OAAOrlB,IAAIU,GAM9B,OALIolC,IAEF1iC,KAAKiiB,OAAO0gB,OAAOrlC,GACnB0C,KAAKiiB,OAAO2gB,IAAItlC,EAAKolC,IAEhBA,IAfX,CAAAplC,IAAA,MAAAN,MAAA,SAkBaM,EAAQN,GACjB,GAAIgD,KAAKiiB,OAAOna,MAAQ9H,KAAK0iB,IAAK,CAEhC,IAAMmgB,EAAc7iC,KAAKiiB,OAAO9f,OAAOyN,OAAO5S,MAC9CgD,KAAKiiB,OAAO0gB,OAAOE,GAErB7iC,KAAKiiB,OAAO2gB,IAAItlC,EAAKN,OAxBzBwlC,EAAA,G,aCYaM,GAAgB5rC,OAAAsrB,EAAA,WAAAtrB,CAC3B,SAACqhC,GAAD,OACEA,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWi3B,KAClBj3B,OAAA6rC,GAAA,KAAA7rC,CAEE,SAAC8rC,EAAWC,GAAZ,OAAuB/rC,OAAAif,OAAA,GAClB6sB,EADkB9rC,OAAAwF,EAAA,KAAAxF,CAAA,GAEpB+rC,EAAO52B,KAAK7G,QAAUy9B,KAEzB,IAEF/rC,OAAAgsC,GAAA,KAAAhsC,CAAU,IACVA,OAAAisC,GAAA,KAAAjsC,MCiDAksC,GAAY,CAAC,SAAU,eACvBC,GAAS,0BAYFC,GAAiB,SAAA1rB,EAE5B4gB,EAF4BzgB,GAAA7gB,OAAA4sB,EAAA,KAAA5sB,CAAA0gB,GAAA,IAG1BpS,EAH0BuS,EAG1BvS,QAAS8G,EAHiByL,EAGjBzL,QAAS0lB,EAHQja,EAGRia,OAAQuR,EAHAxrB,EAGAwrB,QAASpG,EAHTplB,EAGSolB,QAHT,OAK5B3E,EAAOpb,KACLlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAA2hC,GAAA,KAAA3hC,CAAeimC,GACfjmC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAkhC,GAAkD,IAAAK,EAAAvhC,OAAAi5B,GAAA,KAAAj5B,CAAAkhC,EAAA,GAAhD1iB,EAAgD+iB,EAAA,GAAA+K,EAAA/K,EAAA,GAAvCgL,EAAuCD,EAAvCC,aAAcC,EAAyBF,EAAzBE,mBAC1BvZ,EAA6BjzB,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAO,CAAC,YAAa,SAAU,WACpE0U,EAAuClzB,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAO,CAAC,YAAa,SAAU,UAE5E,OAAIyU,GAAYsZ,GAAgBA,IAAiBtZ,EAGtCsZ,EAEFvsC,OAAAk/B,GAAA,KAAAl/B,CAAG,CAAEizB,OAAQsZ,EAAcrZ,WAAOnuB,IAGlC/E,OAAA0/B,GAAA,KAAA1/B,CAAK2qC,KAAM6B,IAAqBtmB,KACrClmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAysC,GACP,OAAKA,EAASC,GAMPD,EAAS9/B,OALP3M,OAAA2sC,GAAA,KAAA3sC,CACL,IAAI2D,MAAJ,qCAAAqc,OACuCwsB,EADvC,SAAAxsB,OACiEysB,EAASvT,YAKhFl5B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA2M,GAAI,OAAI3M,OAAA0/B,GAAA,KAAA1/B,CAAKoqC,GAAgBz9B,MACtC3M,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAizB,GAAM,OAAIwX,GAAUxX,KAC7BjzB,OAAA4sC,GAAA,KAAA5sC,GACAA,OAAA2K,GAAA,KAAA3K,CAAI,SAAA6sC,GAAI,OAAI7sC,OAAAsrB,EAAA,UAAAtrB,CAAO6sC,EAAM,CAAC,UAC1B7sC,OAAA2K,GAAA,KAAA3K,CAAI,SAAA6sC,GACF,IAAKA,EAAK,IAA6B,kBAAhBA,EAAK,GAAG/B,KAAoBgC,MAAMD,EAAK,GAAG/B,KAC/D,MAAM,IAAInnC,MAAJ,yCAAAqc,OAAmD+sB,KAAKC,UAAUH,KAC1E,OAAOA,EAAK,GAAG5Z,SAEjBjzB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAizB,GAAM,MAAK,CACbA,OAAQA,EAAOtS,SAAS,OAASsS,EAAzB,WAAAjT,OAA6CiT,GACrDC,WAAOnuB,MA3BJ/E,OAAAk/B,GAAA,KAAAl/B,CAAG,CAAEizB,SAAQC,YAgCxBlzB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA4hC,GAGR,IAFC3O,EAED2O,EAFC3O,OACAC,EACD0O,EADC1O,MACD2O,EACqE3O,GAAS,GAAvEzE,EADPoT,EACOpT,OAAQC,EADfmT,EACenT,YAAaC,EAD5BkT,EAC4BlT,SAC3B,GAAIuE,EAAO,CAET,IAAMF,EAAShzB,OAAAitC,GAAA,gBAAAjtC,CAAa,CAC1BktC,QAASja,EACTxE,SACAC,cACAC,aAEF,OAAO3uB,OAAAk/B,GAAA,KAAAl/B,CAAG,CAAEgzB,SAAQC,SAAQC,UAE5B,IAAMia,EAAapC,GAAc9X,GACjC,IAAKka,EAAY,OAAOntC,OAAA2sC,GAAA,KAAA3sC,CAAW,IAAI2D,MAAJ,kCAAAqc,OAA4CiT,EAA5C,OACnC,IAAMma,EAASptC,OAAAitC,GAAA,gBAAAjtC,CAAa,CAAEktC,QAASja,IACjCoa,EAAW/+B,EAAQg/B,cAIzB,OAHA7e,EAAM,IAAAzO,OAAOqtB,EAAP,KAAArtB,OAAmBmtB,GAGlBntC,OAAA0/B,GAAA,KAAA1/B,CAAK86B,EAAOD,YAAYsS,IAAajnB,KAC1ClmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAutC,GAAQ,OACfvtC,OAAA0/B,GAAA,KAAA1/B,CAAKotC,EAAOI,kBAAkBH,EAAUE,IAAWrnB,KACjDlmB,OAAAgnC,GAAA,KAAAhnC,CAAW,kBAAMA,OAAA0/B,GAAA,KAAA1/B,CAAKotC,EAAOK,SAASJ,EAAUE,SAGpDvtC,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAU,GAKF0sC,EAAOze,SAAWjuB,EAAOgtC,UACzBN,EAAOjC,MAAMwC,KAAKjf,YAAchuB,EAAOktC,aACvCR,EAAOS,YAAc,CACnBpf,OAAQ/tB,EAAOotC,SAGjBpf,EAAchuB,EAAOktC,aACrBjf,EAAWjuB,EAAOgtC,YAGpB1tC,OAAAw/B,GAAA,KAAAx/B,CAAS,kBAAM86B,EAAOD,YAAYpM,KAClCzuB,OAAA2K,GAAA,KAAA3K,CAAI,SAAA+tC,GAAY,MAAK,CACnB/a,OAAAoa,EACAna,SACAC,MAAO,CACLzE,OAAQA,EACRC,YAAaA,EACbC,SAAUA,EACVC,YAAamf,SAMvB/tC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAiiC,GAAI,IAADjP,EAAHiP,EAAGjP,OAAQC,EAAXgP,EAAWhP,OAAQC,EAAnB+O,EAAmB/O,MAAf,OAELlzB,OAAN0/B,GAAA,KAAM1/B,CAADgzB,EAAOgb,eAAe9a,EAAMtE,cAAc1I,KAE7ClmB,OAAAw/B,GAAA,KAAAx/B,CAAS,kBACPgzB,EAAOib,SAAP,WAAAjuB,OACa5K,EAAQ/P,MAAQ+P,EAAQtF,QADrC,eAAAkQ,OAC0D+qB,GAAc9X,OAG1EjzB,OAAAkuC,GAAA,KAAAluC,CAAM,CAAEgzB,SAAQC,SAAQC,aAG5BlzB,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAkiC,GAAe,IAAZlP,EAAYkP,EAAZlP,OAELqZ,EAAQ3zB,KAAKsa,GACbqZ,EAAQ8B,aAEVnuC,OAAA2K,GAAA,KAAA3K,CAAI,SAAAqiC,GAAA,IAAGpP,EAAHoP,EAAGpP,OAAQC,EAAXmP,EAAWnP,MAAX,OAAuB6D,GAAY,CAAE9D,SAAQC,cAcxCkb,GAAkB,SAC7B/M,EAD6BiB,EAAAE,GAAAxiC,OAAA4sB,EAAA,KAAA5sB,CAAAsiC,GAAA,IAG3B+J,EAH2B7J,EAG3B6J,QAH2B,OAK7BhL,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW+2B,KAClB/2B,OAAAo/B,GAAA,KAAAp/B,CAAU,kBAAMqsC,IAChBrsC,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAgzB,GAAM,OAAItsB,QAAQi5B,IAAI,gBAAiB3M,KAC3ChzB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAgzB,GAAM,OAAIA,EAAOqb,YAAY,CAAEC,iBAAkB,MAC1DtuC,OAAAuuC,GAAA,KAAAvuC,KAWSwuC,GAAqB,SAChCnN,EADgC4B,EAAAC,GAAAljC,OAAA4sB,EAAA,KAAA5sB,CAAAijC,GAAA,IAG9BoJ,EAH8BnJ,EAG9BmJ,QAH8B,OAKhCA,EAAQnmB,KACNlmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAgzB,GAAM,OAAIqO,EAAQnb,KAAKlmB,OAAAyuC,GAAA,KAAAzuC,CAAS,kBAAMgzB,EAAO0b,kBACtD1uC,OAAAuuC,GAAA,KAAAvuC,KAgBS2uC,GAA4B,SACvCtN,EADuC8B,EAAAU,GAAA7jC,OAAA4sB,EAAA,KAAA5sB,CAAAmjC,GAAA,IAGrCkJ,EAHqCxI,EAGrCwI,QAHqC,OAOvChL,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWg3B,KAElBh3B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAm0B,GAAM,OAAIkY,EAAQnmB,KAAKlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAgzB,GAAM,MAAK,CAAEmB,SAAQnB,eACzDhzB,OAAA2hC,GAAA,KAAA3hC,CAAe4rC,GAAcvK,IAE7BrhC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAqkC,GAAoC,IAAAC,EAAAtkC,OAAAi5B,GAAA,KAAAj5B,CAAAqkC,EAAA,GAAAuK,EAAAtK,EAAA,GAAhCnQ,EAAgCya,EAAhCza,OAAQnB,EAAwB4b,EAAxB5b,OAAU8Y,EAAcxH,EAAA,GAC3C,GAAInQ,EAAOhf,KAAK7G,WAAWw9B,EAEzB,OAAO9rC,OAAAk/B,GAAA,KAAAl/B,CAAG8rC,EAAU3X,EAAOhf,KAAK7G,UAElC,IAAMugC,EAAqB,GALgBhX,GAAA,EAAAC,GAAA,EAAAC,OAAAhzB,EAAA,IAM3C,QAAAizB,EAAAC,EAAmBjF,EAAO8b,WAA1BlpC,OAAAsyB,cAAAL,GAAAG,EAAAC,EAAAvf,QAAAjI,MAAAonB,GAAA,EAAsC,KAA3BkX,EAA2B/W,EAAAlyB,MACpC,GAAKipC,EAAKngB,aACLmgB,EAAKC,SAAV,CACA,IAAIC,OAA8B,EAClC,IACE,IAAM7sB,EAAQ+pB,GAAO3B,KAAKuE,EAAKtgB,QAC/B,IAAKrM,GAASpiB,OAAAyqB,EAAA,cAAAzqB,CAAWoiB,EAAM,MAAQ+R,EAAOhf,KAAK7G,QAAS,SAE5D,GADA2gC,EAAYjvC,OAAAyqB,EAAA,iBAAAzqB,CAAc+uC,EAAKtgB,OAAQsgB,EAAKngB,cACvCqgB,GAAaA,IAAc9a,EAAOhf,KAAK7G,QAAS,SACrD,MAAO5K,GACP,SAEFmrC,EAAW9uC,KAAKgvC,KAlByB,MAAArrC,GAAAo0B,GAAA,EAAAC,EAAAr0B,EAAA,YAAAm0B,GAAA,MAAAI,EAAAE,QAAAF,EAAAE,SAAA,WAAAL,EAAA,MAAAC,GAuB3C,GAAI8W,EAAWhvC,OAAS,EAAG,CACzB,IAAMqvC,EAAOlvC,OAAAsrB,EAAA,SAAAtrB,CAAM6uC,EAAY,kBAC/B,OAAO7uC,OAAAk/B,GAAA,KAAAl/B,CACLi3B,GACE,CAAExI,OAAQygB,EAAKzgB,OAAQyI,UAAWgV,GAAUvrB,SAASuuB,EAAKF,WAC1D7a,EAAOhf,OAMb,OAAOnV,OAAA0/B,GAAA,KAAA1/B,CAELgzB,EAAOmc,oBAAoB,CAAEC,KAAMjb,EAAOhf,KAAK7G,QAAQg/B,iBACvDpnB,KAEAlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAykC,GAAgB,IAAb8F,EAAa9F,EAAb8F,QACCsE,EAAuB,GADXQ,GAAA,EAAAC,GAAA,EAAAC,OAAAxqC,EAAA,IAElB,QAAAyqC,EAAAC,EAAmBlF,EAAnB3kC,OAAAsyB,cAAAmX,GAAAG,EAAAC,EAAA/2B,QAAAjI,MAAA4+B,GAAA,EAA4B,KAAjBK,EAAiBF,EAAA1pC,MAC1B,GAAK4pC,EAAKC,aAAV,CACA,IACE,IAAMvtB,EAAQ+pB,GAAO3B,KAAKkF,EAAK5B,SAC/B,IAAK1rB,GAASpiB,OAAAyqB,EAAA,cAAAzqB,CAAWoiB,EAAM,MAAQ+R,EAAOhf,KAAK7G,QAAS,SAC5D,IAAM2gC,EAAYjvC,OAAAyqB,EAAA,iBAAAzqB,CAAc0vC,EAAK5B,QAAS4B,EAAKC,cACnD,IAAKV,GAAaA,IAAc9a,EAAOhf,KAAK7G,QAAS,SACrD,MAAO5K,GACP,SAEFmrC,EAAW9uC,KAAK2vC,EAAK5B,WAZL,MAAApqC,GAAA4rC,GAAA,EAAAC,EAAA7rC,EAAA,YAAA2rC,GAAA,MAAAI,EAAAtX,QAAAsX,EAAAtX,SAAA,WAAAmX,EAAA,MAAAC,GAclB,GAA0B,IAAtBV,EAAWhvC,OAEb,MAAM,IAAI8D,MAAJ,oDAAAqc,OAEFmU,EAAOhf,KAAK7G,QAFV,QAAA0R,OAGG+sB,KAAKC,UAAUzC,KAErB,OAAOsE,IAEd7uC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA4vC,GAAO,OAAI5vC,OAAA0/B,GAAA,KAAA1/B,CAAK4vC,KACzB5vC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAyuB,GAAM,OACbuc,GAAgBhY,EAAQvE,GACrBxqB,KAAK,SAAA+qC,GAAQ,OAAIhvC,OAAAif,OAAA,GAAM+vB,EAAQ,CAAElB,QAASrf,MAC1CuS,MAAM,SAAAt9B,GAEL,OADAgD,QAAQi5B,IAAI,0CAA2Cj8B,GAChD,CAAEsrC,SAAU,GAAIlB,QAASrf,OAGtCzuB,OAAAsI,GAAA,KAAAtI,CAAO,SAAAgvC,GAAQ,QAAMA,KAAcA,EAASA,WAC5ChvC,OAAA4sC,GAAA,KAAA5sC,GAOAA,OAAA2K,GAAA,KAAA3K,CAAI,SAAA8rC,GAAS,OAAI9rC,OAAAsrB,EAAA,SAAAtrB,CAAM8rC,EAAW,qBAClC9rC,OAAA2K,GAAA,KAAA3K,CAAI,SAAA0kC,GAAA,IAAGsK,EAAHtK,EAAGsK,SAAmBvgB,EAAtBiW,EAAaoJ,QAAb,OACF7W,GACE,CACExI,SACAyI,UAAWgV,GAAUvrB,SAASquB,IAEhC7a,EAAOhf,QAGXnV,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA0D,GAAG,OAAI1D,OAAAk/B,GAAA,KAAAl/B,CAAGo3B,GAAmC1zB,EAAKywB,EAAOhf,cAe/D06B,GAA2B,SACtCxO,EADsCuD,EAAAS,GAAArlC,OAAA4sB,EAAA,KAAA5sB,CAAA4kC,GAAA,IAGpCyH,EAHoChH,EAGpCgH,QAHoC,OAKtCA,EAAQnmB,KAENlmB,OAAAo/B,GAAA,KAAAp/B,CAAU,SAAAgzB,GAAM,OAGdhzB,OAAA8vC,GAAA,KAAA9vC,CAAuBgzB,EAAQ,SAAS9M,KAAKlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAsD,GAAK,MAAK,CAAEA,QAAO0vB,eAEtEhzB,OAAAsI,GAAA,KAAAtI,CAAO,SAAAslC,GAAA,IAAGhiC,EAAHgiC,EAAGhiC,MAAH,MAAmC,eAApBA,EAAMysC,YAE5B/vC,OAAA2K,GAAA,KAAA3K,CAAI,SAAAulC,GAAsB,IAAnBjiC,EAAmBiiC,EAAnBjiC,MAAO0vB,EAAYuS,EAAZvS,OAENkc,EAAOlc,EAAOgd,QAAQ1sC,EAAM2sC,aAChC7tB,EAAQ+pB,GAAO3B,KAAK0E,EAAKzgB,QACzByhB,EAAc9tB,GAASA,EAAM,GAE/B,MAAO,CACL8sB,OACAlc,SACAkd,YAAcA,GAAelwC,OAAAyqB,EAAA,cAAAzqB,CAAWkwC,MAI1ClwC,OAAFsI,GAAA,KAAEtI,CAAK,SAAAwlC,GAAA,IAAG0J,EAAH1J,EAAG0J,KAAMgB,EAAT1K,EAAS0K,YAAT,SAA8BhB,EAAKF,WAAYkB,KACtDlwC,OAAA2hC,GAAA,KAAA3hC,CAEEqhC,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWg3B,KAClBh3B,OAAA6rC,GAAA,KAAA7rC,CAAK,SAACmwC,EAAW5sC,GAAZ,OAAwB4sC,EAAU/T,IAAI74B,EAAQ4R,KAAK7G,UAAU,IAAI8hC,KACtEpwC,OAAAgsC,GAAA,KAAAhsC,CAAU,IAAIowC,MAGhBxE,GAAcvK,IAIhBrhC,OAAAsI,GAAA,KAAAtI,CAAO,SAAAylC,GAAA,IAAAC,EAAA1lC,OAAAi5B,GAAA,KAAAj5B,CAAAylC,EAAA,GAAIyK,EAAJxK,EAAA,GAAIwK,YAAeC,EAAnBzK,EAAA,UAAkCyK,EAAUE,IAAIH,KACvDlwC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA2lC,GAAiD,IAAAC,EAAA5lC,OAAAi5B,GAAA,KAAAj5B,CAAA2lC,EAAA,GAAA2K,EAAA1K,EAAA,GAA7CsJ,EAA6CoB,EAA7CpB,KAAMlc,EAAuCsd,EAAvCtd,OAAQkd,EAA+BI,EAA/BJ,YAAiBpE,EAAclG,EAAA,GAElDnX,EAASygB,EAAKzgB,OAClBngB,EAAU4hC,EACVlB,EAAWE,EAAKF,SAChB9X,EAAYgV,GAAUvrB,SAASquB,GAEjC,GACE1gC,KAAWw9B,GACXA,EAAUx9B,GAASsmB,QAAQnG,SAAWA,GACtCqd,EAAUx9B,GAASsmB,QAAQsC,YAAcA,EAGzC,OAAO6H,GAAA,KAGT,IAAMwR,EAA+CrB,EAAKtgB,YACtD5uB,OAAAk/B,GAAA,KAAAl/B,CAAGkvC,EAAKtgB,aACR5uB,OAAA0/B,GAAA,KAAA1/B,CAAKgzB,EAAOwd,eAAe/hB,EAAQ,gBAAgBvI,KACjDlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAywC,GAAO,OAAIA,EAAQC,cACvB1wC,OAAAgnC,GAAA,KAAAhnC,CAAW,kBAAMA,OAAAk/B,GAAA,KAAAl/B,MAAG+E,MAG1B,OAAOwrC,EAAarqB,KAClBlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAA4uB,GAEF,IAAKA,EAAa,MAAM,IAAIjrB,MAAJ,iCAAAqc,OAA2CyO,EAA3C,MAExB,IAAMwgB,EAAYjvC,OAAAyqB,EAAA,iBAAAzqB,CAAcyuB,EAAQG,GACxC,IAAKqgB,GAAaA,IAAciB,EAC9B,MAAM,IAAIvsC,MAAJ,8CAAAqc,OAC0CyO,EAD1C,YAAAzO,OAC2DivB,EAD3D,MAGR,OAAOA,IAETjvC,OAAA2K,GAAA,KAAA3K,CAAI,SAAAsO,GAAO,OACT2oB,GAAqB,CAAExI,SAAQyI,YAAWC,GAAI+X,EAAKyB,gBAAkB,CAAEriC,iBAI7EtO,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA0D,GAAG,OAAKgD,QAAQi5B,IAAI,4CAA6Cj8B,GAAMq7B,GAAA,SAYzE6R,GAAuB,SAClCvP,EACAC,EAFkC0E,GAAA,IAGhCqG,EAHgCrG,EAGhCqG,QAHgC,OAKlCrsC,OAAAg/B,GAAA,KAAAh/B,CAAc4rC,GAAcvK,GAAUC,GAAQpb,KAG5ClmB,OAAA6wC,GAAA,KAAA7wC,CAAU,IAAI8wC,GAAA,KAAwC,GAAI,SAAAC,GAAqB,OAE7E1P,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW09B,KAElB19B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAm0B,GAAM,OAAIkY,EAAQnmB,KAAKlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAgzB,GAAM,MAAK,CAAEmB,SAAQnB,eAGzDhzB,OAAAgxC,GAAA,KAAAhxC,CAAU,SAAAkmC,GAAA,IAAG/R,EAAH+R,EAAG/R,OAAQnB,EAAXkT,EAAWlT,OAAX,OAER+d,EAAsB7qB,KAEpBlmB,OAAAsI,GAAA,KAAAtI,CAAO,SAAAmmC,GAAA,IAAAU,EAAA7mC,OAAAi5B,GAAA,KAAAj5B,CAAAmmC,EAAA,GAAE2F,EAAFjF,EAAA,UAAiB1S,EAAOhf,KAAK7G,WAAWw9B,IAC/C9rC,OAAAixC,GAAA,KAAAjxC,CAAK,GAELA,OAAAsI,GAAA,KAAAtI,CACE,SAAAknC,GAAA,IAAAC,EAAAnnC,OAAAi5B,GAAA,KAAAj5B,CAAAknC,EAAA,GAAI1oB,EAAJ2oB,EAAA,UAAgBnnC,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAO,CAAC,YAAa,SAAU,QAAS2V,EAAOhf,KAAK7G,QAAS,MAInFtO,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAonC,GAAA,IAAAC,EAAArnC,OAAAi5B,GAAA,KAAAj5B,CAAAonC,EAAA,GAAE0E,EAAFzE,EAAA,UACPrU,EAAOke,WAAW,CAChBC,WAAY,UACZC,OAAQ,CAACtF,EAAU3X,EAAOhf,KAAK7G,SAASsmB,QAAQnG,YAGpDzuB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAunC,GAAA,IAAYhQ,EAAZgQ,EAAG8J,QAAH,OAAyBha,GAAW,CAAEE,UAAUpD,EAAOhf,gBAe1Dm8B,GAAmB,SAC9BjQ,EACAC,EAF8BmG,GAAA,IAG5B4E,EAH4B5E,EAG5B4E,QAH4B,OAK9BhL,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWi3B,KAClBj3B,OAAAsI,GAAA,KAAAtI,CAAO,SAAAm0B,GAAM,OAAIA,EAAOS,QAAQsC,YAE9Bl3B,OAAFw/B,GAAA,KAAEx/B,CAAO,SAAAm0B,GAAM,OAAIkY,EAAQnmB,KAAKlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAgzB,GAAM,MAAK,CAAEmB,SAAQnB,eACzDhzB,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA0nC,GAAgC,IAAAO,EAAAjoC,OAAAi5B,GAAA,KAAAj5B,CAAA0nC,EAAA,GAAA6J,EAAAtJ,EAAA,GAA5B9T,EAA4Bod,EAA5Bpd,OAAQnB,EAAoBue,EAApBve,OAAUxU,EAAUypB,EAAA,GACjC1Q,EAA6Bv3B,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAO,CAC5C,YACA,SACA,QACA2V,EAAOhf,KAAK7G,QACZ,IAEF,GAAIipB,EAAQ,CACV,IAAME,EAAOzE,EAAOwe,QAAQja,GAC5B,GAAIE,EAAM,CACR,IAAMga,EAASha,EAAKia,UAAUvd,EAAOS,QAAQnG,QAC7C,IAAKgjB,EAAQ,OAAOzxC,OAAA0/B,GAAA,KAAA1/B,CAAKgzB,EAAOoe,OAAO7Z,EAAQpD,EAAOS,QAAQnG,UAGlE,OAAOsQ,GAAA,OAET/+B,OAAAuuC,GAAA,KAAAvuC,KAWS2xC,GAA0B,SACrCtQ,EADqC6G,EAAAC,GAAAnoC,OAAA4sB,EAAA,KAAA5sB,CAAAkoC,GAAA,IAGnCmE,EAHmClE,EAGnCkE,QAHmC,OAKrCA,EAAQnmB,KAENlmB,OAAAo/B,GAAA,KAAAp/B,CAAU,SAAAgzB,GAAM,OACdhzB,OAAA8vC,GAAA,KAAA9vC,CACEgzB,EACA,wBACA,SAAC1vB,EAAOmuC,GAAR,MAAoB,CAAEnuC,QAAOmuC,SAAQze,cAGzChzB,OAAAsI,GAAA,KAAAtI,CAEE,SAAAuoC,GAAA,IAAGkJ,EAAHlJ,EAAGkJ,OAAQze,EAAXuV,EAAWvV,OAAX,OACEye,EAAOhjB,SAAWuE,EAAO4e,aAAqC,WAAtBH,EAAOI,aAEnD7xC,OAAA2hC,GAAA,KAAA3hC,CAAe4rC,GAAcvK,IAC7BrhC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAyoC,GAA2C,IAAAC,EAAA1oC,OAAAi5B,GAAA,KAAAj5B,CAAAyoC,EAAA,GAAAqJ,EAAApJ,EAAA,GAAvCplC,EAAuCwuC,EAAvCxuC,MAAOmuC,EAAgCK,EAAhCL,OAAQze,EAAwB8e,EAAxB9e,OAAU8Y,EAAcpD,EAAA,GAC5Chb,EAASpqB,EAAM2sC,YACnB8B,EAAiB/xC,OAAAsrB,EAAA,QAAAtrB,CAAK8rC,EAAW,SAAAxqC,GAAC,OAAIA,EAAEszB,QAAQnG,SAAWf,IAC3DskB,EAAkBD,EACd/xC,OAAAk/B,GAAA,KAAAl/B,CAAG+xC,GACH1Q,EAAQnb,KAGNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWi3B,KAClBj3B,OAAAsI,GAAA,KAAAtI,CAAO,SAAA0qB,GAAC,OAAIA,EAAEkK,QAAQnG,SAAWf,IACjC1tB,OAAAixC,GAAA,KAAAjxC,CAAK,GAMLA,OAAAiyC,GAAA,KAAAjyC,CAAUA,OAAAkyC,GAAA,KAAAlyC,CAAM,OAExB,OAAOgyC,EAAgB9rB,KAAKlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAmyC,GAAc,MAAK,CAAEnf,SAAQye,SAAQU,uBAEvEnyC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA2oC,GAAA,IAAG3V,EAAH2V,EAAG3V,OAAQye,EAAX9I,EAAW8I,OAAQU,EAAnBxJ,EAAmBwJ,eAAnB,OAEPnyC,OAAA0/B,GAAA,KAAA1/B,CAAKgzB,EAAOib,SAASwD,EAAOla,OAAQ,CAAE6a,UAAU,KAASlsB,KACvDlmB,OAAA2K,GAAA,KAAA3K,CAAI,kBAAMq3B,GAAW,CAAEE,OAAQka,EAAOla,QAAU,CAAEjpB,QAAS6jC,EAAeh9B,KAAK7G,iBAc1E+jC,GAA6B,SACxChR,EACAC,EAFwC0H,GAAA,IAGtCqD,EAHsCrD,EAGtCqD,QAHsC,OAKxChL,EAAQnb,KAENlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWq3B,KAElBr3B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAm0B,GAAM,OAAIkY,EAAQnmB,KAAKlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAgzB,GAAM,MAAK,CAAEmB,SAAQnB,eACzDhzB,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAkpC,GAAgC,IAAAC,EAAAnpC,OAAAi5B,GAAA,KAAAj5B,CAAAkpC,EAAA,GAAAoJ,EAAAnJ,EAAA,GAA5BhV,EAA4Bme,EAA5Bne,OAAQnB,EAAoBsf,EAApBtf,OAAUxU,EAAU2qB,EAAA,GACjCoJ,EAAY,EACZpf,EAAQ3U,EAAMuU,UAAWC,OAAQG,MAAOgB,EAAOhf,KAAK7G,SAC1D,OAAOtO,OAAA0/B,GAAA,KAAA1/B,CAAKmzB,EAAM7qB,OAAO,SAAA8gC,EAAKzpC,GAAL,OAAAK,OAAA4sB,EAAA,KAAA5sB,CAAAopC,GAAWzpC,GAAK4yC,KAAYrsB,KACnDlmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAu3B,GAAM,OAAIvE,EAAOwf,MAAMjb,GAAQtzB,KAAK,kBAAMszB,MACnDv3B,OAAA2K,GAAA,KAAA3K,CAAI,SAAAu3B,GAAM,OAAID,GAAgB,CAAEC,UAAUpD,EAAOhf,aAc5Cs9B,GAA8B,SAAAjJ,EAEzClI,EAFyCqI,GAAA3pC,OAAA4sB,EAAA,KAAA5sB,CAAAwpC,GAAA,IAGvC6C,EAHuC1C,EAGvC0C,QAASj3B,EAH8Bu0B,EAG9Bv0B,QAH8B,OAKzCi3B,EAAQnmB,KAENlmB,OAAAo/B,GAAA,KAAAp/B,CAAU,SAAAgzB,GAAM,OACdhzB,OAAA8vC,GAAA,KAAA9vC,CAAgBgzB,EAAQ,QAAQ9M,KAAKlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAy3B,GAAI,MAAK,CAAEzE,SAAQuE,OAAQE,EAAKF,aAE3Ev3B,OAAA0yC,GAAA,KAAA1yC,CAAM,KACNA,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GAEfthC,OAAAsI,GAAA,KAAAtI,CAAO,SAAA8pC,GAAgC,IAAAC,EAAA/pC,OAAAi5B,GAAA,KAAAj5B,CAAA8pC,EAAA,GAAA6I,EAAA5I,EAAA,GAA5B/W,EAA4B2f,EAA5B3f,OAAQuE,EAAoBob,EAApBpb,OAAU/Y,EAAUurB,EAAA,GAC/BtS,EAAOzE,EAAOwe,QAAQja,GAC5B,IAAKE,EAAM,OAAO,EAClB,GAAIA,EAAKpyB,MAAQoyB,EAAKpyB,KAAK+c,MAAV,WAAApC,OAA2B5K,EAAQ/P,MAAQ+P,EAAQtF,QAAnD,gBACf,OAAO,EACT,IAAMqjB,EAAyCnzB,OAAAsrB,EAAA,OAAAtrB,CAC7Cwe,EACA,CAAC,YAAa,SAAU,SACxB,IAEF,IAAK,IAAMlQ,KAAW6kB,EAAO,KAAAyf,GAAA,EAAAC,GAAA,EAAAC,OAAA/tC,EAAA,IAC3B,QAAAguC,EAAAC,EAAqB7f,EAAM7kB,GAA3B1I,OAAAsyB,cAAA0a,GAAAG,EAAAC,EAAAt6B,QAAAjI,MAAAmiC,GAAA,EAAqC,KAA1BK,EAA0BF,EAAAjtC,MACnC,GAAImtC,IAAWxb,EAAKF,OAAQ,OAAO,GAFV,MAAA7zB,GAAAmvC,GAAA,EAAAC,EAAApvC,EAAA,YAAAkvC,GAAA,MAAAI,EAAA7a,QAAA6a,EAAA7a,SAAA,WAAA0a,EAAA,MAAAC,IAK7B,OAAO,IAET9yC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAkzC,GAAA,IAAAC,EAAAnzC,OAAAi5B,GAAA,KAAAj5B,CAAAkzC,EAAA,GAAAE,EAAAD,EAAA,GAAIngB,EAAJogB,EAAIpgB,OAAQuE,EAAZ6b,EAAY7b,OAAZ,OAA0BvE,EAAOwf,MAAMjb,KAChDv3B,OAAAuuC,GAAA,KAAAvuC,KAaSqzC,GAA2B,SAAAC,EAEtChS,EAFsCiS,GAAAvzC,OAAA4sB,EAAA,KAAA5sB,CAAAszC,GAAA,IAGpCjH,EAHoCkH,EAGpClH,QAHoC,OAKtCA,EAAQnmB,KAENlmB,OAAAo/B,GAAA,KAAAp/B,CAAU,SAAAgzB,GAAM,OACdhzB,OAAA8vC,GAAA,KAAA9vC,CACEgzB,EACA,oBACA,SAACyE,EAAMoa,GAAP,MAAuB,CAAEpa,OAAMoa,aAAY7e,cAI/ChzB,OAAAsI,GAAA,KAAAtI,CAAO,SAAAwzC,GAAA,IAAG3B,EAAH2B,EAAG3B,WAAH,MAAmC,UAAfA,IAC3B7xC,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAC,EAAAm7B,GAAA,IAAAC,EAAAjc,EAAAjZ,EAAA2U,EAAA7kB,EAAAqlC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxc,EAAA,OAAAnf,mBAAAG,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAg7B,EAAA1zC,OAAAi5B,GAAA,KAAAj5B,CAAAyzC,EAAA,GAAahc,EAAbic,EAAA,GAAajc,KAAQjZ,EAArBk1B,EAAA,GACDvgB,EAAyCnzB,OAAAsrB,EAAA,OAAAtrB,CAC7Cwe,EACA,CAAC,YAAa,SAAU,SACxB,IAJKhG,EAAAwM,GAAA5M,mBAAAnN,KAMekoB,GANf,WAAA3a,EAAAmuB,GAAAnuB,EAAAwM,MAAAvU,KAAA,CAAA+H,EAAAE,KAAA,SAMIpK,EANJkK,EAAAmuB,GAAA7gC,MAAA6tC,GAAA,EAAAC,GAAA,EAAAC,OAAA9uC,EAAAyT,EAAAC,KAAA,EAAAq7B,EAOgB3gB,EAAM7kB,GAPtB1I,OAAAsyB,YAAA,WAAAyb,GAAAI,EAAAD,EAAAp7B,QAAAjI,KAAA,CAAA+H,EAAAE,KAAA,YAOM6e,EAPNwc,EAAAjuC,MAQCyxB,IAAWE,EAAKF,OARjB,CAAA/e,EAAAE,KAAA,SASD,OATCF,EAAAE,KAAA,GASK4e,GAAgB,CAAEC,UAAU,CAAEjpB,QAASA,IAT5C,QAAAqlC,GAAA,EAAAn7B,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyxB,GAAAzxB,EAAA,YAAAo7B,GAAA,EAAAC,EAAAr7B,EAAAyxB,GAAA,QAAAzxB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAk7B,GAAA,MAAAG,EAAA3b,QAAA2b,EAAA3b,SAAA,WAAA3f,EAAAC,KAAA,IAAAm7B,EAAA,CAAAp7B,EAAAE,KAAA,eAAAm7B,EAAA,eAAAr7B,EAAAw7B,OAAA,mBAAAx7B,EAAAw7B,OAAA,YAAAx7B,EAAAE,KAAA,iCAAAF,EAAAO,SAAAT,EAAA,sCAwBA27B,GAAwB,SACnC5S,EACAC,EAFmC4S,GAAA,IAGjC7H,EAHiC6H,EAGjC7H,QAHiC,OAKnCrsC,OAAAg/B,GAAA,KAAAh/B,CAAc4rC,GAAcvK,GAAUC,GAAQpb,KAG5ClmB,OAAA6wC,GAAA,KAAA7wC,CAAU,IAAI8wC,GAAA,KAAwC,GAAI,SAAAC,GAAqB,OAE7E1P,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW09B,KAElB19B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAm0B,GAAM,OAAIkY,EAAQnmB,KAAKlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAgzB,GAAM,MAAK,CAAEmB,SAAQnB,eACzDhzB,OAAAgkC,GAAA,KAAAhkC,CAAQ,SAAAm0C,GAAA,IAAGhgB,EAAHggB,EAAGhgB,OAAH,OAAgBA,EAAOhf,KAAK7G,UAEpCtO,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAikC,GAAQ,OAEfA,EAAS/d,KAGPlmB,OAAAgxC,GAAA,KAAAhxC,CAAU,SAAAo0C,GAAA,IAAGjgB,EAAHigB,EAAGjgB,OAAQnB,EAAXohB,EAAWphB,OAAX,OACR+d,EAAsB7qB,KAGpBlmB,OAAAsI,GAAA,KAAAtI,CACE,SAAAq0C,GAAA,IAAAC,EAAAt0C,OAAAi5B,GAAA,KAAAj5B,CAAAq0C,EAAA,GAAEvI,EAAFwI,EAAA,GAAa91B,EAAb81B,EAAA,UACEngB,EAAOhf,KAAK7G,WAAWw9B,GACvBA,EAAU3X,EAAOhf,KAAK7G,SAASsmB,QAAQsC,WACvCl3B,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAO,CAAC,YAAa,SAAU,QAAS2V,EAAOhf,KAAK7G,QAAS,MAErEtO,OAAA2K,GAAA,KAAA3K,CAAI,SAAAu0C,GAAA,IAAAC,EAAAx0C,OAAAi5B,GAAA,KAAAj5B,CAAAu0C,EAAA,GAAI/1B,EAAJg2B,EAAA,UAAeh2B,EAAMuU,UAAWC,OAAQG,MAAOgB,EAAOhf,KAAK7G,SAAS,KACxEtO,OAAAy0C,GAAA,KAAAz0C,GAEAA,OAAAo/B,GAAA,KAAAp/B,CAAU,SAAAu3B,GACR,IAAME,EAAOzE,EAAOwe,QAAQja,GAE5B,OAAOE,EACHz3B,OAAAk/B,GAAA,KAAAl/B,CAAGy3B,GACHz3B,OAAA8vC,GAAA,KAAA9vC,CAAgBgzB,EAAQ,QAAQ9M,KAC9BlmB,OAAAsI,GAAA,KAAAtI,CAAO,SAAAy3B,GAAI,OAAIA,EAAKF,SAAWA,IAC/Bv3B,OAAAixC,GAAA,KAAAjxC,CAAK,MAIbA,OAAA2hC,GAAA,KAAA3hC,CAAe+wC,GAEf/wC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA00C,GAAwB,IAAAC,EAAA30C,OAAAi5B,GAAA,KAAAj5B,CAAA00C,EAAA,GAAtBjd,EAAsBkd,EAAA,GAAAC,EAAA50C,OAAAi5B,GAAA,KAAAj5B,CAAA20C,EAAA,MAAf7I,EAAe8I,EAAA,GAEzBnmB,EAASqd,EAAU3X,EAAOhf,KAAK7G,SAASsmB,QAAQnG,OAChDgjB,EAASha,EAAKia,UAAUjjB,GAE9B,OAAIgjB,GAAgC,SAAtBA,EAAOI,WAA8B7xC,OAAAk/B,GAAA,KAAAl/B,CAAGyxC,GAE/CzxC,OAAA8vC,GAAA,KAAA9vC,CACLgzB,EACA,wBACA,SAAA6hB,EAAoBpD,GAApB,OAAAzxC,OAAA4sB,EAAA,KAAA5sB,CAAA60C,GAA2CpD,IAC3CvrB,KAGAlmB,OAAA2hC,GAAA,KAAA3hC,CAAe+wC,GACf/wC,OAAAsI,GAAA,KAAAtI,CACE,SAAA80C,GAAA,IAAAC,EAAA/0C,OAAAi5B,GAAA,KAAAj5B,CAAA80C,EAAA,GAAErD,EAAFsD,EAAA,GAAAC,EAAAh1C,OAAAi5B,GAAA,KAAAj5B,CAAA+0C,EAAA,MAAWjJ,EAAXkJ,EAAA,UACEvD,EAAOla,SAAWE,EAAKF,QACvBka,EAAOhjB,SAAWqd,EAAU3X,EAAOhf,KAAK7G,SAASsmB,QAAQnG,QACnC,SAAtBgjB,EAAOI,aAEX7xC,OAAAixC,GAAA,KAAAjxC,CAAK,GACLA,OAAA2K,GAAA,KAAA3K,CAAI,SAAAi1C,GAAA,IAAAC,EAAAl1C,OAAAi5B,GAAA,KAAAj5B,CAAAi1C,EAAA,GAAExD,EAAFyD,EAAA,UAAczD,OAGtBzxC,OAAAixC,GAAA,KAAAjxC,CAAK,GAELA,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAyxC,GACP,IAAM0D,EAC8B,kBAA3BhhB,EAAOS,QAAQ7O,QAClBoO,EAAOS,QAAQ7O,QACf0U,GAAkBtG,EAAOS,QAAQ7O,SACvC,OAAOiN,EAAOoiB,UACZ3D,EAAOla,OACP,iBACA,CAAE4d,OAAME,QAAS,UACjB,MAGJr1C,OAAA2K,GAAA,KAAA3K,CAAI,kBAAM29B,GAAYxJ,EAAOS,QAAST,EAAOhf,mBAkBhDmgC,GAA4B,SACvCjU,EACAC,EAFuCiU,GAAA,IAGrClJ,EAHqCkJ,EAGrClJ,QAHqC,OAKvCrsC,OAAAg/B,GAAA,KAAAh/B,CAAc4rC,GAAcvK,GAAUC,GAAQpb,KAG5ClmB,OAAA6wC,GAAA,KAAA7wC,CAAU,IAAI8wC,GAAA,KAAwC,GAAI,SAAAC,GAAqB,OAE7E1E,EAAQnmB,KAENlmB,OAAAo/B,GAAA,KAAAp/B,CAAU,SAAAgzB,GAAM,OACdhzB,OAAA8vC,GAAA,KAAA9vC,CACEgzB,EACA,gBACA,SAAC1vB,EAAOm0B,GAAR,MAAkB,CAAEzE,SAAQ1vB,QAAOm0B,YAIvCz3B,OAAAsI,GAAA,KAAAtI,CACE,SAAAw1C,GAAA,IAAGlyC,EAAHkyC,EAAGlyC,MAAO0vB,EAAVwiB,EAAUxiB,OAAV,MACsB,mBAApB1vB,EAAMysC,WACNzsC,EAAM2sC,cAAgBjd,EAAO4e,aACG,WAAhCtuC,EAAMA,MAAMmyC,QAAQJ,UAExBr1C,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA01C,GAAA,IAAGpyC,EAAHoyC,EAAGpyC,MAAOm0B,EAAVie,EAAUje,KAAV,OACPsZ,EAAsB7qB,KACpBlmB,OAAAsI,GAAA,KAAAtI,CAAO,SAAA21C,GAAuB,IAAAC,EAAA51C,OAAAi5B,GAAA,KAAAj5B,CAAA21C,EAAA,GAArB7J,EAAqB8J,EAAA,GAAVp3B,EAAUo3B,EAAA,GACtB5G,EAAWhvC,OAAAsrB,EAAA,QAAAtrB,CAAK8rC,EAAW,CAAC,iBAAkBxoC,EAAM2sC,cAC1D,IAAKjB,EAAU,OAAO,EACtB,IAAM7b,EAAkBnzB,OAAAsrB,EAAA,OAAAtrB,CACtBwe,EACA,CAAC,YAAa,SAAU,QAASwwB,EAAS75B,KAAK7G,SAC/C,IAEF,QAAK6kB,EAAMxS,SAAS8W,EAAKF,UAG3Bv3B,OAAAixC,GAAA,KAAAjxC,CAAK,GAGLA,OAAAiyC,GAAA,KAAAjyC,CAAUA,OAAAkyC,GAAA,KAAAlyC,CAAM,MAChBA,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAouB,EAAAoP,GAAA,IAAAC,EAAAhK,EAAAkD,EAAA+G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArwB,EAAA+U,EAAA,OAAA1iB,mBAAAG,KAAA,SAAAwM,GAAA,eAAAA,EAAAtM,KAAAsM,EAAArM,MAAA,OAAAo9B,EAAA91C,OAAAi5B,GAAA,KAAAj5B,CAAA61C,EAAA,GAAW/J,EAAXgK,EAAA,GACD9G,EAAWhvC,OAAAsrB,EAAA,QAAAtrB,CAAK8rC,EAAW,CAAC,iBAAkBxoC,EAAM2sC,cADnD8F,GAAA,EAAAC,GAAA,EAAAC,OAAAlxC,EAAAggB,EAAAtM,KAAA,EAAAy9B,GAEa5yC,EAAMA,MAAMmyC,QAAQN,MAAQ,IAAItjC,MAAM,MAFnDjM,OAAAsyB,YAAA,UAAA6d,GAAAI,EAAAD,EAAAx9B,QAAAjI,KAAA,CAAAsU,EAAArM,KAAA,YAEI09B,EAFJD,EAAArwC,MAGDigB,OAHC,EAAAhB,EAAAtM,KAAA,GAKHsN,EAAU2U,GAAkB0b,GACtBtb,EAASP,GAAiBxU,GAC5B+U,IAAWkU,EAAS75B,KAAK7G,QAP1B,CAAAyW,EAAArM,KAAA,eAQK,IAAI/U,MAAJ,8BAAAqc,OAC0BgvB,EAAS75B,KAAK7G,QADxC,eAAA0R,OAC6D8a,IATlE,QAAA/V,EAAArM,KAAA,iBAAAqM,EAAAtM,KAAA,GAAAsM,EAAAC,GAAAD,EAAA,aAYHre,QAAQ2vC,KAAR,6BAAAr2B,OAA0Co2B,EAA1C,MAAAp2B,OAAA+E,EAAAC,KACAe,OAAUhhB,EAbP,QAeL,OAfKggB,EAAArM,KAAA,GAeCklB,GACJ,CACEjxB,KAAMypC,EACNrwB,UACAoR,GAAI7zB,EAAMA,MAAMgzC,iBAChB7nB,OAAQugB,EAASpa,QAAQnG,OACzB8I,OAAQE,EAAKF,QAEfyX,EAAS75B,MAvBN,QAAA4gC,GAAA,EAAAhxB,EAAArM,KAAA,gBAAAqM,EAAArM,KAAA,iBAAAqM,EAAAtM,KAAA,GAAAsM,EAAA4hB,GAAA5hB,EAAA,YAAAixB,GAAA,EAAAC,EAAAlxB,EAAA4hB,GAAA,QAAA5hB,EAAAtM,KAAA,GAAAsM,EAAAtM,KAAA,GAAAs9B,GAAA,MAAAG,EAAA/d,QAAA+d,EAAA/d,SAAA,WAAApT,EAAAtM,KAAA,IAAAu9B,EAAA,CAAAjxB,EAAArM,KAAA,eAAAu9B,EAAA,eAAAlxB,EAAAivB,OAAA,mBAAAjvB,EAAAivB,OAAA,6BAAAjvB,EAAAhM,SAAA0tB,EAAA,oDAyCR8P,GAAsC,SACjDlV,EACAC,GAFiD,OAIjDD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAsI,GAAA,KAAAtI,CAAO,SAAAw2C,GAAoB,IAAAC,EAAAz2C,OAAAi5B,GAAA,KAAAj5B,CAAAw2C,EAAA,GAAlBriB,EAAkBsiB,EAAA,GAAVj4B,EAAUi4B,EAAA,GACnBtjB,EAAkBnzB,OAAAsrB,EAAA,OAAAtrB,CACtBwe,EACA,CAAC,YAAa,SAAU,QAAS2V,EAAOhf,KAAK7G,SAC7C,IAEF,QACI6lB,EAAOS,QAAQ2C,QACjBpE,EAAMxS,SAASwT,EAAOS,QAAQ2C,SAC9BpE,EAAM,KAAOgB,EAAOS,QAAQ2C,SAGhCv3B,OAAA2K,GAAA,KAAA3K,CAAI,SAAA02C,GAAA,IAAAC,EAAA32C,OAAAi5B,GAAA,KAAAj5B,CAAA02C,EAAA,GAAEviB,EAAFwiB,EAAA,UAActf,GAAW,CAAEE,OAAQpD,EAAOS,QAAQ2C,QAAWpD,EAAOhf,UAS/DyhC,GAAmC,SAC9CvV,GAD8C,OAG9CA,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW60B,KAClB70B,OAAA2K,GAAA,KAAA3K,CAAI,SAAAm0B,GAAM,OAAI6C,QAA6BjyB,EAAW,CAAEuJ,QAAS6lB,EAAOhf,KAAK1L,cAWpEotC,GAAgB,SAC3BxV,EAD2ByV,EAAAC,GAImB/2C,OAAA4sB,EAAA,KAAA5sB,CAAA82C,GAAA,IAD5Chc,EAC4Cic,EAD5Cjc,OAEIpZ,EAAQ,IAAI2pB,GAAoC,IACtD,OAAOhK,EAAQnb,KACblmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAAgxC,GAAA,KAAAhxC,CAAU,SAAAm0B,GACR,IAAMpO,EAAUoO,EAAOS,QAAQ7O,QAC/B,IACGA,KAECgM,GAAO1C,IAAWlE,GAAGpF,IACrBgM,GAAOxC,IAAepE,GAAGpF,IACzBgM,GAAOrC,IAAcvE,GAAGpF,IAG1B,OAAOgZ,GAAA,KACT,IAAMiY,EAAQjxB,EAAQkJ,mBACpB7oB,EAAM4wC,EAAMjzB,WACRpC,EAASD,EAAMhc,IAAIU,GACzB,GAAIub,EAAQ,OAAO3hB,OAAAk/B,GAAA,KAAAl/B,CAAG09B,GAAY,CAAE3X,QAASpE,GAAUwS,EAAOhf,OAE9D,IAAM8hC,EAAuB,CAC3B9zC,KAAMwqB,EAAYwB,UAClBC,6BAA8B4nB,GAEhC,OAAOh3C,OAAA0/B,GAAA,KAAA1/B,CAAK66B,GAAYC,EAAQmc,IAAY/wB,KAC1ClmB,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAk3C,GAAM,OAAIx1B,EAAMy1B,IAAI/wC,EAAK8wC,KAC7Bl3C,OAAA2K,GAAA,KAAA3K,CAAI,SAAAk3C,GAAM,OAAIxZ,GAAY,CAAE3X,QAASmxB,GAAU/iB,EAAOhf,a,mCC/9BxD,SAAUiiC,GACdC,GAEE,MAAK,CACLA,EAAOnxB,KACLlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAA+F,GAAC,OAAIA,EAAE,KACX/F,OAAAy0C,GAAA,KAAAz0C,IAEFq3C,EAAOnxB,KACLlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAA+F,GAAC,OAAIA,EAAE,KACX/F,OAAAy0C,GAAA,KAAAz0C,IAEFq3C,EAAOnxB,KACLlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAA+F,GAAC,OAAIA,EAAE,KACX/F,OAAAy0C,GAAA,KAAAz0C,IAEFq3C,EAAOnxB,KACLlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAA+F,GAAC,OAAIA,EAAE,KACX/F,OAAAy0C,GAAA,KAAAz0C,KCkDN,SAASs3C,GAAUxpB,GACf,OAAEA,EAAqBA,EAAaV,MAAMgP,IAAI,GACpCnV,EAAA,OAed,SAASswB,GACPC,EACAlW,EACAnN,EAHFzT,GAIuD,IAAnDtL,EAAmDsL,EAAnDtL,QAAS9G,EAA0CoS,EAA1CpS,QAASwsB,EAAiCpa,EAAjCoa,OAAQmL,EAAyBvlB,EAAzBulB,QAE1B,OAAKjmC,OAAAg/B,GAAA,KAAAh/B,CAAcw3C,EAAYlW,EAAQ2E,GAAS/f,KAChDlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAA6gB,GAA+B,IAAAqgB,EAAAlhC,OAAAi5B,GAAA,KAAAj5B,CAAA6gB,EAAA,GAA7BirB,EAA6B5K,EAAA,GAAlB1iB,EAAkB0iB,EAAA,GAAXje,EAAWie,EAAA,GACtC,GAAI/M,EAAOhf,KAAKiT,cAAc5J,EAAMyF,KAGlC,OADAvd,QAAQ5B,MAAM,2BAA4BqvB,EAAOhf,MAC1C4pB,GAAA,KAGL,KAAE5K,EAAOS,QAAQpxB,UAAUsoC,GAAY,MAAM,IAAInoC,MAAM,wBAC3D,IAAKmoC,EAAU3X,EAAOS,QAAQpxB,QAAQoxB,QAAQsC,UAC5C,MAAM,IAAIvzB,MAAM,+BAEd,IAAEisB,EAASuE,EAAOS,QAAQhF,OAC1B,GAAAA,GAAUwI,GAAcxI,KAAYuE,EAAOhf,KAAKiT,WAClD,MAAM,IAAIzkB,MAAM,6CAKd,IADA,IAAE8zC,EAA2B,IAAIlM,IACrC9I,EAAA,EAAAC,EAA6B1iC,OAAOoiC,QAAQ5jB,EAAML,SAASgW,EAAOS,QAAQc,eAA1E+M,EAAAC,EAAA7iC,OAAA4iC,IAA0F,KAAAE,EAAA3iC,OAAAi5B,GAAA,KAAAj5B,CAAA0iC,EAAAD,GAAA,GAA9Er8B,EAA8Eu8B,EAAA,GAAzE/M,EAAyE+M,EAAA,GAClFl5B,EAAUrD,EAEVsxC,EAAW9hB,EAAQ3H,IAAIjmB,QAC1B40B,IACChH,EAAQ3H,IAAIH,aACR8H,EAAQ3H,IAAIH,aAAaT,kBAAkB+O,IACzCxG,EAAQ3H,IAAIH,aAAaR,cAE3BrG,EAAA,SAELmV,IAECxG,EAAQnsB,QAAQqkB,aAAe8H,EAAQnsB,QAAQqkB,aAAaT,kBAAoBpG,EAAA,SAEhF2O,EAAQpX,QAAUsO,EAAatd,KACjC9I,QAAQixC,MAAR,2BAAA33B,OAC6BvW,EAD7B,gBAAAuW,OACmD4V,EAAQpX,MAD3D,kBAAAwB,OACiF8M,EAAatd,KAD9F,MAGSkoC,EAAS/rB,GAAGwI,EAAOS,QAAQjtB,QACpCjB,QAAQixC,MAAR,2BAAA33B,OAC6BvW,EAD7B,+BAAAuW,OACkE03B,EAAS3zB,WAD3E,MAGWta,KAAWqiC,GAAeA,EAAUriC,GAASmrB,QAAQsC,UAGhEugB,EAAyB/L,IAAIjiC,EAASiuC,GAFtChxC,QAAQixC,MAAR,sBAAA33B,OAAoCvW,EAApC,iCAKJ,IAAMmuC,EAAmB7X,MAAML,KAAK+X,EAAyBxsC,QAAQ4sC,KAAK,SAACntB,EAAGotB,GAE5E,GAAIptB,IAAMyJ,EAAOS,QAAQpxB,OAAQ,OAAQ,EACzC,GAAIs0C,IAAM3jB,EAAOS,QAAQpxB,OAAQ,OAAO,EAExC,IAAMu0C,EAAON,EAAyB/xC,IAAIglB,GACxCstB,EAAOP,EAAyB/xC,IAAIoyC,GACtC,OAAIC,EAAK/wB,GAAGgxB,IAAe,EACvBD,EAAKpsB,GAAGqsB,GAAc,EACd,IAGRznB,EAAiCqnB,EAAiB,GACpD,IAACrnB,EACH,MAAM,IAAI5sB,MAAM,0EAElB,GAAI4sB,IAAc4D,EAAOS,QAAQpxB,OAC/B,MAAM,IAAIG,MAAM,kDAElB,IAAM6b,EAAUhB,EAAML,SAASgW,EAAOS,QAAQc,cAAcnF,GAExD,GAAA/Q,EAAQhB,QAAUsO,EAAatd,KAAM,MAAM,IAAI7L,MAAM,YAEzD,IAAI01B,EAAYlF,EAAOS,QAAQyE,UAC1BA,IAAWA,EAAYf,MAExB,IAAE9H,EAAa,CACT7oB,OAAEwsB,EAAOS,QAAQjtB,OACvBqlB,WAAYhtB,OAAAyqB,EAAA,gBAAAzqB,CAAawe,EAAMsU,YAAqC,EAAvB7P,EAAOg1B,eACpD7vB,WAAY+L,EAAOhf,KAAKiT,YAE1ByF,EAAK,GAAA7N,OAAAhgB,OAAAw3B,GAAA,KAAAx3B,CAAgBwf,EAAQyO,IAAIJ,OAAS,IAArC,CAA0C2C,IAC/CjD,EAAYoK,GAAa9J,GACzB6C,EAAMyD,EAAOS,QAAQlE,KAAQzJ,EAAA,QAC7B+vB,EAAQze,KACRpvB,EAAQnJ,OAAAsrB,EAAA,WAAAtrB,CAAQwe,EAAMJ,OAAQ,SAAAupB,GAAE,OAAIA,IAAOxT,EAAOS,QAAQc,eAEtD3P,EAA0B,CACxB5iB,KAAAwqB,EAAYkD,gBACZ5B,mBAAc+nB,EACdlnB,SAAI9vB,OAAAyqB,EAAA,gBAAAzqB,CAAaoV,EAAQtF,SAC/BigB,sBAAuBoE,EAAOS,QAAQc,aACtC1F,mBAAoBhwB,OAAAyqB,EAAA,gBAAAzqB,CAAawf,EAAQzU,IACzCqiB,MAAOkqB,GAAU93B,EAAQyO,IAAIH,cAC7BmC,mBAAqBzQ,EAAQyO,IAAIH,aAC7BtO,EAAQyO,IAAIH,aAAaT,kBACzBpG,EAAA,QACJiJ,eAAgB1Q,EAAQyO,IAAIH,aACxBtO,EAAQyO,IAAIH,aAAaR,aACzBrG,EAAA,SACFmV,IAAIjI,EAAOS,QAAQjtB,QACrB4lB,YACAkC,mBAAoB4J,EACpBlwB,QACAonB,YACAC,OACAhtB,OAAQ2wB,EAAOS,QAAQpxB,OACvBitB,UAAWniB,EACXoiB,MACAC,SAAU,CACR3P,OAAQ,CAAC,CAAEoP,MAAO,CAAC+D,EAAOS,QAAQpxB,YAGtC,OAAOxD,OAAA0/B,GAAA,KAAA1/B,CAAK66B,GAAYC,EAAQ/U,IAAUG,KACxClmB,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAC,EAAU4+B,GAAV,OAAA9+B,mBAAAG,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEHkX,EAFG,CAAApX,EAAAE,KAAA,QAEK,OAFLF,EAAAE,KAAA,EAEWuiB,GAAe,CAAErL,UAAU,CAAExH,WAAY+L,EAAOhf,KAAKiT,aAFhE,OAGP,OAHO5P,EAAAE,KAAA,EAGDsiB,GAAe,CAAEjV,QAASmxB,GAAU,CAAE9uB,WAAY+L,EAAOhf,KAAKiT,aAH7D,wBAAA5P,EAAAO,SAAAT,SAQbtY,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA0D,GAAG,OAAI1D,OAAAk/B,GAAA,KAAAl/B,CAAG67B,GAAen4B,EAAKywB,EAAOhf,UAepD,SAAS+iC,GACP5W,EACAnN,EAFFoN,GAG4B,IAAxBzG,EAAwByG,EAAxBzG,OAEA,OAAKwG,EAAOpb,KACZlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAwe,GACH,IAAE4J,EAAa+L,EAAOhf,KAAKiT,WAC3B,KAAEA,KAAc5J,EAAMyF,MAAO,MAAM,IAAItgB,MAAM,oBAC7C,IASAw0C,EATElwB,EAAWzJ,EAAMyF,KAAKmE,GAAYH,SAAS,GAC/CzI,EAA+Bxf,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAML,SAAU,CACjD8J,EAAS8H,sBACT9H,EAASsI,YAGT,IAAC/Q,GAAWA,EAAQhB,QAAUsO,EAAatd,OAASgQ,EAAQyO,IAAIH,aAClE,MAAM,IAAInqB,MAAM,6CAGlB,GAAI6a,EAAMyF,KAAKmE,GAAYmK,OAEzB4lB,EAAUn4C,OAAAk/B,GAAA,KAAAl/B,CAAGwe,EAAMyF,KAAKmE,GAAYmK,OAAQ,QACvC,CAEL,GAAItK,EAASuI,KAAKxD,WAAWorB,IAAI55B,EAAMsU,aAAc,MAAM,IAAInvB,MAAM,gBAErE,IAAMkqB,GAAiBrO,EAAQyO,IAAIJ,OAAS,IAAIvlB,OAAO,SAAAtG,GAAC,OAAIA,EAAEomB,aAAeA,IAC3EmF,EAAYoK,GAAa9J,GACzBmpB,EAAQze,KAEJxS,EAAkB,CACtB5iB,KAAMwqB,EAAYsD,OAClBhC,mBAAoB+nB,EACpBlnB,SAAU7H,EAAS6H,SACnBC,sBAAuB9H,EAAS8H,sBAChCC,mBAAoB/H,EAAS+H,mBAC7B5C,MAAOkqB,GAAU93B,EAAQyO,IAAIH,cAC7BmC,mBAAoBzQ,EAAQyO,IAAIH,aAAaT,kBAAkB+O,IAC7DnU,EAASuI,KAAK7oB,QAEhBuoB,cAAe1Q,EAAQyO,IAAIH,aAAaR,aAAasP,IAAI3U,EAASuI,KAAK7oB,QAGvE4lB,YACAkC,mBAAoBxH,EAASwH,mBAC7BG,OAAQpR,EAAM4U,QAAQe,EAAOhf,KAAKiT,YAAYwH,QAEhDuoB,EAAUn4C,OAAA0/B,GAAA,KAAA1/B,CAAK66B,GAAYC,EAAQ/U,IAGjC,OAAGoyB,EAAQjyB,KACblmB,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAouB,EAAA7E,GAAA,IAAAC,EAAAqV,EAAA14B,EAAA,OAAApG,mBAAAG,KAAA,SAAAwM,GAAA,eAAAA,EAAAtM,KAAAsM,EAAArM,MAAA,UAAAmpB,EAAA7hC,OAAAi5B,GAAA,KAAAj5B,CAAA4hC,EAAA,GAAWsV,EAAXrV,EAAA,GAAmBrjB,EAAnBqjB,EAAA,IACH5Z,EAASuI,KAAKxD,WAAWorB,IAAI55B,EAAMsU,aADhC,CAAA/N,EAAArM,KAAA,cACoD,IAAI/U,MAAM,iBAD9D,WAEH6a,EAAMyF,KAAKmE,GAAYiK,cAFpB,CAAAtN,EAAArM,KAAA,cAEyC,IAAI/U,MAAM,mBAFnD,OAGP,OAHOohB,EAAArM,KAAA,EAGD2iB,GAAiB,CAAEtV,QAASmxB,GAAU/iB,EAAOhf,MAH5C,wBAAA4P,EAAAhM,SAAA0tB,SAUbzmC,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA0D,GAET,OADAgD,QAAQ5B,MAAM,iDAAkDpB,GACzDq7B,GAAA,QAgBb,SAASsZ,GACP/W,EACAnN,EAFF8N,GAG4B,IAAxBnH,EAAwBmH,EAAxBnH,OAEA,OAAKwG,EAAOpb,KACZlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAwe,GACH,IAAE4J,EAAa+L,EAAOhf,KAAKiT,WAC/B,KAAMA,KAAc5J,EAAMyF,MAAO,MAAM,IAAItgB,MAAM,oBACjD,IAQIw0C,EARElwB,EAAWzJ,EAAMyF,KAAKmE,GAAYH,SAAS,GAC/CzI,EAA+Bxf,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAML,SAAU,CACjD8J,EAAS8H,sBACT9H,EAASsI,YAEb,IAAK/Q,GAAWA,EAAQhB,QAAUsO,EAAatd,OAASgQ,EAAQyO,IAAIH,aAClE,MAAM,IAAInqB,MAAM,6CAGlB,GAAI6a,EAAMyF,KAAKmE,GAAYoK,YAEzB2lB,EAAUn4C,OAAAk/B,GAAA,KAAAl/B,CAAGwe,EAAMyF,KAAKmE,GAAYoK,YAAa,QAC5C,CACL,GAAIvK,EAASuI,KAAKxD,WAAWtB,IAAIlN,EAAMsU,aACrC,MAAM,IAAInvB,MAAM,wBACb,GAAI6a,EAAMyF,KAAKmE,GAAYmK,OAAQ,MAAM,IAAI5uB,MAAM,6BAExD,IAAMkqB,GAAiBrO,EAAQyO,IAAIJ,OAAS,IAAIvlB,OAAO,SAAAtG,GAAC,OAAIA,EAAEomB,aAAeA,IAC3EmF,EAAYoK,GAAa9J,GACzBmpB,EAAQze,KAEJxS,EAAuB,CAC3B5iB,KAAMwqB,EAAYwD,aAClBlC,mBAAoB+nB,EACpBlnB,SAAU7H,EAAS6H,SACnBC,sBAAuB9H,EAAS8H,sBAChCC,mBAAoB/H,EAAS+H,mBAC7B5C,MAAOkqB,GAAU93B,EAAQyO,IAAIH,cAC7BmC,mBAAoBzQ,EAAQyO,IAAIH,aAAaT,kBAC7C6C,cAAe1Q,EAAQyO,IAAIH,aAAaR,aAAasP,IAAI3U,EAASuI,KAAK7oB,QAGvE4lB,YACAgD,UAAWtI,EAASsI,UACpBnI,cAEF+vB,EAAUn4C,OAAA0/B,GAAA,KAAA1/B,CAAK66B,GAAYC,EAAQ/U,IAGrC,OAAOoyB,EAAQjyB,KAEblmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAk3C,GAAM,OAAI1b,GAAgB,CAAEzV,QAASmxB,GAAU/iB,EAAOhf,WAG9DnV,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA0D,GAAG,OAAI1D,OAAAk/B,GAAA,KAAAl/B,CAAGy7B,GAAqB/3B,EAAKywB,EAAOhf,UA0B1D,SAASmjC,GACPhX,EACAnN,EAFF+N,EAIExgB,GAAqD,IADnDoZ,EACmDoH,EADnDpH,OAGA,OAAKwG,EAAOpb,KACZlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAwe,GACP,IA2BI25B,EA3BE50C,EAAU4wB,EAAOS,QAAQ7O,QAEzBvG,EAA+Bxf,OAAAsrB,EAAA,OAAAtrB,CAAIwe,EAAML,SAAU,CACvDgW,EAAOhf,KAAKugB,aACZvB,EAAOhf,KAAK1L,UAId,IACG+V,GACDA,EAAQhB,QAAUsO,EAAatd,OAC9BjM,EAAQysB,mBAAmBmM,GAAG3c,EAAQzU,IAEvC,MAAM,IAAIpH,MAAM,4BACb,GAAIJ,EAAQypB,WAAWorB,IAAI55B,EAAMsU,aACpC,MAAM,IAAInvB,MAAM,2BACb,GACHJ,EAAQiuB,eAAexK,GACrBxH,EAAQ/V,QAAQzB,QAAQo0B,IACtB5c,EAAQyO,IAAIH,aAAetO,EAAQyO,IAAIH,aAAaT,kBAAoBpG,EAAA,UAI5E,MAAM,IAAItjB,MACR,gFAIJ,IAAMyC,EAAM7C,EAAQ0rB,mBAAmBlL,WACjCpC,EAASD,EAAMhc,IAAIU,GAEzB,GACEub,GACAA,EAAOmO,SAASqM,GAAG54B,EAAQusB,WAC3BnO,EAAOoO,wBAA0BxsB,EAAQwsB,uBACzCpO,EAAOqO,mBAAmBmM,GAAG54B,EAAQysB,qBACrCrO,EAAO4P,cAAgBhuB,EAAQguB,aAC/B5P,EAAO6P,eAAe2K,GAAG54B,EAAQiuB,iBACjC7P,EAAOqL,WAAWmP,GAAG54B,EAAQypB,YAE7BmrB,EAAUn4C,OAAAk/B,GAAA,KAAAl/B,CAAG2hB,OACR,CACL,IAAM42B,EAAqC,CACzCp1C,KAAMwqB,EAAYiE,sBAClB3C,mBAAoB1rB,EAAQ0rB,mBAC5Ba,SAAUvsB,EAAQusB,SAClBC,sBAAuBxsB,EAAQwsB,sBAC/BC,mBAAoBzsB,EAAQysB,mBAC5BuB,YAAahuB,EAAQguB,YACrBC,eAAgBjuB,EAAQiuB,eACxBpE,MAAOkqB,GAAU93B,EAAQyO,IAAIH,cAC7Bd,WAAYzpB,EAAQypB,YAEtBmrB,EAAUn4C,OAAA0/B,GAAA,KAAA1/B,CAAK66B,GAAYC,EAAQyd,IAAeryB,KAChDlmB,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAk3C,GAAM,OAAIx1B,EAAMy1B,IAAI/wC,EAAK8wC,MAIjC,OAAOiB,EAAQjyB,KACblmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAk3C,GAAM,OAAIlb,GAAyB,CAAEjW,QAASmxB,GAAU/iB,EAAOhf,WAGvEnV,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA0D,GAEL,OADAgD,QAAI5B,MAAM,oDAAqDpB,GAC5Dq7B,GAAA,QAgBN,IAAMyZ,GAA6C,SACxDnX,EACAC,EACAmX,GAHwD,OAexDz4C,OAAAg/B,GAAA,KAAAh/B,CAAc4rC,GAAcvK,GAAUC,GAAQpb,KAC5ClmB,OAAA0hC,GAAA,KAAA1hC,CAAc,OAAG+E,EAAW,SAAAgsC,GAAwB,IAAA2H,EACrBtB,GAAcrG,GADO4H,EAAA34C,OAAAi5B,GAAA,KAAAj5B,CAAA04C,EAAA,GAC3ClB,EAD2CmB,EAAA,GAC/BrX,EAD+BqX,EAAA,GAEhDC,EAAgB,IAAIvN,GAA+C,IACjE,OAAGhK,EAAQnb,KACblmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW,CAAC+6B,GAAUK,GAAgBG,GAAgBQ,MAC7D/7B,OAAAgxC,GAAA,KAAAhxC,CAAU,SAAAm0B,GAAM,OACdn0B,OAAAu0B,GAAA,cAAAv0B,CAAW+6B,GAAU5G,GACjBojB,GAAoBC,EAAYlW,EAAQnN,EAAQskB,GAChDz4C,OAAAu0B,GAAA,cAAAv0B,CAAWo7B,GAAgBjH,GAC3B+jB,GAAkB5W,EAAQnN,EAAQskB,GAClCz4C,OAAAu0B,GAAA,cAAAv0B,CAAWu7B,GAAgBpH,GAC3BkkB,GAAuB/W,EAAQnN,EAAQskB,GACvCH,GAAgChX,EAAQnN,EAAQskB,EAAMG,UAgBvDC,GAAiC,SAC5CxX,EACAC,GAF4C,OAI5CA,EAAOpb,KACLlmB,OAAA0hC,GAAA,KAAA1hC,CAAc,OAAG+E,EAAW,SAAAu8B,GAAM,OAChCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWg7B,KAClBh7B,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAm0B,GACP,IAAM/L,EAAa+L,EAAOhf,KAAKiT,WAC7B8uB,EAAS/iB,EAAOS,QAAQ7O,QACxB6a,EAAOlD,GAAY,CAAE3X,QAASmxB,GAAU,CAAE5oC,QAAS4oC,EAAO3mB,YAEtDuoB,EAAuB94C,OAAAwgC,GAAA,KAAAxgC,CAC3BA,OAAAk/B,GAAA,KAAAl/B,CAAG4gC,GACHS,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CACE,SAAA0qB,GAAC,OACC1qB,OAAAu0B,GAAA,cAAAv0B,CAAW29B,GAAajT,IACxBA,EAAEkK,QAAQ7O,UAAY6a,EAAKhM,QAAQ7O,SACnC2E,EAAEvV,KAAK7G,UAAYsyB,EAAKzrB,KAAK7G,UAEjCtO,OAAAixC,GAAA,KAAAjxC,CAAK,GAELA,OAAAuuC,GAAA,KAAAvuC,KAGJ,OAAO84C,EAAqB5yB,KAO1BlmB,OAAA+4C,GAAA,KAAA/4C,CAAW,SAAAg5C,GAAU,OAAIA,EAAW9yB,KAAKlmB,OAAA0yC,GAAA,KAAA1yC,CAAM,QAE/CA,OAAAiyC,GAAA,KAAAjyC,CACEshC,EAAOpb,KACLlmB,OAAAsI,GAAA,KAAAtI,CACE,SAAAwe,GAAK,QACDA,EAAMyF,KAAKmE,GAAY+J,qBACvB3T,EAAMyF,KAAKmE,GAAYqK,mBACvBjU,EAAMyF,KAAKmE,GAAYsK,wBACvBlU,EAAMyF,KAAKmE,GAAYiK,0BAoBhC4mB,GAAmC,SAC9C5X,EACAC,GAF8C,OAI9CA,EAAOpb,KACLlmB,OAAA0hC,GAAA,KAAA1hC,CAAc,OAAG+E,EAAW,SAAAu8B,GAAM,OAChCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWq7B,KAClBr7B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAqiC,GAAoB,IAAAC,EAAAtiC,OAAAi5B,GAAA,KAAAj5B,CAAAqiC,EAAA,GAAlBlO,EAAkBmO,EAAA,GAAV9jB,EAAU8jB,EAAA,GACrBla,EAAa+L,EAAOhf,KAAKiT,WAC/B,KAAMA,KAAc5J,EAAMyF,MAAO,OAAO8a,GAAA,KACxC,IAAMxM,EAAS4B,EAAOS,QAAQ7O,QAC5BkC,EAAWzJ,EAAMyF,KAAKmE,GAAYH,SAAS,GAC3C2Y,EAAOlD,GAAY,CAAE3X,QAASwM,GAAU,CAAEjkB,QAAS2Z,EAASsI,YAExDuoB,EAAuB94C,OAAAwgC,GAAA,KAAAxgC,CAC3BA,OAAAk/B,GAAA,KAAAl/B,CAAG4gC,GACHS,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CACE,SAAA0qB,GAAC,OACC1qB,OAAAu0B,GAAA,cAAAv0B,CAAW29B,GAAajT,IACxBA,EAAEkK,QAAQ7O,UAAY6a,EAAKhM,QAAQ7O,SACnC2E,EAAEvV,KAAK7G,UAAYsyB,EAAKzrB,KAAK7G,UAEjCtO,OAAAixC,GAAA,KAAAjxC,CAAK,GAELA,OAAAuuC,GAAA,KAAAvuC,KAGJ,OAAO84C,EAAqB5yB,KAO1BlmB,OAAA+4C,GAAA,KAAA/4C,CAAW,SAAAg5C,GAAU,OAAIA,EAAW9yB,KAAKlmB,OAAA0yC,GAAA,KAAA1yC,CAAM,QAE/CA,OAAAiyC,GAAA,KAAAjyC,CACEshC,EAAOpb,KACLlmB,OAAAsI,GAAA,KAAAtI,CACE,SAAAwe,GAAK,QACDA,EAAMyF,KAAKmE,GAAYqK,mBACvBjU,EAAMyF,KAAKmE,GAAYiK,0BAoBhC6mB,GAAkC,SAC7C7X,EACAC,GAF6C,OAI7CA,EAAOpb,KACLlmB,OAAA0hC,GAAA,KAAA1hC,CAAc,OAAG+E,EAAW,SAAAu8B,GAAM,OAChCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWw7B,KAClBx7B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAwiC,GAAoB,IAAAS,EAAAjjC,OAAAi5B,GAAA,KAAAj5B,CAAAwiC,EAAA,GAAlBrO,EAAkB8O,EAAA,GAAVzkB,EAAUykB,EAAA,GACrB7a,EAAa+L,EAAOhf,KAAKiT,WAC/B,KAAMA,KAAc5J,EAAMyF,MAAO,OAAO8a,GAAA,KACxC,IAAMvM,EAAc2B,EAAOS,QAAQ7O,QACjC6a,EAAOlD,GACL,CAAE3X,QAASyM,GACX,CAAElkB,QAASkQ,EAAMyF,KAAKmE,GAAYH,SAAS,GAAGsI,YAG5CuoB,EAAuB94C,OAAAwgC,GAAA,KAAAxgC,CAC3BA,OAAAk/B,GAAA,KAAAl/B,CAAG4gC,GACHS,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CACE,SAAA0qB,GAAC,OACC1qB,OAAAu0B,GAAA,cAAAv0B,CAAW29B,GAAajT,IACxBA,EAAEkK,QAAQ7O,UAAY6a,EAAKhM,QAAQ7O,SACnC2E,EAAEvV,KAAK7G,UAAYsyB,EAAKzrB,KAAK7G,UAEjCtO,OAAAixC,GAAA,KAAAjxC,CAAK,GAELA,OAAAuuC,GAAA,KAAAvuC,KAGJ,OAAO84C,EAAqB5yB,KAO1BlmB,OAAA+4C,GAAA,KAAA/4C,CAAW,SAAAg5C,GAAU,OAAIA,EAAW9yB,KAAKlmB,OAAA0yC,GAAA,KAAA1yC,CAAM,QAE/CA,OAAAiyC,GAAA,KAAAjyC,CACEshC,EAAOpb,KACLlmB,OAAAsI,GAAA,KAAAtI,CACE,SAAAwe,GAAK,QACDA,EAAMyF,KAAKmE,GAAYsK,wBACvBlU,EAAMyF,KAAKmE,GAAYiK,0BAoBhC8mB,GAAyB,SACpC9X,EACAC,GAFoC,OAIpCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWs0B,KAClBt0B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GAEfthC,OAAAkkC,GAAA,KAAAlkC,CAAW,SAAAkjC,GAKT,IALmD,IAAAC,EAAAnjC,OAAAi5B,GAAA,KAAAj5B,CAAAkjC,EAAA,GAA3BpQ,EAA2BqQ,EAAA,GAAtCvO,QAAW9B,YAAiBtU,EAAU2kB,EAAA,GAC7CiW,EAEA,GAH6CC,EAAA,eAAAtW,EAAA/iC,OAAAi5B,GAAA,KAAAj5B,CAAA8iC,EAAAD,GAAA,GAKvCz8B,EALuC28B,EAAA,GAKlC9e,EALkC8e,EAAA,GAMjD,GACE9e,EAAKsO,QACLtO,EAAKuO,aACLvO,EAAKoO,eACLpO,EAAKgE,SAAS,GAAGuI,KAAKxD,WAAWtB,IAAIoH,GAErC,iBACF,IAAM1K,EAAahiB,EAEbkzC,EAAkBt5C,OAAAwgC,GAAA,KAAAxgC,CAEtBA,OAAAk/B,GAAA,KAAAl/B,CAAGu7B,QAAex2B,EAAW,CAAEqjB,gBAE/BiZ,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CACE,SAAA0qB,GAAC,OACC1qB,OAAAu0B,GAAA,cAAAv0B,CAAW,CAACw7B,GAAiBC,IAAuB/Q,IACpDA,EAAEvV,KAAKiT,aAAeA,IAE1BpoB,OAAAixC,GAAA,KAAAjxC,CAAK,GAELA,OAAAuuC,GAAA,KAAAvuC,KAGJo5C,EAAUr5C,KAAKu5C,GAEfF,EAAUr5C,KACRC,OAAAk/B,GAAA,KAAAl/B,CACE67B,GACE,IAAIl4B,MAAJ,6BAAAqc,OAC+BiE,EAAKgE,SAAS,GAAGuI,KAAKxD,WAAWjJ,aAEhE,CAAEqE,kBAjCVya,EAAA,EAAAC,EAA0B9iC,OAAOoiC,QAAQ5jB,EAAMyF,MAA/C4e,EAAAC,EAAAjjC,OAAAgjC,IAAsDwW,IAwCtD,OAAO7Y,GAAA,KAAKhgC,WAAL,EAAS44C,OAWTG,GAAuC,SAAA1V,EAElDvC,GAFkD,OAAAthC,OAAA4sB,EAAA,KAAA5sB,CAAA6jC,GAMlDvC,EAAOpb,KACLlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAA2vB,EAAUxpB,GAAV,IAAAg7B,EAAAC,EAAAC,EAAAtzC,EAAA6d,EAAAmE,EAAA,OAAAhQ,mBAAAG,KAAA,SAAA4M,GAAA,eAAAA,EAAA1M,KAAA0M,EAAAzM,MAAA,OAAA8gC,EAAA,EAAAC,EAEmBz5C,OAAOoiC,QAAQ5jB,EAAMyF,MAFxC,YAAAu1B,EAAAC,EAAA55C,QAAA,CAAAslB,EAAAzM,KAAA,YAAAghC,EAAA15C,OAAAi5B,GAAA,KAAAj5B,CAAAy5C,EAAAD,GAAA,GAEKpzC,EAFLszC,EAAA,GAEUz1B,EAFVy1B,EAAA,GAGCtxB,EAAahiB,IAEf6d,EAAKwO,iBAAmBxO,EAAKyO,sBAAwBzO,EAAKoO,eALzD,CAAAlN,EAAAzM,KAAA,eAAAyM,EAAAhB,OAAA,yBAOAF,EAAKkO,kBAPL,CAAAhN,EAAAzM,KAAA,QAQH,OARGyM,EAAAzM,KAAA,EAQGsiB,GAAe,CAAEjV,QAAS9B,EAAKgE,SAAS,IAAM,CAAEG,eARnD,WAUDnE,EAAKsO,OAVJ,CAAApN,EAAAzM,KAAA,SAUY,OAVZyM,EAAAzM,KAAA,GAUkB2iB,GAAiB,CAAEtV,QAAS9B,EAAKsO,OAAO,IAAM,CAAEnK,eAVlE,YAYDnE,EAAKuO,YAZJ,CAAArN,EAAAzM,KAAA,SAaH,OAbGyM,EAAAzM,KAAA,GAaG8iB,GAAgB,CAAEzV,QAAS9B,EAAKuO,YAAY,IAAM,CAAEpK,eAbvD,QAAAoxB,IAAAr0B,EAAAzM,KAAA,iCAAAyM,EAAApM,SAAAivB,QA0BA2R,GAAgC,SAC3CtY,EACAC,GAF2C,OAI3CD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAiwB,EAAAjE,GAAA,IAAAC,EAAAnQ,EAAA3V,EAAAuH,EAAAqC,EAAAwxB,EAAAC,EAAAC,EAAA1zC,EAAA6d,EAAA,OAAA7L,mBAAAG,KAAA,SAAAqN,GAAA,eAAAA,EAAAnN,KAAAmN,EAAAlN,MAAA,UAAA4rB,EAAAtkC,OAAAi5B,GAAA,KAAAj5B,CAAAqkC,EAAA,GAAWlQ,EAAXmQ,EAAA,GAAmB9lB,EAAnB8lB,EAAA,GACDve,EAAUoO,EAAOS,QAAQ7O,QAC1BA,GAAYgM,GAAO1C,IAAWlE,GAAGpF,GAF/B,CAAAH,EAAAlN,KAAA,eAAAkN,EAAAzB,OAAA,iBAGHiE,OAA+BrjB,EAH5B60C,EAAA,EAAAC,EAImB75C,OAAOoiC,QAAQ5jB,EAAMyF,MAJxC,YAAA21B,EAAAC,EAAAh6C,QAAA,CAAA+lB,EAAAlN,KAAA,YAAAohC,EAAA95C,OAAAi5B,GAAA,KAAAj5B,CAAA65C,EAAAD,GAAA,GAIKxzC,EAJL0zC,EAAA,GAIU71B,EAJV61B,EAAA,IAMH71B,EAAKgE,SAAS,GAAGgH,mBAAmBkN,GAAGpW,EAAQkJ,qBAC/ChL,EAAKgE,SAAS,GAAGsI,YAAc4D,EAAOhf,KAAK7G,QAPxC,CAAAsX,EAAAlN,KAAA,gBASH0P,EAAahiB,EATVwf,EAAAzB,OAAA,oBAAAy1B,IAAAh0B,EAAAlN,KAAA,mBAaF0P,EAbE,CAAAxC,EAAAlN,KAAA,gBAAAkN,EAAAzB,OAAA,kBAcP,OAdOyB,EAAAlN,KAAA,GAcDyZ,GAAkB,CAAEpM,WAAW,CAAEqC,eAdhC,yBAAAxC,EAAA7M,SAAAuvB,QA0BAyR,GAA8B,SACzC1Y,EACAC,GAFyC,OAIzCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAA+N,EAAAqe,GAAA,IAAAC,EAAAvQ,EAAA3V,EAAAuH,EAAAkC,EAAA,OAAA7P,mBAAAG,KAAA,SAAA8N,GAAA,eAAAA,EAAA5N,KAAA4N,EAAA3N,MAAA,UAAAgsB,EAAA1kC,OAAAi5B,GAAA,KAAAj5B,CAAAykC,EAAA,GAAWtQ,EAAXuQ,EAAA,GAAmBlmB,EAAnBkmB,EAAA,GACD3e,EAAUoO,EAAOS,QAAQ7O,QAC1BA,GAAYgM,GAAOxC,IAAepE,GAAGpF,GAFnC,CAAAM,EAAA3N,KAAA,eAAA2N,EAAAlC,OAAA,oBAID4B,EAAQqC,cAAc5J,EAAM4U,SAAcrN,EAAQqC,cAAc5J,EAAMyF,KAJrE,CAAAoC,EAAA3N,KAAA,eAAA2N,EAAAlC,OAAA,oBAMD8D,EAAWzJ,EAAMyF,KAAK8B,EAAQqC,YAAYH,SAAS,GAEvDA,EAASzkB,SAAW2wB,EAAOhf,KAAK7G,UAChC2Z,EAASuI,KAAKxD,WAAWorB,IAAI55B,EAAMsU,cAClC7K,EAASwH,mBAAmB0M,GAAGpW,EAAQ0J,qBACvCxH,EAASuI,KAAK7oB,OAAOw0B,GAAGpW,EAAQpe,SAChCsgB,EAASuI,KAAKxD,WAAWmP,GAAGpW,EAAQiH,YAZhC,CAAA3G,EAAA3N,KAAA,eAAA2N,EAAAlC,OAAA,iBAiBP,OAjBOkC,EAAA3N,KAAA,GAiBDwiB,GAAsB,CAAEnV,WAAW,CAAEqC,WAAYrC,EAAQqC,aAjBxD,yBAAA/B,EAAAtN,SAAAqN,QAiCA4zB,GAA2B,SACtC3Y,EACAC,EAFsCsD,GAAA,IAGpC9J,EAHoC8J,EAGpC9J,OAHoC,OAKtCwG,EAAOpb,KACLlmB,OAAA0hC,GAAA,KAAA1hC,CAAc,OAAG+E,EAAW,SAAAu8B,GAAM,OAChCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWk7B,KAClBl7B,OAAAgxC,GAAA,KAAAhxC,CAAU,SAAAm0B,GAAM,OACdmN,EAAOpb,KACLlmB,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAwe,GACP,IAEIy7B,EAFEz2C,EAASgb,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAYH,SAAS,GAAGzkB,OAG9D,GAAIgb,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAYkK,aACrC2nB,EAAUj6C,OAAAk/B,GAAA,KAAAl/B,CAAGwe,EAAMyF,KAAKkQ,EAAOhf,KAAKiT,YAAYkK,aAAc,QAC3D,CACH,IAAMvM,EAAwB,CAC5B5iB,KAAMwqB,EAAYgC,cAClBV,mBAAoBsJ,KACpB3I,OAAQpR,EAAM4U,QAAQe,EAAOhf,KAAKiT,YAAYwH,QAEhDqqB,EAAUj6C,OAAA0/B,GAAA,KAAA1/B,CAAK66B,GAAYC,EAAQ/U,IAGrC,OAAOk0B,EAAQ/zB,KACblmB,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAoxB,EAAU1jB,GAAV,OAAA3N,mBAAAG,KAAA,SAAAmxB,GAAA,eAAAA,EAAAjxB,KAAAixB,EAAAhxB,MAAA,OACP,OADOgxB,EAAAhxB,KAAA,EACDyiB,GAAqB,CAAEpV,WAAWoO,EAAOhf,MADxC,OAEP,OAFOu0B,EAAAhxB,KAAA,EAEDglB,GAAY,CAAE3X,WAAW,CAAEzX,QAAS9K,IAFnC,wBAAAkmC,EAAA3wB,SAAA0wB,iBAqBZyQ,GAA6B,SACxC7Y,EACAC,GAFwC,OAIxCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAwxB,EAAAxE,GAAA,IAAAC,EAAAnR,EAAA3V,EAAAuH,EAAAqC,EAAA,OAAAhQ,mBAAAG,KAAA,SAAAyxB,GAAA,eAAAA,EAAAvxB,KAAAuxB,EAAAtxB,MAAA,UAAA4sB,EAAAtlC,OAAAi5B,GAAA,KAAAj5B,CAAAqlC,EAAA,GAAWlR,EAAXmR,EAAA,GAAmB9mB,EAAnB8mB,EAAA,GACDvf,EAAUoO,EAAOS,QAAQ7O,QAC1BA,GAAYgM,GAAOrC,IAAcvE,GAAGpF,GAFlC,CAAAikB,EAAAtxB,KAAA,eAAAsxB,EAAA7lB,OAAA,oBAGDiE,EAAagQ,GAAcrS,EAAQ6J,QAErCxH,KAAc5J,EAAMyF,MACtBkQ,EAAOhf,KAAK7G,UAAYkQ,EAAMyF,KAAKmE,GAAYH,SAAS,GAAGsI,YAE3D/R,EAAMyF,KAAKmE,GAAYiK,gBAGvB7T,EAAMyF,KAAKmE,GAAYmK,OAXlB,CAAAyX,EAAAtxB,KAAA,eAAAsxB,EAAA7lB,OAAA,iBAeP,OAfO6lB,EAAAtxB,KAAA,EAeDuiB,GAAe,CAAErL,OAAQ7J,EAAQ6J,QAAU,CAAExH,eAf5C,OAiBP,OAjBO4hB,EAAAtxB,KAAA,GAiBD0iB,QAAer2B,EAAW,CAAEqjB,eAjB3B,yBAAA4hB,EAAAjxB,SAAA8wB,QA8BAsQ,GAAsC,SACjD9Y,EACAC,GAFiD,OAIjDD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAA+hC,EAAA7U,GAAA,IAAAC,EAAArR,EAAA3V,EAAAuH,EAAAqC,EAAAiyB,EAAAC,EAAAC,EAAAn0C,EAAA6d,EAAA,OAAA7L,mBAAAG,KAAA,SAAAkO,GAAA,eAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,UAAA8sB,EAAAxlC,OAAAi5B,GAAA,KAAAj5B,CAAAulC,EAAA,GAAWpR,EAAXqR,EAAA,GAAmBhnB,EAAnBgnB,EAAA,GACDzf,EAAUoO,EAAOS,QAAQ7O,QAC1BA,GAAYgM,GAAO1C,IAAWlE,GAAGpF,GAF/B,CAAAU,EAAA/N,KAAA,eAAA+N,EAAAtC,OAAA,iBAAAk2B,EAAA,EAAAC,EAImBt6C,OAAOoiC,QAAQ5jB,EAAMyF,MAJxC,YAAAo2B,EAAAC,EAAAz6C,QAAA,CAAA4mB,EAAA/N,KAAA,YAAA6hC,EAAAv6C,OAAAi5B,GAAA,KAAAj5B,CAAAs6C,EAAAD,GAAA,GAIKj0C,EAJLm0C,EAAA,GAIUt2B,EAJVs2B,EAAA,IAMHt2B,EAAKsO,SACLtO,EAAKsO,OAAO,GAAGtD,mBAAmBkN,GAAGpW,EAAQkJ,qBAC7ChL,EAAKgE,SAAS,GAAGsI,YAAc4D,EAAOhf,KAAK7G,QARxC,CAAAmY,EAAA/N,KAAA,gBAUH0P,EAAahiB,EAVVqgB,EAAAtC,OAAA,oBAAAk2B,IAAA5zB,EAAA/N,KAAA,mBAcF0P,EAdE,CAAA3B,EAAA/N,KAAA,gBAAA+N,EAAAtC,OAAA,kBAeP,OAfOsC,EAAA/N,KAAA,GAeDkjB,GACJ,CACE9N,aAAc0M,GAAmChc,EAAMyF,KAAKmE,GAAYmK,OAAQ,KAElF,CAAEnK,eAnBG,QAqBP,OArBO3B,EAAA/N,KAAA,GAqBD4iB,GAAwB,CAAEvV,WAAW,CAAEqC,eArBtC,yBAAA3B,EAAA1N,SAAAqhC,QAkCAI,GAA8B,SACzCnZ,EACAC,GAFyC,OAIzCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAoiC,EAAAhV,GAAA,IAAAC,EAAAvR,EAAA3V,EAAAuH,EAAAqC,EAAAsyB,EAAAC,EAAAC,EAAAx0C,EAAA6d,EAAA,OAAA7L,mBAAAG,KAAA,SAAAwO,GAAA,eAAAA,EAAAtO,KAAAsO,EAAArO,MAAA,UAAAgtB,EAAA1lC,OAAAi5B,GAAA,KAAAj5B,CAAAylC,EAAA,GAAWtR,EAAXuR,EAAA,GAAmBlnB,EAAnBknB,EAAA,GACD3f,EAAUoO,EAAOS,QAAQ7O,QAC1BA,GAAYgM,GAAO1C,IAAWlE,GAAGpF,GAF/B,CAAAgB,EAAArO,KAAA,eAAAqO,EAAA5C,OAAA,iBAAAu2B,EAAA,EAAAC,EAImB36C,OAAOoiC,QAAQ5jB,EAAMyF,MAJxC,YAAAy2B,EAAAC,EAAA96C,QAAA,CAAAknB,EAAArO,KAAA,YAAAkiC,EAAA56C,OAAAi5B,GAAA,KAAAj5B,CAAA26C,EAAAD,GAAA,GAIKt0C,EAJLw0C,EAAA,GAIU32B,EAJV22B,EAAA,IAMH32B,EAAKuO,cACLvO,EAAKuO,YAAY,GAAGvD,mBAAmBkN,GAAGpW,EAAQkJ,qBAClDhL,EAAKgE,SAAS,GAAGsI,YAAc4D,EAAOhf,KAAK7G,QARxC,CAAAyY,EAAArO,KAAA,gBAUH0P,EAAahiB,EAVV2gB,EAAA5C,OAAA,oBAAAu2B,IAAA3zB,EAAArO,KAAA,mBAcF0P,EAdE,CAAArB,EAAArO,KAAA,gBAAAqO,EAAA5C,OAAA,kBAeP,OAfO4C,EAAArO,KAAA,GAeDgjB,GAAwB,CAAE3V,WAAW,CAAEqC,eAftC,yBAAArB,EAAAhO,SAAA0hC,QA4BAI,GAA4B,SACvCxZ,EACAC,GAFuC,OAIvCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW,CAACk1B,GAAc7C,MACjCryB,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAyiC,EAAAnV,GAAA,IAAAC,EAAAzR,EAAA3V,EAAAu8B,EAAAC,EAAAC,EAAA70C,EAAA6d,EAAAmE,EAAAmU,EAAA,OAAAnkB,mBAAAG,KAAA,SAAA2iC,GAAA,eAAAA,EAAAziC,KAAAyiC,EAAAxiC,MAAA,OAAAktB,EAAA5lC,OAAAi5B,GAAA,KAAAj5B,CAAA2lC,EAAA,GAAWxR,EAAXyR,EAAA,GAAmBpnB,EAAnBonB,EAAA,GAAAmV,EAAA,EAAAC,EACmBh7C,OAAOoiC,QAAQ5jB,EAAMyF,MADxC,YAAA82B,EAAAC,EAAAn7C,QAAA,CAAAq7C,EAAAxiC,KAAA,YAAAuiC,EAAAj7C,OAAAi5B,GAAA,KAAAj5B,CAAAg7C,EAAAD,GAAA,GACK30C,EADL60C,EAAA,GACUh3B,EADVg3B,EAAA,GAEC7yB,EAAahiB,EACjBm2B,EAAWtY,EAAKgE,SAAS,GAEzBsU,EAASxM,wBAA0BoE,EAAOhf,KAAKugB,cAC/C6G,EAAShM,YAAc4D,EAAOhf,KAAK1L,QANhC,CAAAyxC,EAAAxiC,KAAA,eAAAwiC,EAAA/2B,OAAA,yBAWAF,EAAKqO,cAAiBrO,EAAKsO,OAX3B,CAAA2oB,EAAAxiC,KAAA,SAYH,OAZGwiC,EAAAxiC,KAAA,GAYGmjB,GAAe,IAAIl4B,MAAJ,gDAA2D,CAC9EykB,eAbC,QAAA8yB,EAAAxiC,KAAA,qBAeI8F,EAAMyF,KAAKmE,GAAYmK,OAf3B,CAAA2oB,EAAAxiC,KAAA,SAgBH,OAhBGwiC,EAAAxiC,KAAA,GAgBGkjB,GACJ,CACE9N,aAAc0M,GAAmChc,EAAMyF,KAAKmE,GAAYmK,OAAQ,KAElF,CAAEnK,eApBD,QAAA8yB,EAAAxiC,KAAA,iBAsBA,OAtBAwiC,EAAAxiC,KAAA,GAsBMkjB,GAAY,GAAI,CAAExT,eAtBxB,QAAA2yB,IAAAG,EAAAxiC,KAAA,iCAAAwiC,EAAAniC,SAAA+hC,QAkCAK,GAAuB,SAClC9Z,EACAC,GAFkC,OAIlCD,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAA2hC,GAAA,KAAA3hC,CAAeshC,GACfthC,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAA+iC,EAAApV,GAAA,IAAAE,EAAA/R,EAAA3V,EAAAuH,EAAAqC,EAAAizB,EAAApzB,EAAA,OAAA7P,mBAAAG,KAAA,SAAA8O,GAAA,eAAAA,EAAA5O,KAAA4O,EAAA3O,MAAA,UAAAwtB,EAAAlmC,OAAAi5B,GAAA,KAAAj5B,CAAAgmC,EAAA,GAAW7R,EAAX+R,EAAA,GAAmB1nB,EAAnB0nB,EAAA,GACDngB,EAAUoO,EAAOS,QAAQ7O,QAC1BA,GAAYgM,GAAOjB,IAAgB3F,GAAGpF,GAFpC,CAAAsB,EAAA3O,KAAA,eAAA2O,EAAAlD,OAAA,oBAGDiE,EAAarC,EAAQyK,KAAKpI,WAC1BA,KAAc5J,EAAMyF,KAJnB,CAAAoD,EAAA3O,KAAA,eAAA2O,EAAAlD,OAAA,oBAAAk3B,EAAAr7C,OAAAi5B,GAAA,KAAAj5B,CAKcwe,EAAMyF,KAAKmE,GAAYH,SALrC,GAKEA,EALFozB,EAAA,GAOLt1B,EAAQ0K,YAAcxI,EAASsI,WAC9BxK,EAAQ0J,mBAAmB0M,GAAGlU,EAASwH,qBACvC1J,EAAQyK,KAAK7oB,OAAOw0B,GAAGlU,EAASuI,KAAK7oB,SACrCoe,EAAQyK,KAAKxD,WAAWmP,GAAGlU,EAASuI,KAAKxD,cAC1CxO,EAAMyF,KAAKmE,GAAYmK,SACvB/T,EAAMyF,KAAKmE,GAAYoK,cACvBhU,EAAMyF,KAAKmE,GAAYiK,gBACvBtM,EAAQyK,KAAKxD,WAAWorB,IAAI55B,EAAMsU,aAd7B,CAAAzL,EAAA3O,KAAA,gBAAA2O,EAAAlD,OAAA,kBAiBP,OAjBOkD,EAAA3O,KAAA,GAiBDijB,GAAiB,CAAE5V,WAAW,CAAEqC,eAjB/B,QAkBP,OAlBOf,EAAA3O,KAAA,GAkBDmjB,GAAe,IAAIl4B,MAAM,qBAAsB,CAAEykB,eAlBhD,yBAAAf,EAAAtO,SAAAqiC,QAuCAE,GAAqC,SAChDja,EADgD8E,EAAAU,GAIF7mC,OAAA4sB,EAAA,KAAA5sB,CAAAmmC,GAAA,IAD5CrL,EAC4C+L,EAD5C/L,OAEIpZ,EAAQ,IAAI2pB,GAAoC,IACtD,OAAOhK,EAAQnb,KACblmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAAgxC,GAAA,KAAAhxC,CAAU,SAAAm0B,GACR,IAAMpO,EAAUoO,EAAOS,QAAQ7O,QAC/B,IACGA,KAECgM,GAAOnB,IAAgBzF,GAAGpF,IAC1BgM,GAAOjB,IAAgB3F,GAAGpF,IAC1BgM,GAAOb,IAAa/F,GAAGpF,IACvBgM,GAAOF,IAAiB1G,GAAGpF,IAG7B,OAAOgZ,GAAA,KACT,IAAMiY,EAAQjxB,EAAQkJ,mBACpB7oB,EAAM4wC,EAAMjzB,WACRpC,EAASD,EAAMhc,IAAIU,GACzB,GAAIub,EAAQ,OAAO3hB,OAAAk/B,GAAA,KAAAl/B,CAAG09B,GAAY,CAAE3X,QAASpE,GAAUwS,EAAOhf,OAE9D,IAAMomC,EAAuB,CAC3Bp4C,KAAMwqB,EAAY2B,UAClBL,mBAAoB+nB,GAEtB,OAAOh3C,OAAA0/B,GAAA,KAAA1/B,CAAK66B,GAAYC,EAAQygB,IAAYr1B,KAC1ClmB,OAAA+nC,GAAA,KAAA/nC,CAAI,SAAAk3C,GAAM,OAAIx1B,EAAMy1B,IAAI/wC,EAAK8wC,KAC7Bl3C,OAAA2K,GAAA,KAAA3K,CAAI,SAAAk3C,GAAM,OAAIxZ,GAAY,CAAE3X,QAASmxB,GAAU/iB,EAAOhf,aAajDqmC,GAA8B,SACzCna,GADyC,OAGzCA,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW49B,KAClB59B,OAAAw/B,GAAA,KAAAx/B,CAAQoY,mBAAAC,KAAC,SAAAojC,EAAUtnB,GAAV,IAAApO,EAAA,OAAA3N,mBAAAG,KAAA,SAAAiP,GAAA,eAAAA,EAAA/O,KAAA+O,EAAA9O,MAAA,UACDqN,EAAUoO,EAAOS,QAAQ7O,QAE5BA,GACAgM,GAAON,IAAiBtG,GAAGpF,IAC5BA,EAAQwL,cAAgB4C,EAAOhf,KAAK7G,QAL/B,CAAAkZ,EAAA9O,KAAA,eAAA8O,EAAArD,OAAA,iBAQP,OAROqD,EAAA9O,KAAA,EAQDqjB,GACJ,CAAEhW,WACF,CACE2P,aAAc3P,EAAQgK,sBACtBtmB,QAASsc,EAAQwL,YACjB4E,cAAepQ,EAAQyL,eACvBxE,WAAYjH,EAAQiH,WAAWsM,aAd5B,wBAAA9R,EAAAzO,SAAA0iC,QA0BAC,GAA+B,SAC1Cra,GAD0C,OAG1CA,EAAQnb,KACNlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWg8B,KAClBh8B,OAAA2K,GAAA,KAAA3K,CAAI,SAAAm0B,GAAM,OACRuJ,GAAY,CAAE3X,QAASoO,EAAOS,QAAQ7O,SAAW,CAAEzX,QAAS6lB,EAAOhf,KAAK1L,cC7rCjEkyC,GAAW37C,OAAAif,OAAA,GACnB28B,EACAC,EACAC,GAGQC,GAAiB,SAC5B1a,EACAC,EACAmX,GAEA,IAAMuD,EAAuB3a,EAAQnb,KAAKlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW69B,MAC1Doe,EAAiB5a,EAAQnb,KACvBlmB,OAAA8lC,GAAA,KAAA9lC,CAAwBA,OAAAsrB,EAAA,UAAAtrB,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW69B,MAAkB,IAE9Dqe,EAAgB5a,EAAOpb,KAAKlmB,OAAAiyC,GAAA,KAAAjyC,CAAUg8C,IAOxC,OAJAE,EAAcv2B,UAAU8yB,EAAK0D,cAC7BF,EAAet2B,UAAU8yB,EAAK2D,eAGvBp8C,OAAA0/B,GAAA,KAAA1/B,CAAKA,OAAO+qB,OAAO4wB,KAAcz1B,KACtClmB,OAAAw/B,GAAA,KAAAx/B,CAAS,SAAAq8C,GAAI,OAAIA,EAAKJ,EAAgBC,EAAezD,KACrDz4C,OAAAgnC,GAAA,KAAAhnC,CAAW,SAAA0D,GAAG,OAAI1D,OAAAk/B,GAAA,KAAAl/B,CAAG69B,GAAe,CAAE/qB,OAAQpP,OAC9C1D,OAAAiyC,GAAA,KAAAjyC,CAAUg8C,KCZDM,IAde9xB,EAAA,KAC1BA,EAAA,KAAe,CACbA,EAAA,KAAO,CACHgiB,mBAAkBhiB,EAAA,KACpBytB,cAAeztB,EAAA,KACf0D,cAAe1D,EAAA,OAEjBA,EAAA,KAAU,CACR+hB,aAAc/hB,EAAA,UAMuB,CACzCgiB,mBACE,mGACFte,cAAe,IACf+pB,cAAe,K,yQCiCJsE,GAAb,WAyDI,SAAFC,EACE53B,EACAxP,EACA0lB,EACA2G,EACAjjB,EACAyE,GAAoB,IAAAjP,EAAAlL,KAAA9I,OAAA+M,EAAA,KAAA/M,CAAA8I,KAAA0zC,GAEpB1zC,KAAKmc,YAAcL,EAASK,YAAY5e,KAAKue,GAC7C,IAAMtW,EAAUkQ,EAAMlQ,QAGtBsW,EAAS63B,iBAAiBj+B,EAAMsU,YAAc,GAE9C,IAAMwO,EAAS,IAAIob,GAAA,KAA6Bl+B,GAChD1V,KAAKw4B,OAASA,EAEd,IAAMD,EAAU,IAAIsb,GAAA,KACpB7zC,KAAKu4B,QAAUA,EAEfv4B,KAAK4c,UAAY4b,EAAOpb,KACtBlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAwe,GAAK,OACPxe,OAAAsrB,EAAA,aAAAtrB,CAEEwe,EAAML,SACN,SAACzd,EAAQk8C,EAAiBlnB,GACxB,IAAMvsB,EAAQnJ,OAAAsrB,EAAA,WAAAtrB,CAAQwe,EAAMJ,OAAQ,SAAAupB,GAAE,OAAIA,IAAOjS,IAC5CvsB,IACLzI,EAAOyI,GAASnJ,OAAAsrB,EAAA,aAAAtrB,CAEd48C,EACA,SAACC,EAAuBr9B,EAAS/V,GAC/B,IAAMqzC,EAAet9B,EAAQ/V,QAAQqkB,aAC/BtO,EAAQ/V,QAAQqkB,aAAaT,kBAAkB+O,IAC7C5c,EAAQ/V,QAAQqkB,aAAaR,cAE/BrG,EAAA,QACJ81B,EAAWv9B,EAAQyO,IAAIH,aACnBtO,EAAQyO,IAAIH,aAAaT,kBAAkB+O,IACzC5c,EAAQyO,IAAIH,aAAaR,cAE3BrG,EAAA,QACJpX,EAAUitC,EAAalgB,IAAImgB,GAC7BF,EAAsBpzC,GAAQzJ,OAAAif,OAAA,CAC5BT,MAAOgB,EAAQhB,OACZxe,OAAAsrB,EAAA,QAAAtrB,CAAKwf,EAAS,CAAC,KAAM,gBAAiB,YAAa,eAAc,CACpErW,QACAusB,aAAcA,EACdjsB,QAASA,EACTuzC,WAAYx9B,EAAQyO,IAAIjmB,QACxBi1C,eAAgBz9B,EAAQ/V,QAAQzB,QAChC6H,UACA6nC,SAAUl4B,EAAQyO,IAAIjmB,QAAQo0B,IAAIvsB,aAS5C/G,KAACqf,WAAamZ,EAAOpb,KACvBlmB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAwe,GAAK,OAAIA,EAAMyF,OACnBjkB,OAAAy0C,GAAA,KAAAz0C,GACAA,OAAAgxC,GAAA,KAAAhxC,CAAU,SAAAikB,GAAI,OAAIjkB,OAAA0/B,GAAA,KAAA1/B,CAAKA,OAAOoiC,QAAQne,MAGlCjkB,OAAJ6rC,GAAA,KAAI7rC,CACF,SAAA0gB,EAAAG,GAAgC,IAA7BtB,EAA6BmB,EAA7BnB,IAA6B2hB,EAAAlhC,OAAAi5B,GAAA,KAAAj5B,CAAA6gB,EAAA,GAArBuH,EAAqB8Y,EAAA,GAATjd,EAASid,EAAA,GAExB,OAAF3hB,EAAI6I,KAAgBnE,EAAa,CAAE1E,OAE3B,CAAEA,IAAGvf,OAAAif,OAAA,GAAOM,EAAPvf,OAAAwF,EAAA,KAAAxF,CAAA,GAAaooB,EAAanE,IAAQi5B,QAASj5B,IAE9D,CAAQ1E,IAAD,KAETvf,OAAAsI,GAAA,KAAAtI,CAAO,SAAAuhC,GAAM,IAAH2b,EAAH3b,EAAG2b,QAAG,QAAaA,IACtBl9C,OAAJ2K,GAAA,KAAI3K,CAAA,SAAA4hC,GAAM,IAAHsb,EAAHtb,EAAGsb,QAAG,OAAWA,IAEjBl9C,OAAJ2K,GAAA,KAAI3K,CAAAw4B,KAGF1vB,KAACmd,QAAUob,EAAQnb,KAAKlmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAWA,OAAO+qB,OAAOoT,OAExDr1B,KAAC0d,aAAexmB,OAAAsrB,EAAA,WAAAtrB,CAAQ,SAAOmJ,GAAP,OAAwBg0C,GAAAnpC,OAAA,SAAAoE,mBAAAC,KAAA,SAAAC,IAAA,IAAAsvB,EAAA/F,EAAAI,EAAAmb,EAAAx1C,EAAAvC,EAAAiK,EAAA,OAAA8I,mBAAAG,KAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC7CsT,EAAQb,GAAGhiB,GADkC,CAAAqP,EAAAE,KAAA,cACpB,IAAI/U,MAAM,mBADU,UAE5CwF,KAASL,KAAK0V,MAAMJ,OAFwB,CAAA5F,EAAAE,KAAA,cAET,IAAI/U,MAAJ,UAAAqc,OAAoB7W,EAApB,oBAFS,OAIJ,OADxCy+B,EAAgB9+B,KAAK2vC,KAAKjR,iBAAiBr+B,GAHCqP,EAAAE,KAAA,EAIEtW,QAAQ6C,IAAI,CAC9D2iC,EAAcvB,UAAU+W,cACxBxV,EAAcvB,UAAUz+B,WACxBggC,EAAcvB,UAAUhhC,OAAO27B,MAAMhhC,OAAAsrB,EAAA,YAAAtrB,MAAS+E,IAC9C6iC,EAAcvB,UAAU/2B,SAAS0xB,MAAMhhC,OAAAsrB,EAAA,YAAAtrB,MAAS+E,MARA,cAAA88B,EAAArpB,EAAAyL,KAAAge,EAAAjiC,OAAAi5B,GAAA,KAAAj5B,CAAA6hC,EAAA,GAI3Cub,EAJ2Cnb,EAAA,GAI9Br6B,EAJ8Bq6B,EAAA,GAIpB58B,EAJoB48B,EAAA,GAId3yB,EAJc2yB,EAAA,GAAAzpB,EAAA2L,OAAA,SAU3C,CAAEi5B,cAAax1C,WAAUvC,OAAMiK,WAVY,yBAAAkJ,EAAAO,SAAAT,EAAAxP,WAahD,IAAEu0C,EAA4B,GAM9Bv0C,KAAC2vC,KAAO,CACJ0D,aAAQ7a,EACR8a,cAAS/a,EACT4E,QAAG,IAAIyW,GAAA,KAA8Bz5B,GACrCopB,QAAG,IAAIiR,GAAA,KACP14B,SAANA,EACMxP,QAANA,EACM0lB,OAANA,EACMxsB,QAANA,EACMmzB,cAANA,EACMD,iBAAY,IAAI+b,GAAA,YACpB9b,EAAcM,qBAAqBzzB,QACnCyzB,GACAjH,GAEIgJ,wBAAmB9jC,OAAAsrB,EAAA,WAAAtrB,CACvB,SAACsO,GAAO,OACN,IAAIivC,GAAA,YAASjvC,EAASkvC,GAAgC1iB,KAE1D0M,iBAAkBxnC,OAAAsrB,EAAA,WAAAtrB,CAChB,SAACsO,GAAD,OACE,IAAIivC,GAAA,YACFjvC,EACAmvC,GACA3iB,MAKR,IAAM4iB,EAAiB19C,OAAA29C,GAAA,KAAA39C,CAKrB,CAAE49C,aAAc90C,KAAK2vC,OAEnB3vC,KAACyV,MAAQve,OAAA69C,GAAA,KAAA79C,CACXw9B,GACAhf,EACAq/B,GAAA,KAAer9C,WAAf,EAAmB68C,EAAnBr9B,OAAA,CAAgC09B,MAGlCA,EAAeI,IAAI/B,IA1MrB,OAAA/7C,OAAAmN,GAAA,KAAAnN,CAAAw8C,EAAA,EAAEp2C,IAAJ,OAAIN,MAAJ,WA6WUgD,KAADyV,MAAMw/B,SAASlgB,GAAe,CAAE/qB,OAAQ+gB,GAAemqB,UA7WhE,CAAI53C,IAAJ,iBAAIN,MAAJ,W,0JA6XWgD,KAAK2vC,KAAK7zB,SAASkO,Y,qBAAgB,O,SAAMhqB,KAAK2vC,KAAK7zB,SAASuc,iB,yGA7XvE,CAAI/6B,IAAJ,SAAIN,MAAJ,SAgYgBm4C,GAAgC,IAAAlnC,EAAAjO,KACtCA,KAAD2vC,KAAKxS,QAAQ/f,KAAKlmB,OAAAm/B,GAAA,KAAAn/B,IAAS2lB,UAAU,SAACu4B,GAAD,OACxCnnC,EAAK0hC,KAAKxS,QAAQvtB,KAAI1Y,OAAAif,OAAA,GACjBi/B,EACAD,QApYX,CAAI73C,IAAJ,aAAIN,MAAJ,SA+YoBwI,GAEhB,GADAA,EAAUA,GAAWxF,KAAKwF,SACrB0d,EAAQb,GAAG7c,GAAU,MAAM,IAAI3K,MAAM,mBAC1C,OAAOmF,KAAK2vC,KAAK7zB,SAASY,WAAWlX,KAlZzC,CAAIlI,IAAJ,kBAAIN,MAAJ,SA4Z+BqD,EAAemF,G,2JAC1CA,EAAUA,GAAWxF,KAAKwF,QACrB0d,EAAQb,GAAG7c,IAAa0d,EAAQb,GAAGhiB,G,sBAAc,IAAIxF,MAAM,mB,UAC1DwF,KAASL,KAAK0V,MAAMJ,O,sBAAe,IAAIza,MAAJ,UAAAqc,OAAoB7W,EAApB,oB,cACnCy+B,EAAgB9+B,KAAK2vC,KAAKjR,iBAAiBr+B,G,kBAE1Cy+B,EAAcvB,UAAU8X,UAAU7vC,I,gDAla7C,CAAIlI,IAAJ,eAAIN,MAAJ,W,2KA8aWgD,KAAKw4B,OACTpb,KACClmB,OAAAm/B,GAAA,KAAAn/B,CAAM,SAAAwe,GAAK,OAAKxe,OAAAsrB,EAAA,WAAAtrB,CAAQwe,EAAMJ,UAC9Bpe,OAAA2K,GAAA,KAAA3K,CAAI,SAAAwe,GAAK,OAAIxe,OAAOiL,KAAKuT,EAAMJ,WAEhCkK,a,gDAnbP,CAAIliB,IAAJ,cAAIN,MAAJ,SAgcIqD,EACAM,GACwC,IAAxC6X,EAAwCra,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAAF,G,+JAEjC+kB,EAAQb,GAAGhiB,IAAW6iB,EAAQb,GAAG1hB,G,sBAAgB,IAAI9F,MAAM,mB,UAC1D6a,EAAQ1V,KAAK0V,MACbkX,EAAelX,EAAMJ,OAAOjV,GAC7BusB,E,sBAAoB,IAAI/xB,MAAM,yB,cAC7BQ,EAAU2E,KAAKu4B,QAClBnb,KACClmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW,CAAC00B,GAAeC,MAClC30B,OAAAsI,GAAA,KAAAtI,CACE,SAAAm0B,GAAM,OAAIA,EAAOhf,KAAKugB,eAAiBA,GAAgBvB,EAAOhf,KAAK1L,UAAYA,IAEjFzJ,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAA2K,GAAA,KAAA3K,CAAI,SAAAm0B,GACF,GAAIn0B,OAAAu0B,GAAA,cAAAv0B,CAAW20B,GAAmBR,GAAS,MAAMA,EAAOS,QACxD,OAAOT,EAAOS,QAAQyI,UAGzB/U,YAEHxf,KAAKyV,MAAMw/B,SAAStpB,GAAWz0B,OAAAif,OAAA,GAAMqC,GAAW,CAAEoU,eAAcjsB,a,kBAEzDtF,G,gDAxdX,CAAIiC,IAAJ,iBAAIN,MAAJ,SAoeIqD,EACAM,EACAzB,G,+JAEKgkB,EAAQb,GAAGhiB,IAAW6iB,EAAQb,GAAG1hB,G,sBAAgB,IAAI9F,MAAM,mB,UAC1D6a,EAAQ1V,KAAK0V,MACbkX,EAAelX,EAAMJ,OAAOjV,GAC7BusB,E,sBAAoB,IAAI/xB,MAAM,yB,UACnCqE,EAAUhI,OAAAyqB,EAAA,gBAAAzqB,CAAagI,GAClBujB,EAAK,IAAIJ,GAAGnjB,G,sBAAgB,IAAIrE,MAAM,+C,cACrCQ,EAAU2E,KAAKu4B,QAClBnb,KACClmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW,CAAC+0B,GAAkBC,MACrCh1B,OAAAsI,GAAA,KAAAtI,CACE,SAAAm0B,GAAM,OAAIA,EAAOhf,KAAKugB,eAAiBA,GAAgBvB,EAAOhf,KAAK1L,UAAYA,IAEjFzJ,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAA2K,GAAA,KAAA3K,CAAI,SAAAm0B,GACF,GAAIn0B,OAAAu0B,GAAA,cAAAv0B,CAAWg1B,GAAsBb,GAAS,MAAMA,EAAOS,QAC3D,OAAOT,EAAOS,QAAQyI,UAGzB/U,YACHxf,KAAKyV,MAAMw/B,SAASjpB,GAAe,CAAE9sB,WAAW,CAAE0tB,eAAcjsB,a,kBACzDtF,G,iDA5fX,CAAIiC,IAAJ,eAAIN,MAAJ,SA4gB4BqD,EAAeM,G,+JAClCuiB,EAAQb,GAAGhiB,IAAW6iB,EAAQb,GAAG1hB,G,sBAAgB,IAAI9F,MAAM,mB,UAC1D6a,EAAQ1V,KAAK0V,MACbkX,EAAelX,EAAMJ,OAAOjV,GAC7BusB,E,sBAAoB,IAAI/xB,MAAM,yB,cAC7BQ,EAAU2E,KAAKu4B,QAClBnb,KACClmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW,CAACqyB,GAAe8C,MAClCn1B,OAAAsI,GAAA,KAAAtI,CACE,SAAAm0B,GAAM,OAAIA,EAAOhf,KAAKugB,eAAiBA,GAAgBvB,EAAOhf,KAAK1L,UAAYA,IAEjFzJ,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAA2K,GAAA,KAAA3K,CAAI,SAAAm0B,GACF,GAAIn0B,OAAAu0B,GAAA,cAAAv0B,CAAWm1B,GAAoBhB,GAAS,MAAMA,EAAOS,QACzD,OAAOT,EAAOS,QAAQyI,UAGzB/U,YACHxf,KAAKyV,MAAMw/B,SAAS7oB,QAAanwB,EAAW,CAAE2wB,eAAcjsB,a,kBACrDtF,G,gDA/hBX,CAAIiC,IAAJ,gBAAIN,MAAJ,SA8iB6BqD,EAAeM,G,+JACnCuiB,EAAQb,GAAGhiB,IAAW6iB,EAAQb,GAAG1hB,G,sBAAgB,IAAI9F,MAAM,mB,UAC1D6a,EAAQ1V,KAAK0V,MACbkX,EAAelX,EAAMJ,OAAOjV,GAC7BusB,E,sBAAoB,IAAI/xB,MAAM,yB,cAE7BQ,EAAU2E,KAAKu4B,QAClBnb,KACClmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW,CAACs1B,GAAgBC,MACnCv1B,OAAAsI,GAAA,KAAAtI,CACE,SAAAm0B,GAAM,OAAIA,EAAOhf,KAAKugB,eAAiBA,GAAgBvB,EAAOhf,KAAK1L,UAAYA,IAEjFzJ,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAA2K,GAAA,KAAA3K,CAAI,SAAAm0B,GACF,GAAIn0B,OAAAu0B,GAAA,cAAAv0B,CAAWu1B,GAAqBpB,GAAS,MAAMA,EAAOS,QAC1D,OAAOT,EAAOS,QAAQyI,UAGzB/U,YACHxf,KAAKyV,MAAMw/B,SAAS1oB,QAActwB,EAAW,CAAE2wB,eAAcjsB,a,kBACtDtF,G,gDAlkBX,CAAIiC,IAAJ,kBAAIN,MAAJ,SA8kBIwI,G,2JAEK0d,EAAQb,GAAG7c,G,sBAAgB,IAAI3K,MAAM,mB,cACpCQ,EAAU2E,KAAKu4B,QAClBnb,KACClmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW,CAACi3B,GAAsBG,MACzCp3B,OAAAsI,GAAA,KAAAtI,CAAO,SAAAm0B,GAAM,OAAIA,EAAOhf,KAAK7G,UAAYA,IACzCtO,OAAAm/B,GAAA,KAAAn/B,GACAA,OAAA2K,GAAA,KAAA3K,CAAI,SAAAm0B,GACF,GAAIn0B,OAAAu0B,GAAA,cAAAv0B,CAAWo3B,GAAoCjD,GAAS,MAAMA,EAAOS,QACzE,OAAOT,EAAOS,WAGjBtM,YACHxf,KAAKyV,MAAMw/B,SAAS/mB,QAA6BjyB,EAAW,CAAEuJ,a,kBACvDnK,G,gDA7lBX,CAAIiC,IAAJ,WAAIN,MAAJ,SAknBIqD,EACA3F,EACAmE,GACgF,IAAhF2Z,EAAgFra,UAAApH,OAAA,QAAAkF,IAAAkC,UAAA,GAAAA,UAAA,GAAF,G,mKAEzE+kB,EAAQb,GAAGhiB,IAAW6iB,EAAQb,GAAG3nB,G,sBAAe,IAAIG,MAAM,mB,UACzD+xB,EAAe5sB,KAAK0V,MAAMJ,OAAOjV,GAClCusB,E,sBAAoB,IAAI/xB,MAAM,yB,UAEnCgE,EAAS3H,OAAAyqB,EAAA,gBAAAzqB,CAAa2H,GACjB4jB,EAAK,IAAIJ,GAAGxjB,G,sBAAe,IAAIhE,MAAM,kB,UAEpC01B,EAAa/X,EAAQ+X,UAAwBr5B,OAAAyqB,EAAA,gBAAAzqB,CAAashB,EAAQ+X,gBAAjCt0B,GACnCs0B,GAAc9N,EAAK,GAAGJ,GAAGkO,G,uBAAkB,IAAI11B,MAAM,0B,gBAElCoB,IAAnBuc,EAAQsO,QAAyB9D,EAAOX,GAAG7J,EAAQsO,Q,uBAC/C,IAAIjsB,MAAM,uB,gBACSoB,IAAvBuc,EAAQ8G,YAA6ByD,EAAKV,GAAG7J,EAAQ8G,Y,uBACjD,IAAIzkB,MAAM,2B,WACZisB,EAAuBtO,EAAvBsO,OAAQxH,EAAe9G,EAAf8G,WACTA,E,iBACEwH,IAAQA,EAASyI,MACtBjQ,EAAagQ,GAAcxI,G,4BAClBA,GAAUwI,GAAcxI,KAAYxH,E,uBACvC,IAAIzkB,MAAM,oD,eAGZQ,EAAU2E,KAAKu4B,QAClBnb,KACClmB,OAAAsI,GAAA,KAAAtI,CAAOA,OAAAu0B,GAAA,cAAAv0B,CAAW,CAACg7B,GAAgBa,MACnC77B,OAAAm/B,GAAA,KAAAn/B,CAAM,SAAAm0B,GAAM,OAAIA,EAAOhf,KAAKiT,aAAeA,IAC3CpoB,OAAA2K,GAAA,KAAA3K,CAAI,SAAAm0B,GACF,GAAIn0B,OAAAu0B,GAAA,cAAAv0B,CAAW67B,GAAgB1H,GAAS,MAAMA,EAAOS,QACrD,OAAOxM,KAGVE,YAEHxf,KAAKyV,MAAMw/B,SACThjB,GAAS,CAAErF,eAAclyB,SAAQmE,SAAQ0xB,YAAWzJ,UAAU,CAAExH,gB,kBAE3DjkB,G,iDA3pBX,CAAIiC,IAAJ,QAAIV,IAAJ,WAiXI,OAAOoD,KAAKyV,MAAM6/B,aAjXtB,CAAIh4C,IAAJ,UAAIV,IAAJ,WAqXI,OAAOoD,KAAK2vC,KAAKnqC,UArXrB,CAAIlI,IAAJ,UAAIV,IAAJ,WAyXI,OAAOoD,KAAK2vC,KAAKrjC,WAzXrB,EAAIhP,IAAJ,SAAIN,MAAJ,SAyOIu4C,EACA1/B,EACA2/B,EACAC,EACAt7B,G,kFAsESu7B,E,8FAxDO,OAwDPA,E,SAAUF,GACjB,OAAOA,GAAiE,oBAAvCA,EAA2BG,SAnE5D75B,EADwB,kBAAfy5B,EACE,IAAIK,GAAA,mBAAgBL,GACtBA,aAAsBK,GAAA,mBACpBL,EAEA,IAAIK,GAAA,gBAAaL,GAI9Bxd,GAAcjc,G,SAEQA,EAAS6b,a,UAAzBrrB,E,OAGDmpC,E,sBACKnpC,EAAQ/P,K,OACT,Y,QAGA,Y,QAGA,U,QAGA,W,gCARHk5C,EAAaI,GAAcJ,U,oCAG3BA,EAAaK,GAAcL,U,oCAG3BA,EAAaM,GAAYN,U,oCAGzBA,EAAaO,GAAaP,U,mCAGpB,IAAI56C,MAAJ,mDAAAqc,OAC+C+sB,KAAKC,UAAU53B,K,YAMtEmoC,GAAA,UAAOwB,SAASpgC,G,oBACdA,EAAQiG,WAAaA,E,iBAAUkW,EAASnc,E,6BACnCA,aAAmBqgC,GAAA,W,iBAAQlkB,EAASnc,EAAQxM,QAAQyS,G,8BAClD,IAAIjhB,MAAJ,UAAAqc,OAAoBrB,EAApB,sBAAAqB,OAAgD4E,I,mCAC/B,kBAAZjG,E,iBAEhBmc,EAASlW,EAASq6B,UAAUtgC,G,4BACnBqN,EAAQb,GAAGxM,G,iBAEH,O,UAAMiG,EAASwe,e,WAA1BC,E,OACDA,EAAS1iB,SAAShC,G,uBACf,IAAIhb,MAAJ,YAAAqc,OAAsBrB,EAAtB,iCAAAqB,OAA6DqjB,I,QACrEvI,EAASlW,EAASq6B,UAAUtgC,G,4BACnBoN,EAAWZ,GAAGxM,G,iBAEvBmc,EAAS,IAAIkkB,GAAA,UAAOrgC,EAASiG,G,8BAEvB,IAAIjhB,MAAM,qE,QAED,O,UAAMm3B,EAAOokB,a,WAAxB5wC,E,OAGF6wC,EAAWn/C,OAAAif,OAAA,GACV6U,GAAY,CACfhB,YAAayrB,EAAUxc,qBAAqBC,cAAgB,EAC5D1zB,UACAwB,QAASsF,EAAQtF,QACjB+iB,SAAU0rB,EAAUxc,qBAAqBzzB,UAQvC8wC,OAAsDr6C,EACxDs6C,OAA4Ct6C,GAE1Cu5C,IAAkBE,EAAUF,G,iBAOhB,OANRp4C,E,iBAAekP,EAAQ/P,MAAQ+P,EAAQtF,Q,YAC3CyuC,EAAUxc,qBAAqBzzB,Q,YAC7BA,G,KACWtO,O,KACb,G,KACAm/C,E,KACApS,K,UAAkBuR,EAAeG,QAAQv4C,G,kDAAQ,O,4BAA5Co5C,M,gBAHDC,E,KAAgBtgC,O,0BAMtBkgC,EAAc5rB,GAAkBgsB,GAG1BC,EAAiBx/C,OAAAsrB,EAAA,YAAAtrB,CACrB,SAACwe,GACC8/B,EAAemB,QAAQv5C,EAAIotB,GAAkB9U,KAE/C,IACA,CAAEkhC,QAAS,MAEbN,EAAUI,EACVH,EAAkB,kBAAMG,EAAeG,S,wBAC9BrB,GAAkB1rB,GAAYzH,GAAGmzB,GAC1Ca,EAAcb,EACLA,IACTa,EAAc5rB,GAAkB+qB,I,WAE9BhwC,IAAY6wC,EAAY7wC,Q,uBACpB,IAAI3K,MAAJ,wDAAAqc,OACoD1R,EADpD,WAAA0R,OACqEm/B,EAAY7wC,QADjF,M,WAIN8G,EAAQtF,UAAYqvC,EAAYrvC,SAChCyuC,EAAUxc,qBAAqBzzB,UAAY6wC,EAAYtsB,S,uBAEjD,IAAIlvB,MAAJ,iE,eAEFi8C,EAAY5/C,OAAAif,OAAA,GACbq9B,GACAr5B,GAGCwB,EAAS,IAAI+3B,EAAO53B,EAAUxP,EAAS0lB,EAAQyjB,EAAWY,EAAaS,GACzER,GAAS36B,EAAO6c,OAAO3b,UAAUy5B,EAASC,EAAiBA,G,kBACxD56B,G,8CAtWX+3B,EAAA,GC/DAx7C,EAAAoE,EAAAgF,EAAA,sBAAA0iB,IAAA9rB,EAAAoE,EAAAgF,EAAA,sBAAAmyC,M","file":"js/app.c93a9780.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-29cd224d\":\"e79ec39a\",\"chunk-62d9172b\":\"b86eaa3e\",\"chunk-1ded731d\":\"7340d5fa\",\"chunk-36408285\":\"3b58c35d\",\"chunk-8f2e765c\":\"cbf09327\",\"chunk-921c0406\":\"9bd86048\",\"chunk-8a9548fc\":\"dd409f94\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-29cd224d\":1,\"chunk-62d9172b\":1,\"chunk-1ded731d\":1,\"chunk-36408285\":1,\"chunk-8f2e765c\":1,\"chunk-921c0406\":1,\"chunk-8a9548fc\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-29cd224d\":\"2ac1ef8b\",\"chunk-62d9172b\":\"18a89535\",\"chunk-1ded731d\":\"5f0bf2a0\",\"chunk-36408285\":\"8a9a94e8\",\"chunk-8f2e765c\":\"0b511f04\",\"chunk-921c0406\":\"53206fce\",\"chunk-8a9548fc\":\"421c2961\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import Vue from 'vue';\nimport { BigNumber } from 'ethers/utils';\nimport { BalanceUtils } from '@/utils/balance-utils';\nimport split from 'lodash/split';\nimport capitalize from 'lodash/capitalize';\n\nexport default class Filters {\n  static truncate(value: string, width: number = 12) {\n    const separator = '...';\n    if (value.length <= width) {\n      return value;\n    } else {\n      const substWidth = Math.floor(width / 2);\n      return (\n        value.substr(0, substWidth) +\n        separator +\n        value.substr(value.length - substWidth)\n      );\n    }\n  }\n\n  static decimals(value: string, decimals: number = 3) {\n    return parseFloat(value).toFixed(decimals);\n  }\n\n  static upper(value: string) {\n    if (!value) {\n      return '';\n    }\n    return value.toLocaleUpperCase();\n  }\n\n  static displayFormat(amount: BigNumber, decimals: number): string {\n    const units = BalanceUtils.toUnits(amount, decimals);\n    const deposit = parseFloat(units);\n    if (deposit === 0) {\n      return '0.0';\n    } else if (deposit < 0.00001) {\n      return '<0.00001';\n    } else {\n      const splitted = split(units, '.');\n      if (splitted[1] && splitted[1].length > 5) {\n        return units.substr(0, units.indexOf('.') + 6);\n      } else {\n        return units;\n      }\n    }\n  }\n\n  static capitalizeFirst(value: string): string {\n    return capitalize(value);\n  }\n}\n\nVue.filter('truncate', Filters.truncate);\nVue.filter('decimals', Filters.decimals);\nVue.filter('upper', Filters.upper);\nVue.filter('displayFormat', Filters.displayFormat);\nVue.filter('capitalizeFirst', Filters.capitalizeFirst);\n","import { Component, Vue } from 'vue-property-decorator';\nimport { RouteNames } from '@/route-names';\n\n@Component\nexport default class NavigationMixin extends Vue {\n  navigateToSelectHub(token: string) {\n    this.$router.push({\n      name: RouteNames.SELECT_HUB,\n      params: {\n        token: token\n      }\n    });\n  }\n\n  navigateToHome() {\n    this.$router.push({\n      name: RouteNames.HOME\n    });\n  }\n\n  navigateToOpenChannel(token: string, partner: string) {\n    this.$router.push({\n      name: RouteNames.OPEN_CHANNEL,\n      params: {\n        token: token,\n        partner: partner\n      }\n    });\n  }\n\n  navigateToSelectPaymentTarget(token: string) {\n    this.$router.push({\n      name: RouteNames.PAYMENT,\n      params: { token: token }\n    });\n  }\n\n  navigateToTokenSelect() {\n    this.$router.push({\n      name: RouteNames.SELECT_TOKEN\n    });\n  }\n\n  onBackClicked() {\n    switch (this.$route.name) {\n      case RouteNames.PAYMENT:\n      case RouteNames.CHANNELS:\n      case RouteNames.SELECT_TOKEN:\n        this.navigateToHome();\n        break;\n      case RouteNames.SELECT_HUB:\n        this.navigateToTokenSelect();\n        break;\n      case RouteNames.OPEN_CHANNEL:\n        this.navigateToSelectHub(this.$route.params.token);\n        break;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ActionButton.vue?vue&type=style&index=0&id=7666ae40&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ActionButton.vue?vue&type=style&index=0&id=7666ae40&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/done.24f4e34a.svg\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=style&index=0&id=1970fd66&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=style&index=0&id=1970fd66&lang=scss&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=style&index=0&id=1fb34092&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=style&index=0&id=1fb34092&scoped=true&lang=scss&\"","var map = {\n\t\"./en.json\": \"edd4\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"49f8\";","export enum RouteNames {\n  PAYMENT = 'send-transaction',\n  SELECT_TOKEN = 'select-token',\n  SELECT_HUB = 'select-hub',\n  HOME = 'home',\n  CHANNELS = 'channels',\n  OPEN_CHANNEL = 'open-channel'\n}\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=72ad4681&lang=scss&scoped=true&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=72ad4681&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/back_arrow.268247fb.svg\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=style&index=0&id=59800fee&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=style&index=0&id=59800fee&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{staticClass:\"action-button\",attrs:{\"align-center\":\"\",\"justify-center\":\"\"}},[_c('v-flex',{staticClass:\"text-center\",attrs:{\"xs10\":\"\"}},[_c('v-btn',{staticClass:\"text-capitalize action-button__button\",attrs:{\"disabled\":!_vm.enabled,\"depressed\":\"\",\"large\":\"\"},on:{\"click\":function($event){return _vm.click()}}},[_vm._v(\"\\n      \"+_vm._s(_vm.text)+\"\\n    \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Emit, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class ActionButton extends Vue {\n  @Prop({ required: true, type: Boolean })\n  enabled!: boolean;\n\n  @Prop({ required: true })\n  text!: string;\n\n  @Emit()\n  click() {}\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ActionButton.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ActionButton.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ActionButton.vue?vue&type=template&id=7666ae40&scoped=true&\"\nimport script from \"./ActionButton.vue?vue&type=script&lang=ts&\"\nexport * from \"./ActionButton.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ActionButton.vue?vue&type=style&index=0&id=7666ae40&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7666ae40\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VFlex,VLayout})\n","import { Component, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class BlockieMixin extends Vue {\n  $blockie(address: string) {\n    return this.$identicon.getIdenticon(address);\n  }\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=style&index=0&id=013b36dc&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=style&index=0&id=013b36dc&scoped=true&lang=scss&\"","import { BigNumberish, Network } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\n\nexport interface Token {\n  readonly balance: BigNumberish;\n  readonly decimals: number;\n  readonly units: string;\n  readonly address: string;\n  readonly symbol?: string;\n  readonly name?: string;\n}\n\nexport interface AccTokenModel {\n  name: string;\n  symbol: string;\n  address: string;\n  opening: number;\n  open: number;\n  closing: number;\n  closed: number;\n  settling: number;\n  settled: number;\n\n  [index: string]: number | string;\n}\n\nexport interface TokenModel extends AccTokenModel {\n  readonly name: string;\n  readonly symbol: string;\n  readonly address: string;\n  readonly opening: number;\n  readonly open: number;\n  readonly closing: number;\n  readonly closed: number;\n  readonly settling: number;\n  readonly settled: number;\n}\n\nexport interface LeaveNetworkResult {\n  readonly closed: number;\n  readonly failed: number;\n}\n\nexport interface Progress {\n  readonly current: number;\n  readonly total: number;\n}\n\nexport interface StepDescription {\n  readonly label: string;\n  readonly title: string;\n  readonly description: string;\n}\n\nexport const emptyDescription = (): StepDescription => ({\n  label: '',\n  title: '',\n  description: ''\n});\n\nexport const emptyTokenModel = (): AccTokenModel => ({\n  name: '',\n  symbol: '',\n  address: '',\n  opening: 0,\n  open: 0,\n  closing: 0,\n  closed: 0,\n  settling: 0,\n  settled: 0\n});\n\n/**\n * A placeholder token used on the views while awaiting for the actual\n * token information to load.\n */\nexport const TokenPlaceholder: Token = {\n  balance: Zero,\n  decimals: 18,\n  units: '0.0',\n  address: ''\n};\n\nexport const PlaceHolderNetwork: Network = {\n  name: '',\n  chainId: -1\n};\n\nexport enum DeniedReason {\n  UNDEFINED,\n  NO_ACCOUNT,\n  UNSUPPORTED_NETWORK,\n  INITIALIZATION_FAILED\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=style&index=0&id=6b8163f4&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=style&index=0&id=6b8163f4&scoped=true&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stepper.vue?vue&type=style&index=0&id=30108802&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stepper.vue?vue&type=style&index=0&id=30108802&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/copy_icon.80d12304.svg\";","module.exports = __webpack_public_path__ + \"img/logo.5c4b022d.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.display)?_c('div',{staticClass:\"stepper\"},[_c('div',{staticClass:\"stepper__card\"},[_c('div',{staticClass:\"stepper__card__steps\"},[_vm._l((_vm.steps),function(step,index){return _c('div',{key:index,staticClass:\"stepper__card__steps__step\",class:{\n          'stepper__card__steps__step--active': _vm.current === index && !_vm.done\n        }},[_c('span',{staticClass:\"stepper__card__steps__step__label\"},[_vm._v(\"\\n          \"+_vm._s(step.label)+\"\\n        \")])])}),_c('div',{staticClass:\"stepper__card__steps__step\",class:{ 'stepper__card__steps__step--active': _vm.done }},[_vm._v(\"\\n        \"+_vm._s(_vm.doneStep.label)+\"\\n      \")])],2),_c('div',{staticClass:\"stepper__card__content\"},[_c('div',{staticClass:\"stepper__card__content__title\"},[(_vm.done)?_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.doneStep.title)+\"\\n        \")]):_c('span',[_vm._v(_vm._s(_vm.steps[_vm.current].title))])]),(_vm.done)?_c('div',[_c('v-img',{staticClass:\"stepper__card__content--done\",attrs:{\"src\":require('../assets/done.svg')}})],1):_c('v-progress-circular',{staticClass:\"stepper__card__content--progress\",attrs:{\"size\":110,\"width\":7,\"indeterminate\":\"\"}}),_c('p',{staticClass:\"stepper__card__content__description\"},[(_vm.done)?_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.doneStep.description)+\"\\n        \")]):_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.steps[_vm.current].description)+\"\\n        \")])])],1)])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { StepDescription } from '@/model/types';\n\n@Component({})\nexport default class Stepper extends Vue {\n  @Prop({ required: true })\n  display!: boolean;\n\n  @Prop({ required: false, default: 0 })\n  current!: number;\n\n  @Prop({ required: true })\n  steps!: StepDescription[];\n\n  @Prop({ required: true })\n  doneStep!: StepDescription;\n\n  @Prop({})\n  done?: boolean;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stepper.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stepper.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Stepper.vue?vue&type=template&id=30108802&scoped=true&\"\nimport script from \"./Stepper.vue?vue&type=script&lang=ts&\"\nexport * from \"./Stepper.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Stepper.vue?vue&type=style&index=0&id=30108802&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"30108802\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\ninstallComponents(component, {VImg,VProgressCircular})\n","import { BigNumber } from 'ethers/utils';\nimport { utils } from 'ethers';\nimport { Token } from '@/model/types';\n\nexport class BalanceUtils {\n  static toEth(wei: BigNumber): string {\n    return utils.formatEther(wei);\n  }\n\n  static toUnits(wei: BigNumber, decimals: number): string {\n    return utils.formatUnits(wei, decimals);\n  }\n\n  static decimalsOverflow(depositTokens: string, decimals: number): boolean {\n    let decimalPart: string;\n    if (depositTokens.indexOf('.') > 0) {\n      decimalPart = depositTokens.split('.')[1];\n    } else {\n      decimalPart = '';\n    }\n    return decimalPart.length > decimals;\n  }\n\n  static parse(deposit: string, decimals: number) {\n    return utils.parseUnits(deposit, decimals);\n  }\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=style&index=0&id=65cd354f&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=style&index=0&id=65cd354f&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{attrs:{\"dark\":\"\"}},[(_vm.inaccessible)?_c('splash-screen',{on:{\"connect\":function($event){return _vm.connect()}}}):_c('div',{attrs:{\"id\":\"application-wrapper\"}},[_c('div',{attrs:{\"id\":\"application-content\"}},[_c('app-header'),_c('v-content',[_c('v-container',{staticClass:\"application__container\",attrs:{\"fluid\":\"\",\"fill-height\":\"\"}},[_c('router-view')],1)],1)],1)]),_c('div',{staticClass:\"policy\"},[_c('a',{attrs:{\"href\":\"https://raiden.network/privacy.html\",\"target\":\"_blank\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.$t('application.privacy-policy'))+\"\\n    \")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"splash-screen\",attrs:{\"fluid\":\"\",\"fill-height\":\"\"}},[_c('v-layout',{attrs:{\"align-center\":\"\",\"justify-center\":\"\"}},[_c('v-flex',{attrs:{\"xs8\":\"\",\"md6\":\"\",\"lg4\":\"\"}},[_c('div',{staticClass:\"splash-screen__wrapper display-3\"},[_c('div',{staticClass:\"splash-screen__logo-container\"},[_c('v-img',{staticClass:\"splash-screen__logo\",attrs:{\"src\":require('../assets/logo.svg'),\"min-width\":\"50px\",\"aspect-ratio\":\"1\",\"contain\":\"\"}})],1),_c('div',{staticClass:\"splash-screen__app-name\"},[_c('div',[_vm._v(\"\\n            \"+_vm._s(_vm.name)+\"\\n          \")])])]),_c('div',{staticClass:\"font-weight-light text-center splash-screen__disclaimer\"},[_vm._v(\"\\n        \"+_vm._s(_vm.$t('splash-screen.disclaimer'))+\"\\n      \")]),_c('div',{staticClass:\"font-weight-light text-center splash-screen__matrix_sign\"},[_vm._v(\"\\n        \"+_vm._s(_vm.$t('splash-screen.matrix-sign'))+\"\\n      \")]),_c('div',{staticClass:\"splash-screen__button\"},[(_vm.injectedProvider)?_c('action-button',{attrs:{\"text\":_vm.$t('splash-screen.connect-button'),\"enabled\":\"\"},on:{\"click\":function($event){return _vm.connect()}}}):_c('span',{staticClass:\"splash-screen__no-provider\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('splash-screen.no-provider'))+\"\\n        \")])],1),_c('div',{staticClass:\"splash-screen__message\"},[(_vm.accessDenied)?_c('no-access-message',{attrs:{\"reason\":_vm.accessDenied}}):_vm._e()],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-alert',{staticClass:\"no-access-message\",attrs:{\"value\":true,\"color\":\"error\",\"icon\":\"warning\"}},[_c('div',{staticClass:\"font-weight-light no-access-message__message\"},[(_vm.networkUnsupported)?_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.unsupported-network'))+\"\\n    \")]):(_vm.initializationFailed)?_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.sdk-initialization-failure'))+\"\\n    \")]):_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.generic-error'))+\"\\n    \")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { DeniedReason } from '@/model/types';\n\n@Component({})\nexport default class NoAccessMessage extends Vue {\n  @Prop({ required: true })\n  reason!: DeniedReason;\n\n  get networkUnsupported(): boolean {\n    return this.reason === DeniedReason.UNSUPPORTED_NETWORK;\n  }\n\n  get initializationFailed(): boolean {\n    return this.reason === DeniedReason.INITIALIZATION_FAILED;\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NoAccessMessage.vue?vue&type=template&id=6b8163f4&scoped=true&\"\nimport script from \"./NoAccessMessage.vue?vue&type=script&lang=ts&\"\nexport * from \"./NoAccessMessage.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./NoAccessMessage.vue?vue&type=style&index=0&id=6b8163f4&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b8163f4\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\ninstallComponents(component, {VAlert})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Emit, Vue } from 'vue-property-decorator';\nimport { Web3Provider } from '@/services/web3-provider';\nimport { DeniedReason } from '@/model/types';\nimport { mapState } from 'vuex';\nimport NoAccessMessage from '@/components/NoAccessMessage.vue';\nimport ActionButton from '@/components/ActionButton.vue';\n\n@Component({\n  components: {\n    ActionButton,\n    NoAccessMessage\n  },\n  computed: mapState(['accessDenied'])\n})\nexport default class Loading extends Vue {\n  accessDenied!: DeniedReason;\n  name: string = 'Raiden dApp';\n\n  // noinspection JSMethodCanBeStatic\n  get injectedProvider(): boolean {\n    return Web3Provider.injectedWeb3Available();\n  }\n\n  @Emit()\n  connect() {}\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SplashScreen.vue?vue&type=template&id=65cd354f&scoped=true&\"\nimport script from \"./SplashScreen.vue?vue&type=script&lang=ts&\"\nexport * from \"./SplashScreen.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./SplashScreen.vue?vue&type=style&index=0&id=65cd354f&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"65cd354f\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer,VFlex,VImg,VLayout})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.loading && _vm.defaultAccount)?_c('v-layout',{staticClass:\"app-header\",attrs:{\"column\":\"\"}},[_c('v-layout',{staticClass:\"app-header__top\",attrs:{\"justify-center\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('div',{staticClass:\"app-header__top__content\"},[_c('div',{staticClass:\"app-header__top__content__back\"},[(_vm.canGoBack)?_c('v-btn',{attrs:{\"height\":\"40px\",\"width\":\"40px\",\"text\":\"\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.onBackClicked()}}},[_c('v-img',{attrs:{\"src\":require('../assets/back_arrow.svg'),\"max-width\":\"34px\"}})],1):_vm._e()],1),_c('v-spacer'),_c('v-layout',{attrs:{\"column\":\"\",\"align-center\":\"\",\"justify-center\":\"\"}},[_c('div',{staticClass:\"app-header__top__content__title\"},[_vm._v(\"\\n            \"+_vm._s(_vm.$route.meta.title)+\"\\n          \")]),_c('div',{staticClass:\"app-header__top__content__network\"},[_vm._v(\"\\n            \"+_vm._s(_vm.network)+\"\\n          \")])]),_c('v-spacer'),_c('div',[_c('v-img',{staticClass:\"app-header__top__content__blockie\",attrs:{\"src\":_vm.$blockie(_vm.defaultAccount),\"height\":\"36\",\"width\":\"36\",\"contain\":\"\",\"aspect-ratio\":\"1\"}})],1)],1)])],1),_c('v-layout',{staticClass:\"app-header__bottom\",attrs:{\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('div',{staticClass:\"app-header__bottom__address text-left\"},[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('span',_vm._g({},on),[_vm._v(\"\\n              \"+_vm._s(_vm._f(\"truncate\")(_vm.defaultAccount,8))+\"\\n            \")])]}}],null,false,3329657142)},[_c('span',[_vm._v(_vm._s(_vm.defaultAccount))])]),_c('v-tooltip',{attrs:{\"bottom\":\"\",\"dark\":\"\",\"activator\":\"#copyBtn\"},model:{value:(_vm.copied),callback:function ($$v) {_vm.copied=$$v},expression:\"copied\"}},[_c('span',[_vm._v(_vm._s(_vm.$t('app-header.copy-success')))])]),_c('v-btn',{attrs:{\"id\":\"copyBtn\",\"text\":\"\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.copy()}}},[_c('v-img',{staticClass:\"app-header__bottom__address__copy\",attrs:{\"src\":require('../assets/copy_icon.svg'),\"contain\":\"\"}})],1)],1)]),_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('div',{staticClass:\"app-header__bottom__balance text-right\"},[_vm._v(\"\\n        \"+_vm._s(_vm._f(\"decimals\")(_vm.accountBalance))+\"\\n        \"),_c('span',{staticClass:\"app-header__bottom__balance__currency\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('app-header.currency'))+\"\\n        \")])])])],1),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.defaultAccount),expression:\"defaultAccount\"}],ref:\"copy\",staticClass:\"app-header__copy-area\",domProps:{\"value\":(_vm.defaultAccount)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.defaultAccount=$event.target.value}}})],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Mixins } from 'vue-property-decorator';\nimport { mapGetters, mapState } from 'vuex';\nimport BlockieMixin from '@/mixins/blockie-mixin';\nimport { RouteNames } from '@/route-names';\nimport NavigationMixin from '@/mixins/navigation-mixin';\n\n@Component({\n  computed: {\n    ...mapState(['loading', 'defaultAccount', 'accountBalance']),\n    ...mapGetters(['network'])\n  }\n})\nexport default class AppHeader extends Mixins(BlockieMixin, NavigationMixin) {\n  defaultAccount!: string;\n  loading!: boolean;\n  accountBalance!: string;\n  network!: string;\n\n  copied: boolean = false;\n  private timeout: number = 0;\n\n  get canGoBack(): boolean {\n    return this.$route.name !== RouteNames.HOME;\n  }\n\n  copy() {\n    const copyArea = this.$refs.copy as HTMLTextAreaElement;\n    copyArea.focus();\n    copyArea.select();\n    this.copied = document.execCommand('copy');\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    this.timeout = (setTimeout(() => {\n      this.copied = false;\n    }, 2000) as unknown) as number;\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AppHeader.vue?vue&type=template&id=1fb34092&scoped=true&\"\nimport script from \"./AppHeader.vue?vue&type=script&lang=ts&\"\nexport * from \"./AppHeader.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./AppHeader.vue?vue&type=style&index=0&id=1fb34092&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1fb34092\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VBtn,VFlex,VImg,VLayout,VSpacer,VTooltip})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport SplashScreen from '@/components/SplashScreen.vue';\nimport AppHeader from '@/components/AppHeader.vue';\nimport { mapState } from 'vuex';\nimport { DeniedReason } from '@/model/types';\n\n@Component({\n  computed: mapState(['loading', 'accessDenied']),\n  components: { AppHeader, SplashScreen }\n})\nexport default class App extends Vue {\n  name: string;\n  initialized: boolean = false;\n  accessDenied!: DeniedReason;\n  loading!: boolean;\n\n  constructor() {\n    super();\n    this.name = 'Raiden dApp';\n  }\n\n  get inaccessible() {\n    return (\n      !this.initialized ||\n      this.loading ||\n      this.accessDenied !== DeniedReason.UNDEFINED\n    );\n  }\n\n  async connect() {\n    this.initialized = false;\n    this.$store.commit('reset');\n    await this.$raiden.connect();\n    await this.$raiden.fetchTokens();\n    this.initialized = true;\n  }\n\n  destroyed() {\n    this.$raiden.disconnect();\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=72ad4681&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=72ad4681&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"72ad4681\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VContent } from 'vuetify/lib/components/VContent';\ninstallComponents(component, {VApp,VContainer,VContent})\n","/* istanbul ignore file */\nimport Component from 'vue-class-component';\n\n// Register the router hooks with their names\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteLeave',\n  'beforeRouteUpdate' // for vue-router 2.2+\n]);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('app-core')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tokens')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"column\":\"\",\"justify-space-between\":\"\",\"fill-height\":\"\"}},[_c('list-header',{staticClass:\"connected-tokens__header\",attrs:{\"header\":_vm.$t('tokens.connected.header')}}),_c('v-layout',{attrs:{\"justify-center\":\"\",\"fill-height\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-list',{staticClass:\"connected-tokens__tokens\",attrs:{\"expand\":\"\"}},_vm._l((_vm.tokens),function(token,index){return _c('v-list-group',{key:token.token,staticClass:\"connected-tokens__tokens__token\",attrs:{\"no-action\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(){return [_c('v-list-item',{attrs:{\"id\":(\"token-\" + index)}},[_c('v-list-item-avatar',{staticClass:\"list-blockie\"},[_c('img',{attrs:{\"src\":_vm.$blockie(token.address),\"alt\":_vm.$t('tokens.connected.token.blockie-alt')}})]),_c('v-list-item-content',[_c('v-list-item-title',{staticClass:\"connected-tokens__tokens__token__info\"},[_vm._v(\"\\n                  \"+_vm._s(_vm.$t('tokens.connected.token.token-info', {\n                      symbol: token.symbol,\n                      name: token.name\n                    }))+\"\\n                \")]),_c('v-list-item-subtitle',{staticClass:\"connected-tokens__tokens__token__address\"},[_vm._v(\"\\n                  \"+_vm._s(token.address)+\"\\n                \")])],1)],1)]},proxy:true}],null,true)},[_c('div',{staticClass:\"connected-tokens__tokens__token__expanded\",attrs:{\"id\":(\"expanded-area-\" + index)}},[_c('v-layout',{attrs:{\"justify-center\":\"\"}},[_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button\",attrs:{\"id\":(\"pay-\" + index),\"to\":(\"/payment/\" + (token.address))}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.pay'))+\"\\n              \")]),_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button leave\",attrs:{\"id\":(\"leave-\" + index)},on:{\"click\":function($event){return _vm.leaveNetwork(token)}}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.disconnect'))+\"\\n              \")]),_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button\",attrs:{\"to\":(\"/channels/\" + (token.address))}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.view-channels'))+\"\\n              \")])],1)],1)])}),1)],1)],1),_c('action-button',{staticClass:\"connected-tokens__button\",attrs:{\"text\":_vm.$t('tokens.connect-new'),\"enabled\":\"\"},on:{\"click\":function($event){return _vm.navigateToTokenSelect()}}}),_c('confirmation-dialog',{attrs:{\"display\":_vm.leaveModalVisible},on:{\"confirm\":function($event){return _vm.leaveConfirmed()},\"cancel\":function($event){return _vm.leaveCancelled()}},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_vm._v(\"\\n      \"+_vm._s(_vm.$t('tokens.disconnect-dialog.header'))+\"\\n    \")]},proxy:true}])},[(_vm.selectedToken)?_c('i18n',{attrs:{\"path\":\"tokens.disconnect-dialog.confirmation-message\",\"tag\":\"div\"}},[_c('b',{attrs:{\"place\":\"symbol\"}},[_vm._v(_vm._s(_vm.selectedToken.symbol))]),_c('span',{staticClass:\"connected-tokens__tokens__token__leave__address\",attrs:{\"place\":\"address\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.selectedToken.address)+\"\\n      \")])]):_vm._e()],1),_c('stepper',{attrs:{\"display\":_vm.loading,\"steps\":_vm.steps,\"doneStep\":_vm.doneStep}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"justify-center\":\"\"}},[_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"625\"},model:{value:(_vm.display),callback:function ($$v) {_vm.display=$$v},expression:\"display\"}},[_c('v-card',[_c('v-card-title',[_c('v-flex',[_c('h1',{staticClass:\"confirmation-dialog__header\"},[_vm._t(\"header\")],2)])],1),_c('v-card-text',[_c('p',{staticClass:\"confirmation-dialog__message\"},[_vm._t(\"default\")],2)]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{staticClass:\"confirmation-dialog__button\",attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.cancel()}}},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('confirmation-dialog.buttons.cancel'))+\"\\n        \")]),_c('v-btn',{staticClass:\"confirmation-dialog__button confirmation-dialog__button__primary\",attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.confirm()}}},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('confirmation-dialog.buttons.confirm'))+\"\\n        \")]),_c('v-spacer')],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class ConfirmationDialog extends Vue {\n  @Prop({ required: true })\n  display!: boolean;\n\n  confirm() {\n    this.$emit('confirm');\n  }\n\n  cancel() {\n    this.$emit('cancel');\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ConfirmationDialog.vue?vue&type=template&id=013b36dc&scoped=true&\"\nimport script from \"./ConfirmationDialog.vue?vue&type=script&lang=ts&\"\nexport * from \"./ConfirmationDialog.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ConfirmationDialog.vue?vue&type=style&index=0&id=013b36dc&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"013b36dc\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VDialog,VFlex,VLayout,VSpacer})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Mixins } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport ConfirmationDialog from '@/components/ConfirmationDialog.vue';\nimport { emptyDescription, StepDescription, TokenModel } from '@/model/types';\nimport Stepper from '@/components/Stepper.vue';\nimport BlockieMixin from '@/mixins/blockie-mixin';\nimport ListHeader from '@/components/ListHeader.vue';\nimport ActionButton from '@/components/ActionButton.vue';\nimport NavigationMixin from '@/mixins/navigation-mixin';\n\n@Component({\n  components: { ListHeader, Stepper, ConfirmationDialog, ActionButton },\n  computed: mapGetters(['tokens'])\n})\nexport default class Tokens extends Mixins(BlockieMixin, NavigationMixin) {\n  tokens!: TokenModel[];\n  selectedToken: TokenModel | null = null;\n  leaveModalVisible: boolean = false;\n\n  loading: boolean = false;\n  steps: StepDescription[] = [];\n  doneStep: StepDescription = emptyDescription();\n\n  created() {\n    this.steps = [(this.$t('tokens.leave-progress') as any) as StepDescription];\n    this.doneStep = (this.$t('tokens.leave-done') as any) as StepDescription;\n  }\n\n  private dismissModal() {\n    this.leaveModalVisible = false;\n    this.selectedToken = null;\n  }\n\n  leaveNetwork(token: TokenModel) {\n    this.selectedToken = token;\n    this.leaveModalVisible = true;\n  }\n\n  async leaveConfirmed() {\n    const address = this.selectedToken!.address;\n    this.dismissModal();\n    this.loading = true;\n    await this.$raiden.leaveNetwork(address);\n    this.loading = false;\n  }\n\n  leaveCancelled() {\n    this.dismissModal();\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Tokens.vue?vue&type=template&id=1970fd66&scoped=true&\"\nimport script from \"./Tokens.vue?vue&type=script&lang=ts&\"\nexport * from \"./Tokens.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Tokens.vue?vue&type=style&index=0&id=1970fd66&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1970fd66\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListGroup } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemAvatar } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemSubtitle } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\ninstallComponents(component, {VBtn,VFlex,VLayout,VList,VListGroup,VListItem,VListItemAvatar,VListItemContent,VListItemSubtitle,VListItemTitle})\n","\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport Tokens from '@/components/Tokens.vue';\n\n@Component({\n  components: { Tokens }\n})\nexport default class AppCore extends Vue {}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppCore.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppCore.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AppCore.vue?vue&type=template&id=78c5b79c&\"\nimport script from \"./AppCore.vue?vue&type=script&lang=ts&\"\nexport * from \"./AppCore.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport AppCore from '@/components/AppCore.vue';\n\n@Component({\n  components: {\n    AppCore\n  }\n})\nexport default class Home extends Vue {}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=5122a23d&\"\nimport script from \"./Home.vue?vue&type=script&lang=ts&\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Vuex, { StoreOptions } from 'vuex';\nimport { RootState, Tokens } from '@/types';\nimport { ChannelState, RaidenChannel, RaidenChannels } from 'raiden-ts';\nimport {\n  AccTokenModel,\n  DeniedReason,\n  emptyTokenModel,\n  PlaceHolderNetwork,\n  Token,\n  TokenModel\n} from '@/model/types';\nimport map from 'lodash/map';\nimport flatMap from 'lodash/flatMap';\nimport clone from 'lodash/clone';\nimport reduce from 'lodash/reduce';\nimport orderBy from 'lodash/orderBy';\nimport { Network } from 'ethers/utils';\n\nVue.use(Vuex);\n\nconst _defaultState: RootState = {\n  loading: true,\n  defaultAccount: '',\n  accountBalance: '0.0',\n  providerDetected: true,\n  accessDenied: DeniedReason.UNDEFINED,\n  channels: {},\n  tokens: {},\n  network: PlaceHolderNetwork\n};\n\nexport function defaultState(): RootState {\n  return clone(_defaultState);\n}\n\nconst store: StoreOptions<RootState> = {\n  state: defaultState(),\n  mutations: {\n    noProvider(state: RootState) {\n      state.providerDetected = false;\n    },\n    accessDenied(state: RootState, reason: DeniedReason) {\n      state.accessDenied = reason;\n    },\n    account(state: RootState, account: string) {\n      state.defaultAccount = account;\n    },\n    loadComplete(state: RootState) {\n      state.loading = false;\n    },\n    balance(state: RootState, balance: string) {\n      state.accountBalance = balance;\n    },\n    updateChannels(state: RootState, channels: RaidenChannels) {\n      state.channels = channels;\n    },\n    updateTokens(state: RootState, tokens: Tokens) {\n      state.tokens = Object.assign({}, tokens);\n    },\n    network(state: RootState, network: Network) {\n      state.network = network;\n    },\n    reset(state: RootState) {\n      Object.assign(state, defaultState());\n    }\n  },\n  actions: {},\n  getters: {\n    tokens: function(state: RootState): TokenModel[] {\n      const reducer = (\n        acc: AccTokenModel,\n        channel: RaidenChannel\n      ): AccTokenModel => {\n        acc.address = channel.token;\n        (acc[channel.state] as number) += 1;\n        return acc;\n      };\n\n      return map(flatMap(state.channels), tokenChannels => {\n        const model = reduce(tokenChannels, reducer, emptyTokenModel());\n        const tokenInfo = state.tokens[model.address];\n        if (tokenInfo) {\n          model.name = tokenInfo.name || '';\n          model.symbol = tokenInfo.symbol || '';\n        }\n\n        return model;\n      });\n    },\n    allTokens: (state: RootState): Token[] => {\n      return reduce(\n        state.tokens,\n        (result: Token[], value: Token, key: string) => {\n          const model: Token = {\n            address: key,\n            balance: value.balance,\n            decimals: value.decimals,\n            units: value.units,\n            symbol: value.symbol,\n            name: value.name\n          };\n          result.push(model);\n          return result;\n        },\n        []\n      );\n    },\n    channels: (state: RootState) => (tokenAddress: string) => {\n      let channels: RaidenChannel[] = [];\n      const tokenChannels = state.channels[tokenAddress];\n      if (tokenChannels) {\n        channels = flatMap(tokenChannels);\n      }\n      return channels;\n    },\n    token: (state: RootState) => (tokenAddress: string) => {\n      if (tokenAddress in state.tokens) {\n        return state.tokens[tokenAddress];\n      } else {\n        return null;\n      }\n    },\n    network: (state: RootState) => {\n      return state.network.name || `Chain ${state.network.chainId}`;\n    },\n    channelWithBiggestCapacity: (_, getters) => (tokenAddress: string) => {\n      const channels: RaidenChannel[] = getters.channels(tokenAddress);\n      const openChannels = channels.filter(\n        value => value.state === ChannelState.open\n      );\n      return orderBy(openChannels, ['capacity'], ['desc'])[0];\n    }\n  }\n};\n\nexport default new Vuex.Store(store);\n","/* istanbul ignore file */\nimport Vue from 'vue';\nimport Router, { Route } from 'vue-router';\nimport { Dictionary } from 'vue-router/types/router';\n\nimport Home from './views/Home.vue';\nimport { RouteNames } from '@/route-names';\nimport store from './store';\nimport { Tokens } from './types';\n\nVue.use(Router);\n\n/**\n * Checks whether a token parameter is present and whether\n * requested token network address exists in store.\n */\nexport const checkTokenNetworkRoute = (\n  { token }: Dictionary<string>,\n  next: (to?: string | void) => void,\n  tokens: Tokens\n): void => {\n  if (!token) return next();\n\n  return Object.keys(tokens)\n    .map(key => tokens[key].address === token)\n    .includes(true)\n    ? next()\n    : next('/');\n};\n\n/**\n * Decorator that wraps vue router's `NavigationGuard` and\n * the current list of tokens in the store. This makes testing\n * `checkTokenNetworkRoute` very straight forward.\n */\nexport const tokenNetworkGuard = (\n  { params }: Route,\n  _: Route,\n  next: (to?: string | void) => void\n) => checkTokenNetworkRoute(params, next, store.getters.allTokens);\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: RouteNames.HOME,\n      meta: {\n        title: 'Raiden dApp'\n      },\n      component: Home\n    },\n    {\n      path: '*',\n      redirect: '/'\n    },\n    {\n      path: '/payment/:token',\n      name: RouteNames.PAYMENT,\n      meta: {\n        title: 'Send'\n      },\n      component: () => import('./views/Payment.vue'),\n      beforeEnter: tokenNetworkGuard\n    },\n    {\n      path: '/connect',\n      name: RouteNames.SELECT_TOKEN,\n      meta: {\n        title: 'Select token'\n      },\n      component: () => import('./views/SelectToken.vue')\n    },\n    {\n      path: '/connect/:token',\n      name: RouteNames.SELECT_HUB,\n      meta: {\n        title: 'Select hub'\n      },\n      component: () => import('./views/SelectHub.vue'),\n      beforeEnter: tokenNetworkGuard\n    },\n    {\n      path: '/connect/:token/:partner',\n      name: RouteNames.OPEN_CHANNEL,\n      meta: {\n        title: 'Open channel'\n      },\n      component: () => import('./views/OpenChannel.vue'),\n      beforeEnter: tokenNetworkGuard\n    },\n    {\n      path: '/channels/:token',\n      name: RouteNames.CHANNELS,\n      meta: {\n        title: 'Channels'\n      },\n      component: () => import('./views/Channels.vue'),\n      beforeEnter: tokenNetworkGuard\n    }\n  ]\n});\n\nexport default router;\n","/* istanbul ignore file */\nimport Component from 'vue-class-component';\n\n// Register the router hooks with their names\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteLeave',\n  'beforeRouteUpdate'\n]);\n","import _Vue from 'vue';\nimport RaidenService from '@/services/raiden-service';\nimport store from '@/store';\n\nexport function RaidenPlugin(Vue: typeof _Vue, options?: any): void {\n  Vue.prototype.$raiden = new RaidenService(store);\n}\n\ndeclare module 'vue/types/vue' {\n  // 3. Declare augmentation for Vue\n  interface Vue {\n    $raiden: RaidenService;\n  }\n}\n","import makeBlockie from 'ethereum-blockies-base64';\n\nexport class IdenticonCache {\n  private cache: { [id: string]: string } = {};\n\n  constructor() {}\n\n  public getIdenticon(address: string): string {\n    const cached = this.cache[address];\n\n    if (!cached) {\n      const generated = makeBlockie(address);\n      this.cache[address] = generated;\n      return generated;\n    } else {\n      return cached;\n    }\n  }\n}\n","import _Vue from 'vue';\nimport { IdenticonCache } from '@/services/identicon-cache';\n\nexport function IdenticonPlugin(Vue: typeof _Vue, options?: any): void {\n  Vue.prototype.$identicon = new IdenticonCache();\n}\n\ndeclare module 'vue/types/vue' {\n  // 3. Declare augmentation for Vue\n  interface Vue {\n    $identicon: IdenticonCache;\n  }\n}\n","/* istanbul ignore file */\nimport Vue from 'vue';\nimport VueI18n, { LocaleMessages } from 'vue-i18n';\n\nVue.use(VueI18n);\n\nfunction loadLocaleMessages(): LocaleMessages {\n  const locales = require.context(\n    './locales',\n    true,\n    /[A-Za-z0-9-_,\\s]+\\.json$/i\n  );\n  const messages: LocaleMessages = {};\n  locales.keys().forEach(key => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\n\nexport default new VueI18n({\n  locale: process.env.VUE_APP_I18N_LOCALE || 'en',\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || 'en',\n  messages: loadLocaleMessages()\n});\n","/* istanbul ignore file */\n\nimport Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({\n  icons: {\n    iconfont: 'mdi'\n  },\n  theme: {\n    dark: true,\n    themes: {\n      dark: {\n        primary: '#28A5C8',\n        secondary: '#0A6E87'\n      }\n    }\n  }\n});\n","/* istanbul ignore file */\nimport Vue from 'vue';\nimport App from './App.vue';\nimport '@/plugins/class-component.hooks';\nimport '@/filters';\nimport router from './router';\nimport store from './store';\nimport './registerServiceWorker';\nimport './class-component-hooks';\nimport { RaidenPlugin } from '@/plugins/raiden';\nimport { IdenticonPlugin } from '@/plugins/identicon-plugin';\nimport i18n from './i18n';\nimport vuetify from '@/plugins/vuetify';\n\nVue.config.productionTip = false;\n\nVue.use(RaidenPlugin);\nVue.use(IdenticonPlugin);\n\nnew Vue({\n  vuetify,\n  router,\n  store,\n\n  created() {\n    if (sessionStorage.redirect) {\n      const redirect = sessionStorage.redirect;\n      delete sessionStorage.redirect;\n      this.$router.push(redirect);\n    }\n  },\n\n  i18n,\n  render: h => h(App)\n}).$mount('#app');\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{staticClass:\"list-header\"},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('div',{staticClass:\"list-header__header\"},[_vm._v(_vm._s(_vm.header))]),_c('div',{staticClass:\"list-header__divider\"})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class ListHeader extends Vue {\n  @Prop({ required: true })\n  header!: string;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ListHeader.vue?vue&type=template&id=59800fee&scoped=true&\"\nimport script from \"./ListHeader.vue?vue&type=script&lang=ts&\"\nexport * from \"./ListHeader.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ListHeader.vue?vue&type=style&index=0&id=59800fee&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59800fee\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VFlex,VLayout})\n","export class ConfigProvider {\n  static async fetch(\n    url?: string\n  ): Promise<{ INFURA_ENDPOINT: string; PRIVATE_KEY: string } | undefined> {\n    if (url) return await (await fetch(url)).json();\n\n    return undefined;\n  }\n}\n","import { Raiden, RaidenChannel, RaidenSentTransfer } from 'raiden-ts';\nimport { Store } from 'vuex';\nimport { RootState } from '@/types';\nimport { Web3Provider } from '@/services/web3-provider';\nimport { BalanceUtils } from '@/utils/balance-utils';\nimport {\n  DeniedReason,\n  LeaveNetworkResult,\n  Progress,\n  Token\n} from '@/model/types';\nimport { BigNumber } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\nimport { filter, first } from 'rxjs/internal/operators';\nimport { ConfigProvider } from './config-provider';\n\nexport default class RaidenService {\n  private _raiden?: Raiden;\n  private store: Store<RootState>;\n\n  private static async createRaiden(\n    provider: any,\n    account: string | number = 0\n  ): Promise<Raiden> {\n    try {\n      return await Raiden.create(provider, account, window.localStorage);\n    } catch (e) {\n      throw new RaidenInitializationFailed(e);\n    }\n  }\n\n  private get raiden(): Raiden {\n    if (this._raiden === undefined) {\n      throw new Error('Raiden instance was not initialized');\n    } else {\n      return this._raiden;\n    }\n  }\n\n  private async updateTokenBalances() {\n    const cachedTokens = this.store.state.tokens;\n    for (const address in cachedTokens) {\n      if (!cachedTokens.hasOwnProperty(address)) {\n        continue;\n      }\n      const token = cachedTokens[address];\n      const balance = await this.raiden.getTokenBalance(address);\n      cachedTokens[address] = Object.assign({}, token, {\n        balance: balance,\n        units: BalanceUtils.toUnits(balance, token.decimals)\n      });\n    }\n\n    this.store.commit('updateTokens', cachedTokens);\n  }\n\n  constructor(store: Store<RootState>) {\n    this._raiden = undefined;\n    this.store = store;\n  }\n\n  async ensResolve(name: string): Promise<string> {\n    try {\n      return await this.raiden.resolveName(name);\n    } catch (e) {\n      throw new EnsResolveFailed(e);\n    }\n  }\n\n  async connect() {\n    try {\n      const raidenPackageConfigUrl = process.env.VUE_APP_RAIDEN_PACKAGE;\n      let config;\n      let provider;\n      let raiden;\n\n      if (raidenPackageConfigUrl) {\n        config = await ConfigProvider.fetch(raidenPackageConfigUrl);\n        provider = await Web3Provider.provider(config);\n      } else {\n        provider = await Web3Provider.provider();\n      }\n\n      if (!provider) {\n        this.store.commit('noProvider');\n      } else {\n        if (config) {\n          raiden = await RaidenService.createRaiden(\n            provider,\n            config.PRIVATE_KEY\n          );\n        } else {\n          raiden = await RaidenService.createRaiden(provider);\n        }\n\n        this._raiden = raiden;\n\n        this.store.commit('account', await this.getAccount());\n        this.store.commit('balance', await this.getBalance());\n\n        this.setupEventListeners(raiden);\n\n        raiden.channels$.subscribe(value => {\n          this.store.commit('updateChannels', value);\n        });\n\n        this.store.commit('network', raiden.network);\n      }\n    } catch (e) {\n      console.error(e);\n      let deniedReason: DeniedReason;\n      if (e.message && e.message.indexOf('No deploy info provided') > -1) {\n        deniedReason = DeniedReason.UNSUPPORTED_NETWORK;\n      } else if (e instanceof RaidenInitializationFailed) {\n        deniedReason = DeniedReason.INITIALIZATION_FAILED;\n      } else {\n        deniedReason = DeniedReason.NO_ACCOUNT;\n      }\n      this.store.commit('accessDenied', deniedReason);\n    }\n\n    this.store.commit('loadComplete');\n  }\n\n  private setupEventListeners(raiden: Raiden) {\n    raiden.events$\n      .pipe(filter(value => value.type === 'raidenShutdown'))\n      .subscribe(() => this.store.commit('reset'));\n\n    raiden.events$\n      .pipe(filter(value => value.type === 'newBlock'))\n      .subscribe(async () => await this.updateTokenBalances());\n  }\n\n  disconnect() {\n    this.raiden.stop();\n  }\n\n  async getAccount(): Promise<string> {\n    return this.raiden.address;\n  }\n\n  async getBalance(): Promise<string> {\n    const balance = await this.raiden.getBalance();\n    return BalanceUtils.toEth(balance);\n  }\n\n  async getToken(tokenAddress: string): Promise<Token | null> {\n    const raiden = this.raiden;\n    try {\n      const [balance, { decimals, symbol, name }] = await Promise.all([\n        raiden.getTokenBalance(tokenAddress),\n        raiden.getTokenInfo(tokenAddress)\n      ]);\n      return {\n        name: name,\n        symbol: symbol,\n        balance: balance,\n        decimals: decimals,\n        units: BalanceUtils.toUnits(balance, decimals),\n        address: tokenAddress\n      };\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  async openChannel(\n    token: string,\n    partner: string,\n    amount: BigNumber,\n    progress?: (progress: Progress) => void\n  ): Promise<void> {\n    const progressUpdater = (current: number, total: number) => {\n      if (progress) {\n        progress({\n          current,\n          total\n        });\n      }\n    };\n\n    const raiden = this.raiden;\n    progressUpdater(1, 3);\n\n    try {\n      await raiden.openChannel(token, partner);\n    } catch (e) {\n      throw new ChannelOpenFailed(e);\n    }\n\n    progressUpdater(2, 3);\n\n    if (amount.gt(Zero)) {\n      await this.deposit(token, partner, amount);\n    }\n  }\n\n  async leaveNetwork(\n    address: string,\n    progress?: (progress: Progress) => void\n  ): Promise<LeaveNetworkResult> {\n    const channels: RaidenChannel[] = this.store.getters.channels(address);\n    const result = {\n      closed: 0,\n      failed: 0\n    };\n\n    const total = channels.length;\n    for (let i = 0; i < total; i++) {\n      if (progress) {\n        progress({\n          current: i + 1,\n          total: total\n        });\n      }\n\n      const channel = channels[i];\n      try {\n        await this.closeChannel(channel.token, channel.partner);\n        result.closed += 1;\n      } catch (e) {\n        result.failed += 1;\n      }\n    }\n\n    return result;\n  }\n\n  async closeChannel(token: string, partner: string) {\n    try {\n      await this.raiden.closeChannel(token, partner);\n    } catch (e) {\n      throw new ChannelCloseFailed(e);\n    }\n  }\n\n  async deposit(token: string, partner: string, amount: BigNumber) {\n    try {\n      await this.raiden.depositChannel(token, partner, amount);\n    } catch (e) {\n      throw new ChannelDepositFailed(e);\n    }\n  }\n\n  async settleChannel(token: string, partner: string) {\n    try {\n      await this.raiden.settleChannel(token, partner);\n    } catch (e) {\n      throw new ChannelSettleFailed(e);\n    }\n  }\n\n  async fetchTokens() {\n    const cache = this.store.state.tokens;\n    let updateEntries = 0;\n    let tokens: string[];\n    try {\n      tokens = await this.raiden.getTokenList();\n    } catch (e) {\n      tokens = [];\n    }\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      if (token in cache) {\n        continue;\n      }\n      const retrievedToken = await this.getToken(token);\n      if (retrievedToken) {\n        cache[token] = retrievedToken;\n        updateEntries += 1;\n      }\n    }\n\n    if (updateEntries > 0) {\n      this.store.commit('updateTokens', cache);\n    }\n  }\n\n  async transfer(token: string, target: string, amount: BigNumber) {\n    try {\n      await this.raiden.getAvailability(target);\n      const secretHash = await this.raiden.transfer(token, target, amount);\n\n      // Wait for transaction to be completed\n      await this.raiden.transfers$\n        .pipe(\n          first(\n            (transfer: RaidenSentTransfer) =>\n              transfer.secrethash === secretHash && transfer.completed\n          )\n        )\n        .toPromise();\n    } catch (e) {\n      throw new TransferFailed(e);\n    }\n  }\n}\n\nexport class ChannelSettleFailed extends Error {}\n\nexport class ChannelCloseFailed extends Error {}\n\nexport class ChannelOpenFailed extends Error {}\n\nexport class ChannelDepositFailed extends Error {}\n\nexport class EnsResolveFailed extends Error {}\n\nexport class TransferFailed extends Error {}\n\nexport class RaidenInitializationFailed extends Error {}\n","export class Web3Provider {\n  static async provider(config?: { INFURA_ENDPOINT: string }) {\n    const ethereum = window.ethereum;\n    let provider = null;\n\n    if (config) {\n      provider = `https://${config.INFURA_ENDPOINT}`;\n    } else if (typeof ethereum !== 'undefined') {\n      await ethereum.enable();\n      provider = ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    }\n\n    if (provider && provider.isMetaMask) {\n      provider.autoRefreshOnNetworkChange = false;\n    }\n\n    return provider;\n  }\n\n  static injectedWeb3Available = (): boolean => window.ethereum || window.web3;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as t from 'io-ts';\nimport { bigNumberify, getAddress, isHexString, hexDataLength } from 'ethers/utils';\nimport { Two } from 'ethers/constants';\nimport { LosslessNumber } from 'lossless-json';\nimport { memoize } from 'lodash';\nconst isStringifiable = (u) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nu !== null && u !== undefined && typeof u['toString'] === 'function';\nconst isBigNumber = (u) => u && u['_ethersType'] === 'BigNumber';\n/**\n * Codec of ethers.utils.BigNumber objects\n * Input can be anything bigNumberify-able: number, string, LosslessNumber or BigNumber\n * Output is LosslessNumber, so we can JSON-serialize with 'number' types bigger than JS VM limits\n * of ±2^53, as Raiden full-client/python stdlib json encode/decode longs as json number.\n */\nexport const BigNumberC = new t.Type('BigNumber', isBigNumber, (u, c) => {\n    if (isBigNumber(u))\n        return t.success(u);\n    try {\n        if (isStringifiable(u))\n            return t.success(bigNumberify(u.toString()));\n    }\n    catch (err) {\n        return t.failure(u, c, err.message);\n    }\n    return t.failure(u, c);\n}, a => new LosslessNumber(a.toString()));\n/**\n * Creates a NEW codec for a specific [non-const] enum object\n */\nexport class EnumType extends t.Type {\n    constructor(e, name) {\n        super(name || 'enum', (u) => Object.values(this.enumObject).some(v => v === u), (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)), t.identity);\n        this._tag = 'EnumType';\n        this.enumObject = e;\n    }\n}\n/**\n * Helper function to create codecs to validate an arbitrary or variable-sized hex bytestring\n * A branded codec to indicate validated hex-strings\n *\n * @param size - Required number of bytes. Pass undefined or zero to have a variable-sized type\n * @returns branded codec for hex-encoded bytestrings\n */\nexport const HexString = memoize(function (size) {\n    return t.brand(t.string, (n) => typeof n === 'string' && (size ? hexDataLength(n) === size : isHexString(n)), 'HexString');\n});\n/**\n * Helper function to create codecs to validate an arbitrary or variable-sized BigNumbers\n * A branded codec/type to indicate size-validated BigNumbers\n *\n * @param size - Required number of bytes. Pass undefined or zero to have a variable-sized type\n * @returns branded codec for hex-encoded bytestrings\n */\nexport const UInt = memoize(function (size) {\n    const max = size ? Two.pow(size * 8) : undefined;\n    return t.brand(BigNumberC, (n) => BigNumberC.is(n) && n.gte(0) && (max === undefined || n.lt(max)), 'UInt');\n});\n// specific types\n// strig brand: ECDSA signature as an hex-string\nexport const Signature = HexString(65);\n// string brand: 256-bit hash, usually keccak256 or sha256\nexport const Hash = HexString(32);\n// string brand: a secret bytearray, non-sized\nexport const Secret = HexString();\n// string brand: ECDSA private key, 32 bytes\nexport const PrivateKey = HexString(32);\n// string brand: checksummed address, 20 bytes\nexport const Address = t.brand(HexString(20), (u) => {\n    try {\n        return typeof u === 'string' && getAddress(u) === u;\n    }\n    catch (e) { }\n    return false;\n}, // type guard for branded values\n'Address');\n/**\n * Helper function to create codecs to validate [timestamp, value] tuples\n *\n * @param codec - Codec to compose with a timestamp in a tuple\n * @returns Codec of a tuple of timestamp and codec type\n */\nexport const Timed = memoize((codec) => t.tuple([t.number, codec]));\n/**\n * Given a value of type T, returns a Timed<T> tuple with current time as first value\n *\n * @param v - Value to return with time\n * @returns Tuple of call timestamp as first elemtn and value passed as parameter as second\n */\nexport function timed(v) {\n    return [Date.now(), v];\n}\n//# sourceMappingURL=types.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Two } from 'ethers/constants';\nimport { bigNumberify } from 'ethers/utils';\nimport { hexlify, isArrayish, hexZeroPad, hexDataLength } from 'ethers/utils/bytes';\nimport { parse } from 'lossless-json';\nimport { BigNumberC } from './types';\n/**\n * Encode data to hex string of exactly length size (in bytes)\n * Throw if data can't be made to fit in length.\n *\n * @param data - May be of multiple types:\n *      - number|BigNumber: Encoded in the big-endian byte-order and left-zero-padded to length\n *      - string: Must be hex-encoded string of length bytes\n *      - number[] Must be of exactly of length size (left/right-pad it before if needed)\n * @param length - The expected length of the hex string, in bytes\n * @returns HexString byte-array of length\n */\nexport function encode(data, length) {\n    let hex;\n    if (typeof data === 'number')\n        data = bigNumberify(data);\n    if (BigNumberC.is(data)) {\n        if (data.lt(0))\n            throw new Error('Number is negative');\n        if (data.gte(Two.pow(length * 8)))\n            throw new Error('Number too large');\n        hex = hexZeroPad(hexlify(data), length);\n    }\n    else if (typeof data === 'string' || isArrayish(data)) {\n        const str = hexlify(data);\n        if (hexDataLength(str) !== length)\n            throw new Error('Uint8Array or hex string must be of exact length');\n        hex = str;\n    }\n    else {\n        throw new Error('data is not a HexString or Uint8Array');\n    }\n    return hex;\n}\nconst isLosslessNumber = (u) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nu && u['isLosslessNumber'] === true;\n/**\n * Opportunistic JSON.parse regarding numbers\n * If possible to decode a JSON number as JS number (i.e. value < 2^53) and return 'number',\n * otherwise returns LosslessNumber object, which can be decoded as BigNumber by BigNumberC\n * Throws if handled invalid JSON\n *\n * @param text - JSON string to parse\n * @returns Decoded object\n */\nexport function losslessParse(text) {\n    return parse(text, ({}, value) => {\n        if (isLosslessNumber(value)) {\n            try {\n                return value.valueOf(); // return number, if possible, or throw if > 2^53\n            }\n            catch (e) { } // else, pass to return LosslessNumber, which can be decoded by BigNumberC\n        }\n        return value;\n    });\n}\nexport { stringify as losslessStringify } from 'lossless-json';\n//# sourceMappingURL=data.js.map","import * as t from 'io-ts';\nimport { Address, Hash, Signature, UInt } from '../utils/types';\n// Represents a HashTime-Locked amount in a channel\nexport const Lock = t.type({\n    amount: UInt(32),\n    expiration: UInt(32),\n    secrethash: Hash,\n}, 'Lock');\n/**\n * Balance Proof constructed from an EnvelopeMessage\n * Either produced by us or received from the partner, the BPs are generated from the messages\n * because BP signature requires the hash of the message, for authentication of data not included\n * nor relevant for the smartcontract/BP itself, but so for the peers (e.g. payment_id)\n */\nexport const SignedBalanceProof = t.type({\n    // channel data\n    chainId: UInt(32),\n    tokenNetworkAddress: Address,\n    channelId: UInt(32),\n    // balance proof data\n    nonce: UInt(8),\n    transferredAmount: UInt(32),\n    lockedAmount: UInt(32),\n    locksroot: Hash,\n    messageHash: Hash,\n    signature: Signature,\n    sender: Address,\n});\n//# sourceMappingURL=types.js.map","import * as t from 'io-ts';\nimport { EnumType, UInt } from '../utils/types';\nimport { Lock, SignedBalanceProof } from './types';\nexport var ChannelState;\n(function (ChannelState) {\n    ChannelState[\"opening\"] = \"opening\";\n    ChannelState[\"open\"] = \"open\";\n    ChannelState[\"closing\"] = \"closing\";\n    ChannelState[\"closed\"] = \"closed\";\n    ChannelState[\"settleable\"] = \"settleable\";\n    ChannelState[\"settling\"] = \"settling\";\n    ChannelState[\"settled\"] = \"settled\";\n})(ChannelState || (ChannelState = {}));\nexport const ChannelStateC = new EnumType(ChannelState, 'ChannelState');\n/**\n * Contains info of each side of a channel\n */\nexport const ChannelEnd = t.readonly(t.intersection([\n    t.type({\n        deposit: UInt(32),\n    }),\n    t.partial({\n        locks: t.array(Lock),\n        balanceProof: SignedBalanceProof,\n        withdraw: UInt(32),\n    }),\n]));\nexport const Channel = t.intersection([\n    t.readonly(t.type({\n        own: ChannelEnd,\n        partner: ChannelEnd,\n    })),\n    t.union([\n        /* union of types with literals intersection allows narrowing other props presence. e.g.:\n         * if (channel.state === ChannelState.open) {\n         *   id = channel.id; // <- id can't be undefined\n         *   closeBlock = channel.closeBlock; // error: closeBlock only exist on states closed|settling\n         * }\n         */\n        t.readonly(t.type({ state: t.literal(ChannelState.opening) })),\n        t.readonly(t.type({\n            state: t.union([t.literal(ChannelState.open), t.literal(ChannelState.closing)]),\n            id: t.number,\n            settleTimeout: t.number,\n            openBlock: t.number,\n            isFirstParticipant: t.boolean,\n        })),\n        t.readonly(t.type({\n            state: t.union([\n                t.literal(ChannelState.closed),\n                t.literal(ChannelState.settleable),\n                t.literal(ChannelState.settling),\n            ]),\n            id: t.number,\n            settleTimeout: t.number,\n            openBlock: t.number,\n            isFirstParticipant: t.boolean,\n            closeBlock: t.number,\n        })),\n    ]),\n]);\n/**\n * Channels is a mapping from tokenNetwork -> partner -> Channel\n * As in: { [tokenNetwork: Address]: { [partner: Address]: Channel } }\n * It's used as codec and type for 'channels' key in RaidenState\n * We use t.string instead of the Address branded codecs because specialized types can't be used\n * as index mapping keys.\n */\nexport const Channels = t.readonly(t.record(t.string /* tokenNetwork: Address */, t.readonly(t.record(t.string /* partner: Address */, Channel))));\n//# sourceMappingURL=state.js.map","/* istanbul ignore file */\n/* eslint-disable @typescript-eslint/camelcase */\n/**\n * These io-ts codecs validate and decode JSON Raiden messages\n * They include BigNumber strings validation, enum validation (if needed), Address checksum\n * validation, etc, and converting everything to its respective object, where needed.\n */\nimport * as t from 'io-ts';\nimport { memoize } from 'lodash';\n// import { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { Address, EnumType, Hash, Secret, Signature, UInt } from '../utils/types';\nimport { Lock } from '../channels/types';\n// types\nexport var MessageType;\n(function (MessageType) {\n    MessageType[\"DELIVERED\"] = \"Delivered\";\n    MessageType[\"PROCESSED\"] = \"Processed\";\n    MessageType[\"SECRET_REQUEST\"] = \"SecretRequest\";\n    MessageType[\"SECRET_REVEAL\"] = \"RevealSecret\";\n    MessageType[\"LOCKED_TRANSFER\"] = \"LockedTransfer\";\n    MessageType[\"REFUND_TRANSFER\"] = \"RefundTransfer\";\n    MessageType[\"UNLOCK\"] = \"Unlock\";\n    MessageType[\"LOCK_EXPIRED\"] = \"LockExpired\";\n    MessageType[\"TO_DEVICE\"] = \"ToDevice\";\n    MessageType[\"WITHDRAW_REQUEST\"] = \"WithdrawRequest\";\n    MessageType[\"WITHDRAW_CONFIRMATION\"] = \"WithdrawConfirmation\";\n    MessageType[\"WITHDRAW_EXPIRED\"] = \"WithdrawExpired\";\n})(MessageType || (MessageType = {}));\nexport const MessageTypeC = new EnumType(MessageType, 'MessageType');\n// Mixin for all tagged messages\nexport const Message = t.readonly(t.type({ type: MessageTypeC }));\n// Mixin of a message that contains an identifier and should be ack'ed with a respective Delivered\nconst RetrieableMessage = t.readonly(t.intersection([\n    t.type({\n        message_identifier: UInt(8),\n    }),\n    Message,\n]));\n// Acknowledges to the sender that a RetrieableMessage was received\nexport const Delivered = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.DELIVERED),\n        delivered_message_identifier: UInt(8),\n    }),\n    Message,\n]));\n// Confirms some message that required state validation was successfuly processed\nexport const Processed = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.PROCESSED),\n    }),\n    RetrieableMessage,\n]));\n// Requests the initiator to reveal the secret for a LockedTransfer targeted to us\nexport const SecretRequest = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.SECRET_REQUEST),\n        payment_identifier: UInt(8),\n        secrethash: Hash,\n        amount: UInt(32),\n        expiration: UInt(32),\n    }),\n    RetrieableMessage,\n]));\n// Reveal to the target or the previous hop a secret we just learned off-chain\nexport const SecretReveal = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.SECRET_REVEAL),\n        secret: Secret,\n    }),\n    RetrieableMessage,\n]));\n// Mixin for messages containing a balance proof\nexport const EnvelopeMessage = t.readonly(t.intersection([\n    t.type({\n        chain_id: UInt(32),\n        token_network_address: Address,\n        channel_identifier: UInt(32),\n        nonce: UInt(8),\n        transferred_amount: UInt(32),\n        locked_amount: UInt(32),\n        locksroot: Hash,\n    }),\n    RetrieableMessage,\n]));\nexport const RouteMetadata = t.readonly(t.type({\n    route: t.array(Address),\n}));\nexport const Metadata = t.readonly(t.type({\n    routes: t.array(RouteMetadata),\n}));\n// base for locked and refund transfer, they differentiate only on the type tag\nconst LockedTransferBase = t.readonly(t.intersection([\n    t.type({\n        payment_identifier: UInt(8),\n        token: Address,\n        recipient: Address,\n        lock: Lock,\n        target: Address,\n        initiator: Address,\n        fee: UInt(32),\n        metadata: Metadata,\n    }),\n    EnvelopeMessage,\n]));\n// a mediated transfer containing a locked amount\nexport const LockedTransfer = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.LOCKED_TRANSFER),\n    }),\n    LockedTransferBase,\n]));\n// if a mediated transfer didn't succeed, mediator can refund the amount with the same secrethash\n// so the previous hop can retry it with another neighbor\nexport const RefundTransfer = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.REFUND_TRANSFER),\n    }),\n    LockedTransferBase,\n]));\n// when the secret is revealed, unlock sends a new balance proof without the lock and increasing\n// the total transfered to finish the offchain transfer\nexport const Unlock = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.UNLOCK),\n        payment_identifier: UInt(8),\n        secret: Secret,\n    }),\n    EnvelopeMessage,\n]));\n// after mediated transfer fails and the lock expire, clean it from the locks tree\nexport const LockExpired = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.LOCK_EXPIRED),\n        recipient: Address,\n        secrethash: Hash,\n    }),\n    EnvelopeMessage,\n]));\nexport const ToDevice = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.TO_DEVICE),\n        message_identifier: UInt(8),\n    }),\n    Message,\n]));\nexport const WithdrawBase = t.readonly(t.type({\n    chain_id: UInt(32),\n    token_network_address: Address,\n    channel_identifier: UInt(32),\n    participant: Address,\n    total_withdraw: UInt(32),\n    nonce: UInt(8),\n    expiration: UInt(32),\n}));\nexport const WithdrawRequest = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.WITHDRAW_REQUEST),\n    }),\n    WithdrawBase,\n    RetrieableMessage,\n]));\nexport const WithdrawConfirmation = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.WITHDRAW_CONFIRMATION),\n    }),\n    WithdrawBase,\n    RetrieableMessage,\n]));\nexport const WithdrawExpired = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.WITHDRAW_EXPIRED),\n    }),\n    WithdrawBase,\n    RetrieableMessage,\n]));\n// type to require a message to be signed!\n// generic type codec for messages that must be signed\n// use it like: Codec = Signed(Message)\n// The t.TypeOf<typeof codec> will be Signed<Message>, defined later\nexport const Signed = memoize((codec) => t.intersection([codec, t.readonly(t.type({ signature: Signature }))]));\nexport const SignedMessageCodecs = {\n    [MessageType.DELIVERED]: Signed(Delivered),\n    [MessageType.PROCESSED]: Signed(Processed),\n    [MessageType.SECRET_REQUEST]: Signed(SecretRequest),\n    [MessageType.SECRET_REVEAL]: Signed(SecretReveal),\n    [MessageType.LOCKED_TRANSFER]: Signed(LockedTransfer),\n    [MessageType.REFUND_TRANSFER]: Signed(RefundTransfer),\n    [MessageType.UNLOCK]: Signed(Unlock),\n    [MessageType.LOCK_EXPIRED]: Signed(LockExpired),\n    [MessageType.TO_DEVICE]: Signed(ToDevice),\n    [MessageType.WITHDRAW_REQUEST]: Signed(WithdrawRequest),\n    [MessageType.WITHDRAW_CONFIRMATION]: Signed(WithdrawConfirmation),\n    [MessageType.WITHDRAW_EXPIRED]: Signed(WithdrawExpired),\n};\n//# sourceMappingURL=types.js.map","import * as t from 'io-ts';\nexport const RaidenMatrixSetup = t.readonly(t.type({\n    userId: t.string,\n    accessToken: t.string,\n    deviceId: t.string,\n    displayName: t.string,\n}));\n//# sourceMappingURL=state.js.map","import * as t from 'io-ts';\nimport { Signed, LockedTransfer, Processed, SecretReveal, Unlock, LockExpired, RefundTransfer, } from '../messages/types';\nimport { Timed, Hash } from '../utils/types';\n/**\n * This struct holds the relevant messages exchanged in a transfer\n * The transfer state is defined by the exchanged messages\n */\nexport const SentTransfer = t.readonly(t.intersection([\n    t.type({\n        /** -> outgoing locked transfer */\n        transfer: Timed(Signed(LockedTransfer)),\n    }),\n    t.partial({\n        /** <- incoming processed for locked transfer */\n        transferProcessed: Timed(Signed(Processed)),\n        /**\n         * <- incoming refund transfer (if so)\n         * If this is set, transfer failed and partner tried refunding the transfer to us. We don't\n         * handle receiving transfers, but just store it here to mark this transfer as failed with a\n         * refund, until the lock expires normally\n         */\n        refund: Timed(Signed(RefundTransfer)),\n        /**\n         * !! channel was closed !!\n         * In the case a channel is closed (possibly middle transfer), this will be the txHash of the\n         * CloseChannel transaction. No further actions are possible after it's set.\n         */\n        channelClosed: Timed(Hash),\n        /**\n         * -> outgoing secret reveal to target\n         * If this is set, it means the secret was revealed (so transfer succeeded, even if it didn't\n         * complete yet)\n         */\n        secretReveal: Timed(Signed(SecretReveal)),\n        /**\n         * -> outgoing unlock to recipient\n         * If this is set, it means the Unlock was sent (even if partner didn't acknowledge it yet)\n         */\n        unlock: Timed(Signed(Unlock)),\n        /**\n         * -> outgoing lock expired (if so)\n         * If this is set, transfer failed, and we expired the lock (retrieving the locked amount).\n         * Transfer failed may not have completed yet, e.g. waiting for LockExpired's Processed reply\n         */\n        lockExpired: Timed(Signed(LockExpired)),\n        /**\n         * <- incoming processed for Unlock message\n         * If this is set, the protocol completed by the transfer succeeding and partner\n         * acknowledging validity of our off-chain unlock\n         */\n        unlockProcessed: Timed(Signed(Processed)),\n        /**\n         * <- incoming processed for LockExpired message\n         * If this is set, the protocol completed by the transfer failing and partner acknowledging\n         * this transfer can't be claimed anymore\n         */\n        lockExpiredProcessed: Timed(Signed(Processed)),\n    }),\n]));\n/**\n * Mapping of outgoing transfers, indexed by the secrethash\n */\nexport const SentTransfers = t.readonly(t.record(t.string /* secrethash: Hash */, SentTransfer));\nexport var RaidenSentTransferStatus;\n(function (RaidenSentTransferStatus) {\n    RaidenSentTransferStatus[\"pending\"] = \"PENDING\";\n    RaidenSentTransferStatus[\"received\"] = \"RECEIVED\";\n    RaidenSentTransferStatus[\"refunded\"] = \"REFUNDED\";\n    RaidenSentTransferStatus[\"closed\"] = \"CLOSED\";\n    RaidenSentTransferStatus[\"revealed\"] = \"REVEALED\";\n    RaidenSentTransferStatus[\"unlocking\"] = \"UNLOCKING\";\n    RaidenSentTransferStatus[\"expiring\"] = \"EXPIRING\";\n    RaidenSentTransferStatus[\"unlocked\"] = \"UNLOCKED\";\n    RaidenSentTransferStatus[\"expired\"] = \"EXPIRED\";\n})(RaidenSentTransferStatus || (RaidenSentTransferStatus = {}));\n//# sourceMappingURL=state.js.map","import * as t from 'io-ts';\nimport { isLeft } from 'fp-ts/lib/Either';\nimport { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { AddressZero } from 'ethers/constants';\nimport { losslessParse, losslessStringify } from './utils/data';\nimport { Address, Secret } from './utils/types';\nimport { Channels } from './channels/state';\nimport { RaidenMatrixSetup } from './transport/state';\nimport { SentTransfers } from './transfers/state';\n// types\nexport const RaidenState = t.readonly(t.type({\n    address: Address,\n    chainId: t.number,\n    registry: Address,\n    blockNumber: t.number,\n    channels: Channels,\n    tokens: t.readonly(t.record(t.string /* token: Address */, Address)),\n    transport: t.readonly(t.partial({\n        matrix: t.readonly(t.intersection([\n            t.type({\n                server: t.string,\n            }),\n            t.partial({\n                setup: RaidenMatrixSetup,\n                rooms: t.readonly(t.record(t.string /* partner: Address */, t.array(t.string))),\n            }),\n        ])),\n    })),\n    secrets: t.readonly(t.record(t.string /* secrethash: Hash */, t.readonly(t.intersection([t.type({ secret: Secret }), t.partial({ registerBlock: t.number })])))),\n    sent: SentTransfers,\n}));\n// helpers, utils & constants\n/**\n * Encode RaidenState to a JSON string\n * For Raiden client compliance, this JSON encodes BigNumbers as 'number' (using lossless-json lib)\n * which is valid json though not very common as common JS implementations lose precision when\n * decoding through JSON.parse. This is solved in SDK by both encoding and decoding BigNumbers\n * using lossless-json, without going through the intermediary JS-number form.\n *\n * @param state - RaidenState object\n * @returns JSON encoded string\n */\nexport function encodeRaidenState(state) {\n    return losslessStringify(RaidenState.encode(state), undefined, 2);\n}\n/**\n * Try to decode any data as a RaidenState.\n * If handled a string, will parse it with lossless-json, to preserve BigNumbers encoded as JSON\n * 'number'.\n *\n * @param data - string | any which may be decoded as RaidenState\n * @returns RaidenState parsed and validated\n */\nexport function decodeRaidenState(data) {\n    if (typeof data === 'string')\n        data = losslessParse(data);\n    const result = RaidenState.decode(data);\n    if (isLeft(result))\n        throw ThrowReporter.report(result); // throws if decode failed\n    return result.right;\n}\nexport const initialState = {\n    address: AddressZero,\n    chainId: 0,\n    registry: AddressZero,\n    blockNumber: 0,\n    channels: {},\n    tokens: {},\n    transport: {},\n    secrets: {},\n    sent: {},\n};\n//# sourceMappingURL=state.js.map","import { padZeros } from 'ethers/utils';\nexport const SignatureZero = padZeros([], 65);\nexport var ShutdownReason;\n(function (ShutdownReason) {\n    ShutdownReason[\"STOP\"] = \"raidenStopped\";\n    ShutdownReason[\"ACCOUNT_CHANGED\"] = \"providerAccountChanged\";\n    ShutdownReason[\"NETWORK_CHANGED\"] = \"providerNetworkChanged\";\n})(ShutdownReason || (ShutdownReason = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Like redux's combineReducers, but allows passing only a partial reducer mapping\n * redux's combineReducers output state must be exactly the mapping passed as parameter,\n * which doesn't allow to only provide a partial set of reducers and passthrough the other state's\n * keys. This function allows that, also preserving state/object reference when reducers doesn't\n * change state value.\n *\n * @param reducers - A mapping of a subset of state's key to nested reducers functions\n * @param initialState - global initial state, required when initializing first object with partial\n *                      reducers\n * @returns Full reducer for state S and actions A\n */\nexport function partialCombineReducers(reducers, initialState) {\n    return function (state = initialState, action) {\n        for (const key in reducers) {\n            const reducer = reducers[key];\n            if (!reducer)\n                continue; // shouldn't happen, only here for type safety below\n            const subState = state[key] || initialState[key];\n            const newSubState = reducer(subState, action);\n            if (newSubState !== subState) {\n                state = Object.assign({}, state, { [key]: newSubState });\n            }\n        }\n        return state;\n    };\n}\n//# sourceMappingURL=redux.js.map","import { createStandardAction } from 'typesafe-actions';\n/* A new head in the blockchain is detected by provider */\nexport const newBlock = createStandardAction('newBlock')();\n/**\n * A new token network is detected in the TokenNetworkRegistry instance\n * fromBlock is only set on the first time, to fetch and handle past events\n */\nexport const tokenMonitored = createStandardAction('tokenMonitored')();\n/**\n * Channel actions receive ChannelId as 'meta' action property\n * This way, 'meta' can be used equally for request, success and error actions\n */\n/* Request a channel to be opened with meta={ tokenNetwork, partner } and payload.settleTimeout */\nexport const channelOpen = createStandardAction('channelOpen')();\n/* A channel is detected on-chain. Also works as 'success' for channelOpen action */\nexport const channelOpened = createStandardAction('channelOpened')();\n/* A channelOpen request action (with meta: ChannelId) failed with payload=Error */\nexport const channelOpenFailed = createStandardAction('channelOpenFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* Channel with meta:ChannelId + payload.id should be monitored */\nexport const channelMonitored = createStandardAction('channelMonitored')();\n/* Request a payload.deposit to be made to channel meta:ChannelId */\nexport const channelDeposit = createStandardAction('channelDeposit')();\n/* A deposit is detected on-chain. Also works as 'success' for channelDeposit action */\nexport const channelDeposited = createStandardAction('channelDeposited')();\n/* A channelDeposit request action (with meta: ChannelId) failed with payload=Error */\nexport const channelDepositFailed = createStandardAction('channelDepositFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* A withdraw is detected on-chain */\nexport const channelWithdrawn = createStandardAction('channelWithdrawn')();\n/* Request channel meta:ChannelId to be closed */\nexport const channelClose = createStandardAction('channelClose')();\n/* A close channel event is detected on-chain. Also works as 'success' for channelClose action */\nexport const channelClosed = createStandardAction('channelClosed')();\n/* A channelClose request action (with meta: ChannelId) failed with payload=Error */\nexport const channelCloseFailed = createStandardAction('channelCloseFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* A channel meta:ChannelId becomes settleable, starting from payload.settleableBlock */\nexport const channelSettleable = createStandardAction('channelSettleable')();\n/* Request channel meta:ChannelId to be settled */\nexport const channelSettle = createStandardAction('channelSettle')();\n/* A settle channel event is detected on-chain. Also works as 'success' for channelSettle action */\nexport const channelSettled = createStandardAction('channelSettled')();\n/* A channelSettle request action (with meta: ChannelId) failed with payload=Error */\nexport const channelSettleFailed = createStandardAction('channelSettleFailed').map((payload, meta) => ({ payload, error: true, meta }));\n//# sourceMappingURL=actions.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, set, unset } from 'lodash/fp';\nimport { Zero } from 'ethers/constants';\nimport { partialCombineReducers } from '../utils/redux';\nimport { initialState } from '../state';\nimport { channelClose, channelClosed, channelDeposited, channelOpen, channelOpened, channelOpenFailed, channelSettle, channelSettleable, channelSettled, newBlock, tokenMonitored, channelWithdrawn, } from './actions';\nimport { ChannelState } from './state';\n// state.blockNumber specific reducer, handles only newBlock action\nfunction blockNumber(state = initialState.blockNumber, action) {\n    if (isActionOf(newBlock, action))\n        return action.payload.blockNumber;\n    else\n        return state;\n}\n// state.tokens specific reducer, handles only tokenMonitored action\nfunction tokens(state = initialState.tokens, action) {\n    if (isActionOf(tokenMonitored, action))\n        return set([action.payload.token], action.payload.tokenNetwork, state);\n    else\n        return state;\n}\n// handles all channel actions and requests\nfunction channels(state = initialState.channels, action) {\n    if (isActionOf(channelOpen, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        if (get(path, state))\n            return state; // there's already a channel with partner\n        const channel = {\n            state: ChannelState.opening,\n            own: { deposit: Zero },\n            partner: { deposit: Zero },\n        };\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelOpened, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner], channel = {\n            state: ChannelState.open,\n            own: { deposit: Zero },\n            partner: { deposit: Zero },\n            id: action.payload.id,\n            settleTimeout: action.payload.settleTimeout,\n            openBlock: action.payload.openBlock,\n            isFirstParticipant: action.payload.isFirstParticipant,\n        };\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelOpenFailed, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        if (get([...path, 'state'], state) !== ChannelState.opening)\n            return state;\n        return unset(path, state);\n    }\n    else if (isActionOf(channelDeposited, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.open || channel.id !== action.payload.id)\n            return state;\n        if (action.payload.participant === action.meta.partner)\n            channel = Object.assign({}, channel, { partner: Object.assign({}, channel.partner, { deposit: action.payload.totalDeposit }) });\n        else\n            channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { deposit: action.payload.totalDeposit }) });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelWithdrawn, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.open || channel.id !== action.payload.id)\n            return state;\n        if (action.payload.participant === action.meta.partner)\n            channel = Object.assign({}, channel, { partner: Object.assign({}, channel.partner, { withdraw: action.payload.totalWithdraw }) });\n        else\n            channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { withdraw: action.payload.totalWithdraw }) });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelClose, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.open)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.closing });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelClosed, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel ||\n            !(channel.state === ChannelState.open || channel.state === ChannelState.closing) ||\n            channel.id !== action.payload.id)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.closed, closeBlock: action.payload.closeBlock });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettleable, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.closed)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.settleable });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettle, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.settleable)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.settling });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettled, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        const channel = get(path, state);\n        if (!channel ||\n            ![ChannelState.closed, ChannelState.settleable, ChannelState.settling].includes(channel.state))\n            return state;\n        return unset(path, state);\n    }\n    else\n        return state;\n}\n/**\n * Nested/combined reducer for channels\n * blockNumber, tokens & channels reducers get its own slice of the state, corresponding to the\n * name of the reducer. channels root reducer instead must be handled the complete state instead,\n * so it compose the output with each key/nested/combined state.\n */\nexport const channelsReducer = partialCombineReducers({ blockNumber, tokens, channels }, initialState);\n//# sourceMappingURL=reducer.js.map","import { createStandardAction } from 'typesafe-actions';\n/* MatrixClient instance is ready and logged in to payload.server with credentials payload.setup */\nexport const matrixSetup = createStandardAction('matrixSetup')();\n/* Request matrix to start monitoring presence updates for meta.address */\nexport const matrixRequestMonitorPresence = createStandardAction('matrixRequestMonitorPresence')();\n/**\n * Monitored user meta.address presence updated.\n * First event for this address also works as 'success' for matrixRequestMonitorPresence\n */\nexport const matrixPresenceUpdate = createStandardAction('matrixPresenceUpdate').map(({ userId, available, ts }, meta) => ({ payload: { userId, available, ts: ts || Date.now() }, meta }));\n/* A matrixRequestMonitorPresence request action (with meta.address) failed with payload=Error */\nexport const matrixRequestMonitorPresenceFailed = createStandardAction('matrixRequestMonitorPresenceFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* payload.roomId must go front on meta.address's room queue */\nexport const matrixRoom = createStandardAction('matrixRoom')();\n/* payload.roomId must be excluded from meta.address room queue, if present */\nexport const matrixRoomLeave = createStandardAction('matrixRoomLeave')();\n//# sourceMappingURL=actions.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, getOr, isEmpty, set, unset } from 'lodash/fp';\nimport { partialCombineReducers } from '../utils/redux';\nimport { initialState } from '../state';\nimport { matrixSetup, matrixRoom, matrixRoomLeave } from './actions';\n/**\n * state.transport reducer\n * Handles all transport actions and requests\n *\n * @param state - Current RaidenState['transport'] slice\n * @param action - RaidenAction to handle\n * @returns New RaidenState['transport'] slice\n */\nfunction transport(state = initialState.transport, action) {\n    if (isActionOf(matrixSetup, action)) {\n        return Object.assign({}, state, { matrix: Object.assign({}, state.matrix, action.payload) });\n    }\n    else if (isActionOf(matrixRoom, action)) {\n        const path = ['matrix', 'rooms', action.meta.address];\n        return set(path, [\n            action.payload.roomId,\n            ...getOr([], path, state).filter(room => room !== action.payload.roomId),\n        ], state);\n    }\n    else if (isActionOf(matrixRoomLeave, action)) {\n        const path = ['matrix', 'rooms', action.meta.address];\n        state = set(path, getOr([], path, state).filter(r => r !== action.payload.roomId), state);\n        if (isEmpty(get(path, state)))\n            state = unset(path, state);\n        return state;\n    }\n    else\n        return state;\n}\n/**\n * Nested/combined reducer for transport\n * Currently only handles 'transport' substate\n */\nexport const transportReducer = partialCombineReducers({ transport }, initialState);\n//# sourceMappingURL=reducer.js.map","import { concat, hexlify } from 'ethers/utils/bytes';\nimport { keccak256, randomBytes, bigNumberify, sha256 } from 'ethers/utils';\nimport { encode } from '../utils/data';\nimport { RaidenSentTransferStatus } from './state';\n/**\n * Get the locksroot of a given array of pending locks\n * On Alderaan, it's the keccak256 hash of the concatenation of the ordered locks data\n *\n * @param locks - Lock array to calculate the locksroot from\n * @returns hash of the locks array\n */\nexport function getLocksroot(locks) {\n    const encoded = [];\n    for (const lock of locks)\n        encoded.push(encode(lock.expiration, 32), encode(lock.amount, 32), lock.secrethash);\n    return keccak256(concat(encoded));\n}\n/**\n * Return the secrethash of a given secret\n * On Alderaan, the sha256 hash is used for the secret.\n *\n * @param secret - Secret to get the hash from\n * @returns hash of the secret\n */\nexport function getSecrethash(secret) {\n    return sha256(secret);\n}\n/**\n * Generates a random secret of given length, as an HexString<32>\n *\n * @param length - of the secret to generate\n * @returns HexString<32>\n */\nexport function makeSecret(length = 32) {\n    return hexlify(randomBytes(length));\n}\n/**\n * Generates a random payment identifier, as an UInt<8> (64 bits)\n *\n * @returns UInt<8>\n */\nexport function makePaymentId() {\n    return bigNumberify(randomBytes(8));\n}\n/**\n * Generates a message identifier, as an UInt<8> (64 bits)\n *\n * @returns UInt<8>\n */\nexport function makeMessageId() {\n    return bigNumberify(Date.now());\n}\n/**\n * Convert a state.sent: SentTransfer to a public RaidenSentTransfer object\n *\n * @param sent - RaidenState.sent value\n * @returns Public raiden sent transfer info object\n */\nexport function raidenSentTransfer(sent) {\n    const [status, changedAt] = sent.lockExpiredProcessed\n        ? [RaidenSentTransferStatus.expired, sent.lockExpiredProcessed[0]]\n        : sent.unlockProcessed\n            ? [RaidenSentTransferStatus.unlocked, sent.unlockProcessed[0]]\n            : sent.lockExpired\n                ? [RaidenSentTransferStatus.expiring, sent.lockExpired[0]]\n                : sent.unlock\n                    ? [RaidenSentTransferStatus.unlocking, sent.unlock[0]]\n                    : sent.secretReveal\n                        ? [RaidenSentTransferStatus.revealed, sent.secretReveal[0]]\n                        : sent.channelClosed // channelClosed before revealing\n                            ? [RaidenSentTransferStatus.closed, sent.channelClosed[0]]\n                            : sent.refund\n                                ? [RaidenSentTransferStatus.refunded, sent.refund[0]]\n                                : sent.transferProcessed\n                                    ? [RaidenSentTransferStatus.received, sent.transferProcessed[0]]\n                                    : [RaidenSentTransferStatus.pending, sent.transfer[0]], success = sent.secretReveal || sent.unlock\n        ? true\n        : sent.refund || sent.lockExpired || sent.channelClosed\n            ? false\n            : undefined, completed = !!(sent.unlockProcessed || sent.lockExpiredProcessed || sent.channelClosed);\n    return {\n        secrethash: sent.transfer[1].lock.secrethash,\n        status,\n        initiator: sent.transfer[1].initiator,\n        recipient: sent.transfer[1].recipient,\n        target: sent.transfer[1].target,\n        paymentId: sent.transfer[1].payment_identifier,\n        chainId: sent.transfer[1].chain_id.toNumber(),\n        token: sent.transfer[1].token,\n        tokenNetwork: sent.transfer[1].token_network_address,\n        channelId: sent.transfer[1].channel_identifier,\n        amount: sent.transfer[1].lock.amount,\n        expirationBlock: sent.transfer[1].lock.expiration.toNumber(),\n        fee: sent.transfer[1].fee,\n        startedAt: new Date(sent.transfer[0]),\n        changedAt: new Date(changedAt),\n        success,\n        completed,\n    };\n}\n//# sourceMappingURL=utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// import * as t from 'io-ts';\nimport { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { isLeft } from 'fp-ts/lib/Either';\nimport { keccak256, RLP, verifyMessage } from 'ethers/utils';\nimport { arrayify, concat, hexlify } from 'ethers/utils/bytes';\nimport { HashZero } from 'ethers/constants';\nimport { Signature } from '../utils/types';\nimport { encode, losslessParse, losslessStringify } from '../utils/data';\nimport { Message, MessageType, SignedMessageCodecs, } from './types';\nconst CMDIDs = {\n    [MessageType.DELIVERED]: 12,\n    [MessageType.PROCESSED]: 0,\n    [MessageType.SECRET_REQUEST]: 3,\n    [MessageType.SECRET_REVEAL]: 11,\n    [MessageType.LOCKED_TRANSFER]: 7,\n    [MessageType.REFUND_TRANSFER]: 8,\n    [MessageType.UNLOCK]: 4,\n    [MessageType.LOCK_EXPIRED]: 13,\n    [MessageType.TO_DEVICE]: 14,\n    [MessageType.WITHDRAW_REQUEST]: 15,\n    [MessageType.WITHDRAW_CONFIRMATION]: 16,\n    [MessageType.WITHDRAW_EXPIRED]: 17,\n};\n// raiden_contracts.constants.MessageTypeId\nvar MessageTypeId;\n(function (MessageTypeId) {\n    MessageTypeId[MessageTypeId[\"BALANCE_PROOF\"] = 1] = \"BALANCE_PROOF\";\n    MessageTypeId[MessageTypeId[\"WITHDRAW\"] = 3] = \"WITHDRAW\";\n})(MessageTypeId || (MessageTypeId = {}));\n/**\n * Create the hash of Metadata structure.\n *\n * @param metadata - The LockedTransfer metadata\n * @returns Hash of the metadata.\n */\nexport function createMetadataHash(metadata) {\n    const routeHashes = metadata.routes.map(value => keccak256(RLP.encode(value.route)));\n    return keccak256(RLP.encode(routeHashes));\n}\n/**\n * Returns a balance_hash from transferred&locked amounts & locksroot\n *\n * @param transferredAmount - EnvelopeMessage.transferred_amount\n * @param lockedAmount - EnvelopeMessage.locked_amount\n * @param locksroot - Hash of all current locks\n * @returns Hash of the balance\n */\nexport function createBalanceHash(transferredAmount, lockedAmount, locksroot) {\n    return (transferredAmount.isZero() && lockedAmount.isZero() && locksroot === HashZero\n        ? HashZero\n        : keccak256(concat([encode(transferredAmount, 32), encode(lockedAmount, 32), encode(locksroot, 32)])));\n}\n/**\n * Create the messageHash for a given EnvelopeMessage\n *\n * @param message - EnvelopeMessage to pack\n * @returns Hash of the message pack\n */\nexport function createMessageHash(message) {\n    switch (message.type) {\n        case MessageType.LOCKED_TRANSFER:\n        case MessageType.REFUND_TRANSFER:\n            // hash of packed representation of the whole message\n            let packed = concat([\n                encode(CMDIDs[message.type], 1),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.lock.expiration, 32),\n                encode(message.token, 20),\n                encode(message.recipient, 20),\n                encode(message.target, 20),\n                encode(message.initiator, 20),\n                encode(message.lock.secrethash, 32),\n                encode(message.lock.amount, 32),\n                encode(message.fee, 32),\n            ]);\n            if (message.type === MessageType.LOCKED_TRANSFER)\n                packed = concat([packed, createMetadataHash(message.metadata)]);\n            return keccak256(packed);\n        case MessageType.UNLOCK:\n            return keccak256(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.secret, 32),\n            ]));\n        case MessageType.LOCK_EXPIRED:\n            return keccak256(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(message.message_identifier, 8),\n                encode(message.recipient, 20),\n                encode(message.secrethash, 32),\n            ]));\n    }\n}\n/**\n * Pack a message in a hex-string format, **without** signature\n * This packed hex-byte-array can then be used for signing.\n * On Raiden python client, this is the output of `_data_to_sign` method of the messages, as the\n * actual packed encoding was once used for binary transport protocols, but nowadays is used only\n * for generating data to be signed, which is the purpose of our implementation.\n *\n * @param message - Message to be packed\n * @returns HexBytes hex-encoded string data representing message in binary format\n */\nexport function packMessage(message) {\n    switch (message.type) {\n        case MessageType.DELIVERED:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.delivered_message_identifier, 8),\n            ]));\n        case MessageType.PROCESSED:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n            ]));\n        case MessageType.LOCKED_TRANSFER:\n        case MessageType.REFUND_TRANSFER:\n        case MessageType.UNLOCK:\n        case MessageType.LOCK_EXPIRED: {\n            const messageHash = createMessageHash(message), balanceHash = createBalanceHash(message.transferred_amount, message.locked_amount, message.locksroot);\n            return hexlify(concat([\n                encode(message.token_network_address, 20),\n                encode(message.chain_id, 32),\n                encode(MessageTypeId.BALANCE_PROOF, 32),\n                encode(message.channel_identifier, 32),\n                encode(balanceHash, 32),\n                encode(message.nonce, 32),\n                encode(messageHash, 32),\n            ]));\n        }\n        case MessageType.SECRET_REQUEST:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.secrethash, 32),\n                encode(message.amount, 32),\n                encode(message.expiration, 32),\n            ]));\n        case MessageType.SECRET_REVEAL:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n                encode(message.secret, 32),\n            ]));\n        case MessageType.TO_DEVICE:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n            ]));\n        case MessageType.WITHDRAW_REQUEST:\n        case MessageType.WITHDRAW_EXPIRED:\n        case MessageType.WITHDRAW_CONFIRMATION:\n            return hexlify(concat([\n                encode(message.token_network_address, 20),\n                encode(message.chain_id, 32),\n                encode(MessageTypeId.WITHDRAW, 32),\n                encode(message.channel_identifier, 32),\n                encode(message.participant, 20),\n                encode(message.total_withdraw, 32),\n                encode(message.expiration, 32),\n            ]));\n    }\n}\n/**\n * Typeguard to check if a message contains a valid signature\n *\n * @param message - May or may not be a signed message\n * @returns Boolean if message is signed\n */\nexport function isSigned(message) {\n    return Signature.is(message.signature);\n}\n/**\n * Requires a signed message and returns its signer address\n *\n * @param message - Signed message to retrieve signer address\n * @returns Address which signed message\n */\nexport function getMessageSigner(message) {\n    return verifyMessage(arrayify(packMessage(message)), message.signature);\n}\n/**\n * Get the SignedBalanceProof associated with an EnvelopeMessage\n *\n * @param message - Signed EnvelopeMessage\n * @returns SignedBalanceProof object for message\n */\nexport function getBalanceProofFromEnvelopeMessage(message) {\n    return {\n        chainId: message.chain_id,\n        tokenNetworkAddress: message.token_network_address,\n        channelId: message.channel_identifier,\n        nonce: message.nonce,\n        transferredAmount: message.transferred_amount,\n        lockedAmount: message.locked_amount,\n        locksroot: message.locksroot,\n        messageHash: createMessageHash(message),\n        signature: message.signature,\n        sender: getMessageSigner(message),\n    };\n}\n/**\n * Encode a Message as a JSON string\n * Uses lossless-json to encode BigNumbers as JSON 'number' type, as Raiden\n *\n * @param message - Message object to be serialized\n * @returns JSON string\n */\nexport function encodeJsonMessage(message) {\n    const codec = SignedMessageCodecs[message.type];\n    return losslessStringify(codec.encode(message));\n}\n/**\n * Try to decode text as a Message, using lossless-json to decode BigNumbers\n * Throws if can't decode, or message is invalid regarding any of the encoded constraints\n *\n * @param text - JSON string to try to decode\n * @returns Message object\n */\nexport function decodeJsonMessage(text) {\n    const parsed = losslessParse(text);\n    if (!Message.is(parsed))\n        throw new Error(`Could not find Message \"type\" in ${text}`);\n    const decoded = SignedMessageCodecs[parsed.type].decode(parsed);\n    if (isLeft(decoded))\n        throw ThrowReporter.report(decoded); // throws if decode failed\n    return decoded.right;\n}\n/**\n * Pack message and request signer to sign it, and returns signed message\n *\n * @param signer - Signer instance\n * @param message - Unsigned message to pack and sign\n * @returns Promise to signed message\n */\nexport function signMessage(signer, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (isSigned(message))\n            return message;\n        const signature = (yield signer.signMessage(arrayify(packMessage(message))));\n        return Object.assign({}, message, { signature });\n    });\n}\n//# sourceMappingURL=utils.js.map","import { createStandardAction } from 'typesafe-actions';\n/** A request to initiate a transfer */\nexport const transfer = createStandardAction('transfer')();\n/** A LockedTransfer was signed and should be sent to partner */\nexport const transferSigned = createStandardAction('transferSigned')();\n/** Partner acknowledge they received and processed our LockedTransfer */\nexport const transferProcessed = createStandardAction('transferProcessed')();\n/** Register a secret */\nexport const transferSecret = createStandardAction('transferSecret')();\n/** A valid SecretRequest received from target */\nexport const transferSecretRequest = createStandardAction('transferSecretRequest')();\n/** A SecretReveal sent to target */\nexport const transferSecretReveal = createStandardAction('transferSecretReveal')();\n/** Unlock request after partner also revealed they know the secret */\nexport const transferUnlock = createStandardAction('transferUnlock')();\n/** Signed Unlock to be sent to partner */\nexport const transferUnlocked = createStandardAction('transferUnlocked')();\n/** Partner acknowledge they received and processed our Unlock */\nexport const transferUnlockProcessed = createStandardAction('transferUnlockProcessed')();\n/** A request to expire a given transfer */\nexport const transferExpire = createStandardAction('transferExpire')();\n/** A transfer LockExpired message/BalanceProof successfuly generated */\nexport const transferExpired = createStandardAction('transferExpired')();\n/**\n * A transfer expiration request failed for any reason\n * e.g. user rejected sign promopt. It should eventually get prompted again, on a future newBlock\n * action which sees this transfer should be expired but sent.lockExpired didn't get set yet.\n */\nexport const transferExpireFailed = createStandardAction('transferExpireFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/** Partner acknowledge they received and processed our LockExpired */\nexport const transferExpireProcessed = createStandardAction('transferExpireProcessed')();\n/** A transfer was refunded */\nexport const transferRefunded = createStandardAction('transferRefunded')();\n/**\n * A transfer completed successfuly\n *\n * A transfer is considered as having succeeded from the time the secret is revealed to the target,\n * as from there, target and mediators can claim the payment down to us. But the full off-chain\n * happy case completes only after partner/neighbor acknowledges receiving the Unlock.\n * So, we usually only emits this action in the end of the happy case, and it'll then contain the\n * unlock's balanceProof, which indicates the full off-chain path succeeded.\n * It'll be emitted without a balanceProof if something forces the transfer to complete\n * (e.g.  channel closed), the secret was revealed (so target was paid) but for any reason the\n * unlock didn't happen yet.\n */\nexport const transferred = createStandardAction('transferred')();\n/**\n * A transfer failed and can't succeed anymore\n *\n * It is emitted as soon as we know the transfer failed definitely, like when a RefundTransfer is\n * received or the lock expires before revealing the secret. It notifies the user (e.g. pending\n * Promises) that the transfer failed and won't be paid (eventually, locked amount will be\n * recovered by expiring the lock).\n */\nexport const transferFailed = createStandardAction('transferFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/** A pending transfer isn't needed anymore and should be cleared from state */\nexport const transferClear = createStandardAction('transferClear')();\n/** A WithdrawRequest was received from partner */\nexport const withdrawReceiveRequest = createStandardAction('withdrawReceiveRequest')();\n/** A WithdrawConfirmation was signed and must be sent to partner */\nexport const withdrawSendConfirmation = createStandardAction('withdrawSendConfirmation')();\n//# sourceMappingURL=actions.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, set, unset, mapValues } from 'lodash/fp';\nimport { Zero, HashZero } from 'ethers/constants';\nimport { hexlify } from 'ethers/utils';\nimport { initialState } from '../state';\nimport { ChannelState } from '../channels/state';\nimport { channelClosed } from '../channels/actions';\nimport { getLocksroot } from './utils';\nimport { SignatureZero } from '../constants';\nimport { timed } from '../utils/types';\nimport { getBalanceProofFromEnvelopeMessage } from '../messages/utils';\nimport { transferSigned, transferSecret, transferProcessed, transferUnlocked, transferExpired, transferSecretReveal, transferRefunded, transferUnlockProcessed, transferExpireProcessed, transferClear, withdrawSendConfirmation, } from './actions';\n/**\n * Handles all transfers actions and requests\n *\n * @param state - Current RaidenState\n * @param action - RaidenAction to handle\n * @returns New RaidenState (or current, if action didn't change anything)\n */\nexport function transfersReducer(state = initialState, action) {\n    if (isActionOf(transferSecret, action)) {\n        if (action.meta.secrethash in state.secrets &&\n            state.secrets[action.meta.secrethash].registerBlock)\n            return state; // avoid storing without registerBlock if we already got with\n        return Object.assign({}, state, { secrets: Object.assign({}, state.secrets, { [action.meta.secrethash]: action.payload }) });\n    }\n    else if (isActionOf(transferSigned, action)) {\n        const transfer = action.payload.message, lock = transfer.lock, secrethash = lock.secrethash;\n        // transferSigned must be the first action, to init SentTransfer state\n        if (secrethash in state.sent)\n            return state;\n        const channelPath = ['channels', transfer.token_network_address, transfer.recipient];\n        let channel = get(channelPath, state);\n        if (!channel)\n            return state;\n        const locks = [...(channel.own.locks || []), lock], // append lock\n        locksroot = getLocksroot(locks);\n        if (transfer.locksroot !== locksroot ||\n            !transfer.nonce.eq((channel.own.balanceProof ? channel.own.balanceProof.nonce : Zero).add(1)) || // nonce must be next\n            !transfer.transferred_amount.eq(channel.own.balanceProof ? channel.own.balanceProof.transferredAmount : Zero) ||\n            !transfer.locked_amount.eq((channel.own.balanceProof ? channel.own.balanceProof.lockedAmount : Zero).add(lock.amount)))\n            return state;\n        channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { locks, \n                // set current/latest channel.own.balanceProof to LockedTransfer's\n                balanceProof: getBalanceProofFromEnvelopeMessage(transfer) }) });\n        const sentTransfer = { transfer: timed(transfer) };\n        state = set(channelPath, channel, state);\n        state = set(['sent', secrethash], sentTransfer, state);\n        return state;\n    }\n    else if (isActionOf(transferProcessed, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { transferProcessed: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(transferSecretReveal, action)) {\n        if (!(action.meta.secrethash in state.sent) || state.sent[action.meta.secrethash].secretReveal)\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { secretReveal: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(transferUnlocked, action)) {\n        const unlock = action.payload.message, secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent) || state.sent[secrethash].unlock)\n            return state;\n        const transfer = state.sent[secrethash].transfer[1], lock = transfer.lock;\n        const channelPath = ['channels', transfer.token_network_address, transfer.recipient];\n        let channel = get(channelPath, state);\n        if (!channel || !channel.own.locks || !channel.own.balanceProof)\n            return state;\n        const locks = channel.own.locks.filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks);\n        if (unlock.locksroot !== locksroot ||\n            !channel.own.balanceProof.nonce.add(1).eq(unlock.nonce) || // nonce must be next\n            !unlock.transferred_amount.eq(channel.own.balanceProof.transferredAmount.add(lock.amount)) ||\n            !unlock.locked_amount.eq(channel.own.balanceProof.lockedAmount.sub(lock.amount)))\n            return state;\n        channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { locks, \n                // set current/latest channel.own.balanceProof to Unlock's\n                balanceProof: getBalanceProofFromEnvelopeMessage(unlock) }) });\n        const sentTransfer = Object.assign({}, state.sent[secrethash], { unlock: timed(unlock) });\n        state = set(channelPath, channel, state);\n        state = set(['sent', secrethash], sentTransfer, state);\n        return state;\n    }\n    else if (isActionOf(transferExpired, action)) {\n        const lockExpired = action.payload.message, secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent) ||\n            state.sent[secrethash].unlock || // don't accept expire if already unlocked\n            state.sent[secrethash].lockExpired // already expired\n        )\n            return state;\n        const transfer = state.sent[secrethash].transfer[1], lock = transfer.lock;\n        const channelPath = ['channels', transfer.token_network_address, transfer.recipient];\n        let channel = get(channelPath, state);\n        if (!channel || !channel.own.locks || !channel.own.balanceProof)\n            return state;\n        const locks = channel.own.locks.filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks);\n        if (lockExpired.locksroot !== locksroot ||\n            !channel.own.balanceProof.nonce.add(1).eq(lockExpired.nonce) || // nonce must be next\n            !lockExpired.transferred_amount.eq(channel.own.balanceProof.transferredAmount) ||\n            !lockExpired.locked_amount.eq(channel.own.balanceProof.lockedAmount.sub(lock.amount)))\n            return state;\n        channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { locks, \n                // set current/latest channel.own.balanceProof to LockExpired's\n                balanceProof: getBalanceProofFromEnvelopeMessage(lockExpired) }) });\n        const sentTransfer = Object.assign({}, state.sent[secrethash], { lockExpired: timed(lockExpired) });\n        state = set(channelPath, channel, state);\n        state = set(['sent', secrethash], sentTransfer, state);\n        return state;\n    }\n    else if (isActionOf(transferUnlockProcessed, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { unlockProcessed: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(transferExpireProcessed, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { lockExpiredProcessed: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(transferRefunded, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { refund: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(channelClosed, action)) {\n        return Object.assign({}, state, { sent: mapValues((v) => \n            // if transfer was on this channel, persist CloseChannel txHash, else pass\n            v.transfer[1].channel_identifier.eq(action.payload.id) &&\n                v.transfer[1].recipient === action.meta.partner &&\n                v.transfer[1].token_network_address === action.meta.tokenNetwork\n                ? Object.assign({}, v, { channelClosed: timed(action.payload.txHash) }) : v)(state.sent) });\n    }\n    else if (isActionOf(transferClear, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        state = unset(['sent', action.meta.secrethash], state);\n        state = unset(['secrets', action.meta.secrethash], state);\n        return state;\n    }\n    else if (isActionOf(withdrawSendConfirmation, action)) {\n        const message = action.payload.message, channelPath = ['channels', action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(channelPath, state);\n        if (!channel || channel.state !== ChannelState.open)\n            return state;\n        // current own balanceProof, or zero balance proof, with some known fields filled\n        const balanceProof = channel.own.balanceProof || {\n            chainId: message.chain_id,\n            tokenNetworkAddress: action.meta.tokenNetwork,\n            channelId: message.channel_identifier,\n            // balance proof data\n            nonce: Zero,\n            transferredAmount: Zero,\n            lockedAmount: Zero,\n            locksroot: HashZero,\n            messageHash: HashZero,\n            signature: hexlify(SignatureZero),\n            sender: state.address,\n        };\n        // if it's the next nonce, update balance proof\n        if (message.nonce.eq(balanceProof.nonce.add(1)) && message.expiration.gt(state.blockNumber)) {\n            channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { balanceProof: Object.assign({}, balanceProof, { nonce: message.nonce }) }) });\n            state = set(channelPath, channel, state);\n        }\n        return state;\n    }\n    else\n        return state;\n}\n//# sourceMappingURL=reducer.js.map","import { channelsReducer } from './channels/reducer';\nimport { transportReducer } from './transport/reducer';\nimport { transfersReducer } from './transfers/reducer';\nimport { initialState } from './state';\nconst raidenReducers = {\n    channelsReducer,\n    transportReducer,\n    transfersReducer,\n};\n/**\n * Raiden root reducer\n * Apply action over each submodule root reducer in a flattened manner (iteratively).\n * Notice the submodules reducers aren't handled only a partial/deep property of the state\n * (as combineReducers), but instead receive the whole state, so they can act on any part of the\n * state. This approach is similar to `reduce-reducers` util.\n * Each submodule root reducer may then choose to split its concerns into nested or flattened\n * reducers (like this one).\n *\n * @param state - Current RaidenState to reduce\n * @param action - RaidenAction to apply over state\n * @returns New RaidenState\n */\nexport const raidenReducer = (state = initialState, action) => Object.values(raidenReducers).reduce((s, reducer) => reducer(s, action), state);\n//# sourceMappingURL=reducer.js.map","import { createStandardAction } from 'typesafe-actions';\n/** One-shot send payload.message to meta.address user in transport */\nexport const messageSend = createStandardAction('messageSend')();\n/**\n * Success action when message is actually sent\n * messageSend doesn't fail (except unexpectedly, like network errors), instead just hang there\n * until a suitable set of conditions is met, i.e.: there's a room for recipient's address, an\n * online validated user for this address, and it had joined that room, then the message is sent\n * and this success action is emitted. 'payload.message' and 'meta.address' should be kept strictly\n * equal to messageSend (even by reference, in case of Message), to ease filtering.\n * Useful to control retry without queueing multiple identical messages while the first is still\n * pending\n */\nexport const messageSent = createStandardAction('messageSent')();\n/**\n * payload.message was received on payload.ts (timestamp) from meta.address\n * payload.userId and payload.roomId are optional and specific to matrix transport, as sender info\n */\nexport const messageReceived = createStandardAction('messageReceived').map(({ text, message, ts, userId, roomId, }, meta) => ({ payload: { text, message, ts: ts || Date.now(), userId, roomId }, meta }));\n//# sourceMappingURL=actions.js.map","/**\n * Aggregate types and exported properties from actions from all modules\n */\nimport { pick } from 'lodash';\nimport { createStandardAction, getType } from 'typesafe-actions';\nimport * as ChannelsActions from './channels/actions';\nimport * as TransportActions from './transport/actions';\nimport * as MessagesActions from './messages/actions';\nimport * as TransfersActions from './transfers/actions';\nexport const raidenShutdown = createStandardAction('raidenShutdown')();\nexport const RaidenActions = Object.assign({ raidenShutdown }, ChannelsActions, TransportActions, MessagesActions, TransfersActions);\n/* Mapping { [type: string]: Action } of a subset of RaidenActions exposed as events */\nexport const RaidenEvents = pick(RaidenActions, [RaidenActions.raidenShutdown, RaidenActions.newBlock, RaidenActions.matrixPresenceUpdate].map(getType));\n//# sourceMappingURL=actions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getNetwork as parseNetwork } from 'ethers/utils/networks';\nimport { flatten, sortBy } from 'lodash';\nimport { fromEventPattern, merge, from, of, defer, EMPTY, combineLatest } from 'rxjs';\nimport { filter, first, map, switchMap, mergeMap } from 'rxjs/operators';\n/**\n * Like rxjs' fromEvent, but event can be an EventFilter\n *\n * @param target - Object to hook event listener, maybe a Provider or Contract\n * @param event - EventFilter or string representing the event to listen to\n * @param resultSelector - A map of events arguments to output parameters\n *      Default is to pass only first parameter\n * @returns Observable of target.on(event) events\n */\nexport function fromEthersEvent(target, event, resultSelector) {\n    return fromEventPattern((handler) => target.on(event, handler), (handler) => target.removeListener(event, handler), resultSelector);\n}\n/**\n * getEventsStream returns a stream of T-type tuples (arrays) from Contract's\n * events from filters. These events are polled since provider's [re]setEventsBlock to newest\n * polled block. If both 'fromBlock$' and 'lastSeenBlock$' are specified, also fetch past events\n * since fromBlock up to lastSeenBlock$ === provider.resetEventsBlock - 1\n * T must be a tuple-like type receiving all filters arguments plus the respective Event in the end\n *\n * @param contract - Contract source instance for filters, connected to a provider\n * @param filters - array of OR filters from tokenNetwork\n * @param fromBlock$ - Observable of a past blockNumber since when to fetch past events\n * @param lastSeenBlock$ - Observable of latest seen block, to be used as toBlock of pastEvents.\n *      lastSeenBlock + 1 is supposed to be first one fetched by contract.on newEvents$\n *      Both fromBlock$ and lastSeenBlock$ need to be set to fetch pastEvents$\n * @returns Observable of contract's events\n */\nexport function getEventsStream(contract, filters, fromBlock$, lastSeenBlock$) {\n    const provider = contract.provider;\n    // past events (in the closed-interval=[fromBlock, lastSeenBlock]),\n    // fetch once, sort by blockNumber, emit all, complete\n    let pastEvents$ = EMPTY;\n    if (fromBlock$ && lastSeenBlock$) {\n        pastEvents$ = combineLatest(fromBlock$, defer(() => (provider.blockNumber ? of(provider.blockNumber) : lastSeenBlock$))).pipe(first(), switchMap(([fromBlock, toBlock]) => Promise.all(filters.map(filter => provider.getLogs(Object.assign({}, filter, { fromBlock, toBlock }))))), \n        // flatten array of each getLogs query response and sort them\n        // emit log array elements as separate logs into stream (unwind)\n        mergeMap(logs => from(sortBy(flatten(logs), ['blockNumber']))), map(log => {\n            // parse log into [...args, event: Event] array,\n            // the same that contract.on events/callbacks\n            const parsed = contract.interface.parseLog(log);\n            if (!parsed)\n                return;\n            const args = Array.prototype.slice.call(parsed.values);\n            // not all parameters quite needed right now, but let's comply with the interface\n            const event = Object.assign({}, log, parsed, { args, removeListener: () => { }, getBlock: () => provider.getBlock(log.blockHash), getTransaction: () => provider.getTransaction(log.transactionHash), getTransactionReceipt: () => provider.getTransactionReceipt(log.transactionHash), decode: undefined });\n            return [...args, event];\n        }), filter((event) => !!event));\n    }\n    // new events (in open-interval=]lastSeenBlock, latest])\n    // where lastSeenBlock is the currentBlock at call time\n    // doesn't complete, keep emitting events for each new block (if any) until unsubscription\n    const newEvents$ = from(filters).pipe(mergeMap(filter => fromEthersEvent(contract, filter, (...args) => args)));\n    return merge(pastEvents$, newEvents$);\n}\n/**\n * Like Provider.getNetwork, but fetches every time instead of using cached property\n *\n * @param provider - Provider to fetch data from\n * @returns Promise of Network info\n */\nexport function getNetwork(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return parseNetwork(parseInt(yield provider.send('net_version', [])));\n    });\n}\n/**\n * Patch JsonRpcProvider.send to try personal_sign first, and fallback to eth_sign if it fails\n * Call it once on the provider instance\n *\n * @param provider - A JsonRpcProvider instance to patch\n */\nexport function patchSignSend(provider) {\n    const origSend = provider.send;\n    provider.send = function (method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (method === 'eth_sign') {\n                // try 'personal_sign' by default instead of 'eth_sign'\n                return origSend.apply(this, ['personal_sign', [params[1], params[0]]]).catch(err => {\n                    // on first error, if personal_sign isn't available\n                    if (err instanceof Error &&\n                        (err.message.includes('The method personal_sign does not exist') ||\n                            err.message.includes('Method personal_sign not supported'))) {\n                        provider.send = origSend; // un-patch\n                        return provider.send(method, params); // and retry with eth_sign\n                    }\n                    throw err; // else, re-raise\n                });\n            }\n            return origSend.apply(this, [method, params]);\n        });\n    };\n}\n//# sourceMappingURL=ethers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { from, of, EMPTY, merge, interval } from 'rxjs';\nimport { catchError, filter, map, mergeMap, mergeMapTo, tap, takeWhile, withLatestFrom, groupBy, exhaustMap, first, publishReplay, switchMap, } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { findKey, get, isEmpty, negate } from 'lodash';\nimport { hexlify, concat } from 'ethers/utils';\nimport { HashZero, Zero } from 'ethers/constants';\nimport { raidenShutdown } from '../actions';\nimport { ChannelState } from '../channels';\nimport { newBlock, tokenMonitored, channelOpenFailed, channelMonitored, channelDepositFailed, channelCloseFailed, channelSettleFailed, channelOpen, channelOpened, channelDeposit, channelClose, channelSettle, channelSettleable, channelDeposited, channelClosed, channelSettled, channelWithdrawn, } from './actions';\nimport { SignatureZero, ShutdownReason } from '../constants';\nimport { fromEthersEvent, getEventsStream, getNetwork } from '../utils/ethers';\nimport { encode } from '../utils/data';\n/**\n * Fetch current blockNumber, register for new block events and emit newBlock actions\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param provider - RaidenEpicDeps members\n * @returns Observable of newBlock actions\n */\nexport const initNewBlockEpic = ({}, {}, { provider }) => from(provider.getBlockNumber()).pipe(mergeMap(blockNumber => merge(of(blockNumber), fromEthersEvent(provider, 'block'))), map(blockNumber => newBlock({ blockNumber })));\n/**\n * Monitor registry for new token networks and monitor them\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param registryContract,contractsInfo - RaidenEpicDeps members\n * @returns Observable of tokenMonitored actions\n */\nexport const initMonitorRegistryEpic = (action$, state$, { registryContract, contractsInfo }) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(first(isActionOf(newBlock)), withLatestFrom(state$), switchMap(([{ payload: { blockNumber } }, state]) => merge(\n// monitor old (in case of empty tokens) and new registered tokens\n// and starts monitoring every registered token\ngetEventsStream(registryContract, [registryContract.filters.TokenNetworkCreated(null, null)], isEmpty(state.tokens)\n    ? of(contractsInfo.TokenNetworkRegistry.block_number)\n    : undefined, isEmpty(state.tokens) ? of(blockNumber) : undefined).pipe(withLatestFrom(state$), map(([[token, tokenNetwork, event], state]) => tokenMonitored({\n    token,\n    tokenNetwork,\n    fromBlock: !(token in state.tokens) ? event.blockNumber : undefined,\n}))), \n// monitor previously monitored tokens\nfrom(Object.entries(state.tokens)).pipe(map(([token, tokenNetwork]) => tokenMonitored({ token: token, tokenNetwork }))))))));\n/**\n * Monitor channels previously already on state\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of channelMonitored actions\n */\nexport const initMonitorChannelsEpic = ({}, state$) => state$.pipe(first(), mergeMap(function* (state) {\n    for (const [tokenNetwork, obj] of Object.entries(state.channels)) {\n        for (const [partner, channel] of Object.entries(obj)) {\n            if (channel.state === ChannelState.opening)\n                continue;\n            yield channelMonitored({ id: channel.id }, { tokenNetwork: tokenNetwork, partner: partner });\n        }\n    }\n}));\n/**\n * Monitor provider to ensure account continues to be available and network stays the same\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param address,network,provider - RaidenEpicDeps members\n * @returns Observable of raidenShutdown actions\n */\nexport const initMonitorProviderEpic = ({}, {}, { address, network, provider }) => from(provider.listAccounts()).pipe(\n// at init time, check if our address is in provider's accounts list\n// if not, it means Signer is a local Wallet or another non-provider-side account\n// if yes, poll accounts every 1s and monitors if address is still there\n// also, every 1s poll current provider network and monitors if it's the same\n// if any check fails, emits RaidenShutdownAction, nothing otherwise\n// Poll reason from: https://github.com/MetaMask/faq/blob/master/DEVELOPERS.md\n// first/init-time check\nmap(accounts => accounts.includes(address)), mergeMap(isProviderAccount => interval(provider.pollingInterval).pipe(mergeMap(() => merge(\n// if isProviderAccount, also polls and monitors accounts list\nisProviderAccount\n    ? from(provider.listAccounts()).pipe(mergeMap(accounts => !accounts.includes(address)\n        ? of(raidenShutdown({ reason: ShutdownReason.ACCOUNT_CHANGED }))\n        : EMPTY))\n    : EMPTY, \n// unconditionally monitors network changes\nfrom(getNetwork(provider)).pipe(mergeMap(curNetwork => curNetwork.chainId !== network.chainId\n    ? of(raidenShutdown({ reason: ShutdownReason.NETWORK_CHANGED }))\n    : EMPTY)))))));\n/**\n * Starts monitoring a token network for events\n * When this action goes through (because a former or new token registry event was deteceted),\n * subscribe to events and emit respective actions to the stream. Currently:\n * - ChannelOpened events with us or by us\n *\n * @param action$ - Observable of tokenMonitored actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of channelOpened actions\n */\nexport const tokenMonitoredEpic = (action$, state$, { address, getTokenNetworkContract }) => state$.pipe(map(state => state.blockNumber), publishReplay(1, undefined, blockNumber$ => action$.pipe(filter(isActionOf(tokenMonitored)), groupBy(action => action.payload.tokenNetwork), mergeMap(grouped$ => grouped$.pipe(exhaustMap(action => {\n    const tokenNetworkContract = getTokenNetworkContract(action.payload.tokenNetwork);\n    const filters = [\n        tokenNetworkContract.filters.ChannelOpened(null, address, null, null),\n        tokenNetworkContract.filters.ChannelOpened(null, null, address, null),\n    ];\n    return getEventsStream(tokenNetworkContract, filters, \n    // if first time monitoring this token network,\n    // fetch TokenNetwork's pastEvents since registry deployment as fromBlock$\n    action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(filter(([, p1, p2]) => p1 === address || p2 === address), map(([id, p1, p2, settleTimeout, event]) => channelOpened({\n        id: id.toNumber(),\n        settleTimeout: settleTimeout.toNumber(),\n        openBlock: event.blockNumber,\n        isFirstParticipant: address === p1,\n        txHash: event.transactionHash,\n    }, {\n        tokenNetwork: tokenNetworkContract.address,\n        partner: address === p1 ? p2 : p1,\n    })));\n}))))));\n/**\n * Monitors a channel for channel Events\n * Can be called either at initialization time (for previously known channels on previously\n * monitored TokenNetwork) or by a new detected ChannelOpenedAction. On the later case,\n * also fetches events since Channel.openBlock.\n * Currently monitored events:\n * - ChannelNewDeposit, fires a channelDeposited action\n * - ChannelClosedEvent, fires a channelClosed action\n * - ChannelSettledEvent, fires a channelSettled action and completes that channel observable\n *\n * @param action$ - Observable of channelMonitored actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of channelDeposited,channelClosed,channelSettled actions\n */\nexport const channelMonitoredEpic = (action$, state$, { getTokenNetworkContract }) => state$.pipe(map(state => state.blockNumber), publishReplay(1, undefined, blockNumber$ => action$.pipe(filter(isActionOf(channelMonitored)), groupBy(action => `${action.payload.id}#${action.meta.partner}@${action.meta.tokenNetwork}`), mergeMap(grouped$ => grouped$.pipe(exhaustMap(action => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    // TODO: instead of one filter for each event, optimize to one filter per channel\n    // it requires ethers to support OR filters for topics:\n    // https://github.com/ethers-io/ethers.js/issues/437\n    // can we hook to provider.on directly and decoding the events ourselves?\n    const depositFilter = tokenNetworkContract.filters.ChannelNewDeposit(action.payload.id, null, null), withdrawFilter = tokenNetworkContract.filters.ChannelWithdraw(action.payload.id, null, null), closedFilter = tokenNetworkContract.filters.ChannelClosed(action.payload.id, null, null, null), settledFilter = tokenNetworkContract.filters.ChannelSettled(action.payload.id, null, null, null, null);\n    return merge(getEventsStream(tokenNetworkContract, [depositFilter], \n    // if channelMonitored triggered by ChannelOpenedAction,\n    // fetch Channel's pastEvents since channelOpened blockNumber as fromBlock$\n    action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, participant, totalDeposit, event]) => channelDeposited({\n        id: id.toNumber(),\n        participant,\n        totalDeposit,\n        txHash: event.transactionHash,\n    }, action.meta))), getEventsStream(tokenNetworkContract, [withdrawFilter], action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, participant, totalWithdraw, event]) => channelWithdrawn({\n        id: id.toNumber(),\n        participant,\n        totalWithdraw,\n        txHash: event.transactionHash,\n    }, action.meta))), getEventsStream(tokenNetworkContract, [closedFilter], action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, participant, , , event]) => channelClosed({\n        id: id.toNumber(),\n        participant,\n        closeBlock: event.blockNumber,\n        txHash: event.transactionHash,\n    }, action.meta))), getEventsStream(tokenNetworkContract, [settledFilter], action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, , , , , event]) => channelSettled({\n        id: id.toNumber(),\n        settleBlock: event.blockNumber,\n        txHash: event.transactionHash,\n    }, action.meta)))).pipe(\n    // takeWhile tends to broad input to generic Action. We need to narrow it by hand\n    takeWhile(negate(isActionOf(channelSettled)), true));\n}))))));\n/**\n * A channelOpen action requested by user\n * Needs to be called on a previously monitored tokenNetwork. Calls TokenNetwork.openChannel\n * with given parameters. If tx goes through successfuly, stop as ChannelOpened success action\n * will instead be detected and fired by tokenMonitoredEpic. If anything detectable goes wrong,\n * fires a ChannnelOpenActionFailed instead\n *\n * @param action$ - Observable of channelOpen actions\n * @param state$ - Observable of RaidenStates\n * @param getTokenNetworkContract - RaidenEpicDeps members\n * @returns Observable of channelOpenFailed actions\n */\nexport const channelOpenEpic = (action$, state$, { getTokenNetworkContract, config$ }) => action$.pipe(filter(isActionOf(channelOpen)), withLatestFrom(state$, config$), mergeMap(([action, state, config]) => {\n    const tokenNetwork = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channelState = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n        'state',\n    ]);\n    // proceed only if channel is in 'opening' state, set by this action\n    if (channelState !== ChannelState.opening)\n        return of(channelOpenFailed(new Error(`Invalid channel state: ${channelState}`), action.meta));\n    // send openChannel transaction !!!\n    return from(tokenNetwork.functions.openChannel(state.address, action.meta.partner, action.payload.settleTimeout || config.settleTimeout)).pipe(mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`openChannel transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelOpenedAction will be detected and handled by tokenMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelOpenFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelOpenFailed(error, action.meta))));\n}));\n/**\n * When we see a new ChannelOpenedAction event, starts monitoring channel\n *\n * @param action$ - Observable of channelOpened actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of channelMonitored actions\n */\nexport const channelOpenedEpic = (action$, state$) => action$.pipe(filter(isActionOf(channelOpened)), withLatestFrom(state$), \n// proceed only if channel is in 'open' state and a deposit is required\nfilter(([action, state]) => {\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    return !!channel && channel.state === ChannelState.open;\n}), map(([action]) => channelMonitored({\n    id: action.payload.id,\n    fromBlock: action.payload.openBlock,\n}, action.meta)));\n/**\n * A ChannelDeposit action requested by user\n * Needs to be called on a previously monitored channel. Calls Token.approve for TokenNetwork\n * and then set respective setTotalDeposit. If all tx go through successfuly, stop as\n * ChannelDeposited success action will instead be detected and reacted by\n * channelMonitoredEpic. If anything detectable goes wrong, fires a ChannelDepositActionFailed\n * instead\n *\n * @param action$ - Observable of channelDeposit actions\n * @param state$ - Observable of RaidenStates\n * @param address,getTokenContract,getTokenNetworkContract - RaidenEpicDeps members\n * @returns Observable of channelDepositFailed actions\n */\nexport const channelDepositEpic = (action$, state$, { address, getTokenContract, getTokenNetworkContract }) => action$.pipe(filter(isActionOf(channelDeposit)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const token = findKey(state.tokens, tn => tn === action.meta.tokenNetwork);\n    if (!token) {\n        const error = new Error(`token for tokenNetwork \"${action.meta.tokenNetwork}\" not found`);\n        return of(channelDepositFailed(error, action.meta));\n    }\n    const tokenContract = getTokenContract(token);\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel || channel.state !== ChannelState.open || channel.id === undefined) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'open' state`);\n        return of(channelDepositFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    // send approve transaction\n    return from(tokenContract.functions.approve(action.meta.tokenNetwork, action.payload.deposit))\n        .pipe(tap(tx => console.log(`sent approve tx \"${tx.hash}\" to \"${token}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`token \"${token}\" approve transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), tap(txHash => console.log(`approve tx \"${txHash}\" successfuly mined!`)))\n        .pipe(withLatestFrom(state$), mergeMap(([, state]) => \n    // send setTotalDeposit transaction\n    tokenNetworkContract.functions.setTotalDeposit(channelId, address, state.channels[action.meta.tokenNetwork][action.meta.partner].own.deposit.add(action.payload.deposit), action.meta.partner, { gasLimit: 100e3 })), tap(tx => console.log(`sent setTotalDeposit tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" setTotalDeposit transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), tap(txHash => console.log(`setTotalDeposit tx \"${txHash}\" successfuly mined!`)), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelDepositedAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelDepositFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelDepositFailed(error, action.meta))));\n}));\n/**\n * A ChannelClose action requested by user\n * Needs to be called on an opened or closing (for retries) channel.\n * If tx goes through successfuly, stop as ChannelClosed success action will instead be\n * detected and reacted by channelMonitoredEpic. If anything detectable goes wrong, fires a\n * ChannelCloseActionFailed instead\n *\n * @param action$ - Observable of channelClose actions\n * @param state$ - Observable of RaidenStates\n * @param getTokenNetworkContract - RaidenEpicDeps members\n * @returns Observable of channelCloseFailed actions\n */\nexport const channelCloseEpic = (action$, state$, { address, network, getTokenNetworkContract, signer }) => action$.pipe(filter(isActionOf(channelClose)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel ||\n        !(channel.state === ChannelState.open || channel.state === ChannelState.closing) ||\n        !channel.id) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'open' or 'closing' state`);\n        return of(channelCloseFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    const balanceHash = HashZero, nonce = Zero, additionalHash = HashZero, nonClosingSignature = hexlify(SignatureZero);\n    // TODO: enable this after we're able to receive transfers\n    // if (channel.partner.balanceProof) {\n    //   balanceHash = createBalanceHash(\n    //     channel.partner.balanceProof.transferredAmount,\n    //     channel.partner.balanceProof.lockedAmount,\n    //     channel.partner.balanceProof.locksroot,\n    //   );\n    //   nonce = channel.partner.balanceProof.nonce;\n    //   additionalHash = channel.partner.balanceProof.messageHash;\n    //   nonClosingSignature = channel.partner.balanceProof.signature;\n    // }\n    const closingMessage = concat([\n        encode(action.meta.tokenNetwork, 20),\n        encode(network.chainId, 32),\n        encode(1, 32),\n        encode(channelId, 32),\n        encode(balanceHash, 32),\n        encode(nonce, 32),\n        encode(additionalHash, 32),\n        encode(nonClosingSignature, 65),\n    ]); // UInt8Array of 277 bytes\n    // sign counter balance proof (while we don't receive transfers yet, it's always zero),\n    // then send closeChannel transaction with our signature\n    return from(signer.signMessage(closingMessage)).pipe(mergeMap(closingSignature => tokenNetworkContract.functions.closeChannel(channelId, action.meta.partner, address, balanceHash, nonce, additionalHash, nonClosingSignature, closingSignature)), tap(tx => console.log(`sent closeChannel tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" closeChannel transaction \"${tx.hash}\" failed`);\n        console.log(`closeChannel tx \"${tx.hash}\" successfuly mined!`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelClosedAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelCloseFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelCloseFailed(error, action.meta))));\n}));\n/**\n * A ChannelSettle action requested by user\n * Needs to be called on an settleable or settling (for retries) channel.\n * If tx goes through successfuly, stop as ChannelSettled success action will instead be\n * detected and reacted by channelMonitoredEpic. If anything detectable goes wrong, fires a\n * ChannelSettleActionFailed instead\n *\n * @param action$ - Observable of channelSettle actions\n * @param state$ - Observable of RaidenStates\n * @param address,getTokenNetworkContract - RaidenEpicDeps members\n * @returns Observable of channelSettleFailed actions\n */\nexport const channelSettleEpic = (action$, state$, { address, getTokenNetworkContract }) => action$.pipe(filter(isActionOf(channelSettle)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel ||\n        !(channel.state === ChannelState.settleable || channel.state === ChannelState.settling) ||\n        !channel.id) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'settleable' or 'settling' state`);\n        return of(channelSettleFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    const zeroBalanceProof = {\n        transferredAmount: Zero,\n        lockedAmount: Zero,\n        locksroot: HashZero,\n    };\n    let part1 = Object.assign({ address: action.meta.partner }, (channel.partner.balanceProof || zeroBalanceProof)), part2 = Object.assign({ address }, (channel.own.balanceProof || zeroBalanceProof));\n    if (channel.isFirstParticipant)\n        [part1, part2] = [part2, part1];\n    // send settleChannel transaction\n    return from(tokenNetworkContract.functions.settleChannel(channelId, part1.address, part1.transferredAmount, part1.lockedAmount, part1.locksroot, part2.address, part2.transferredAmount, part2.lockedAmount, part2.locksroot)).pipe(tap(tx => console.log(`sent settleChannel tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" settleChannel transaction \"${tx.hash}\" failed`);\n        console.log(`settleChannel tx \"${tx.hash}\" successfuly mined!`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelSettledAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelSettleFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelSettleFailed(error, action.meta))));\n}));\n/**\n * Process newBlocks, emits ChannelSettleableAction if any closed channel is now settleable\n *\n * @param action$ - Observable of newBlock actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of channelSettleable actions\n */\nexport const channelSettleableEpic = (action$, state$) => action$.pipe(filter(isActionOf(newBlock)), withLatestFrom(state$), mergeMap(function* ([{ payload: { blockNumber }, }, state,]) {\n    for (const tokenNetwork in state.channels) {\n        for (const partner in state.channels[tokenNetwork]) {\n            const channel = state.channels[tokenNetwork][partner];\n            if (channel.state === ChannelState.closed &&\n                channel.settleTimeout && // closed channels always have settleTimeout & closeBlock set\n                channel.closeBlock &&\n                blockNumber > channel.closeBlock + channel.settleTimeout) {\n                yield channelSettleable({ settleableBlock: blockNumber }, { tokenNetwork: tokenNetwork, partner: partner });\n            }\n        }\n    }\n}));\n//# sourceMappingURL=epics.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport fetch from 'cross-fetch';\nimport { encodeUri } from 'matrix-js-sdk/lib/utils';\n/**\n * From a yaml list string, return as Array\n * E.g. yamlListToArray(`\n * # comment\n *   - test1\n *   - test2\n *   - test3\n * `) === ['test1', 'test2', 'test3']\n *\n * @param yml - String containing only YAML list\n * @returns List of strings inside yml-encoded text\n */\nexport function yamlListToArray(yml) {\n    // match all strings starting with optional spaces followed by a dash + space\n    // capturing only the content of the list item, trimming spaces\n    const reg = /^\\s*-\\s*(.+?)\\s*$/gm;\n    const results = [];\n    let match;\n    while ((match = reg.exec(yml))) {\n        results.push(match[1]);\n    }\n    return results;\n}\n/**\n * Given a server name (with or without schema and port), return HTTP GET round trip time\n *\n * @param server - Server name with or without schema\n * @returns Promise to a { server, rtt } object, where `rtt` may be NaN\n */\nexport function matrixRTT(server) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = server;\n        if (!url.includes('://')) {\n            url = `https://${url}`;\n        }\n        url += `/_matrix/client/versions`;\n        let start = Date.now();\n        try {\n            const resp = yield fetch(url);\n            if (resp.status < 200 || resp.status >= 300)\n                throw NaN;\n        }\n        catch (e) {\n            start = NaN; // return will also be NaN\n        }\n        return { server, rtt: Date.now() - start };\n    });\n}\n/**\n * Return server name without schema or path\n *\n * @param server - any URL\n * @returns server URL with domain and port (if present), without schema, paths or query params\n */\nexport function getServerName(server) {\n    const match = /^(?:\\w*:?\\/\\/)?([^/#?&]+)/.exec(server);\n    return match && match[1];\n}\n/**\n * MatrixClient doesn't expose this API, but it does exist, so we create it here\n *\n * @param matrix - an already setup and started MatrixClient\n * @param userId - to fetch status/presence from\n * @returns Promise to object containing status data\n */\nexport function getUserPresence(matrix, userId) {\n    const path = encodeUri('/presence/$userId/status', { $userId: userId });\n    return matrix._http.authedRequest(undefined, 'GET', path);\n}\n//# sourceMappingURL=matrix.js.map","/**\n * Simple Map-based LRU cache\n *\n * @param max - Maximum size of cache\n */\nexport class LruCache {\n    constructor(max) {\n        this.values = new Map();\n        this.max = max;\n    }\n    get(key) {\n        const entry = this.values.get(key);\n        if (entry) {\n            // peek the entry, re-insert for LRU strategy\n            this.values.delete(key);\n            this.values.set(key, entry);\n        }\n        return entry;\n    }\n    put(key, value) {\n        if (this.values.size >= this.max) {\n            // least-recently used cache eviction strategy\n            const keyToDelete = this.values.keys().next().value;\n            this.values.delete(keyToDelete);\n        }\n        this.values.set(key, value);\n    }\n}\n//# sourceMappingURL=lru.js.map","import { filter, scan, startWith, share } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { memoize } from 'lodash';\nimport { matrixPresenceUpdate } from './actions';\n/**\n * Helper to map/get an aggregated Presences observable from action$ bus\n * Known presences as { address: <last seen MatrixPresenceUpdateAction> } mapping\n * It's memoized and shared, so all subscriptions share the same mapped/output object\n *\n * @param action$ - Observable\n * @returns Observable of aggregated Presences from subscription to now\n */\nexport const getPresences$ = memoize((action$) => action$.pipe(filter(isActionOf(matrixPresenceUpdate)), scan(\n// scan all presence update actions and populate/output a per-address mapping\n(presences, update) => (Object.assign({}, presences, { [update.meta.address]: update })), {}), startWith({}), share()));\n//# sourceMappingURL=utils.js.map","/* eslint-disable @typescript-eslint/camelcase */\nimport { combineLatest, from, of, EMPTY, fromEvent, timer, ReplaySubject, throwError, } from 'rxjs';\nimport { catchError, concatMap, delay, distinctUntilChanged, filter, groupBy, ignoreElements, map, mergeMap, multicast, withLatestFrom, scan, startWith, switchMap, take, takeUntil, tap, toArray, mapTo, finalize, first, } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { find, get, minBy, sortBy } from 'lodash';\nimport { getAddress, verifyMessage } from 'ethers/utils';\nimport { createClient } from 'matrix-js-sdk';\nimport fetch from 'cross-fetch';\nimport { channelMonitored } from '../channels/actions';\nimport { MessageType, Processed, SecretRequest, SecretReveal, Signed, } from '../messages/types';\nimport { decodeJsonMessage, encodeJsonMessage, getMessageSigner, signMessage, } from '../messages/utils';\nimport { messageSend, messageReceived, messageSent } from '../messages/actions';\nimport { getServerName, getUserPresence, matrixRTT, yamlListToArray } from '../utils/matrix';\nimport { LruCache } from '../utils/lru';\nimport { matrixPresenceUpdate, matrixRequestMonitorPresenceFailed, matrixRoom, matrixRoomLeave, matrixSetup, matrixRequestMonitorPresence, } from './actions';\nimport { getPresences$ } from './utils';\n// unavailable just means the user didn't do anything over a certain amount of time, but they're\n// still there, so we consider the user as available then\nconst AVAILABLE = ['online', 'unavailable'];\nconst userRe = /^@(0x[0-9a-f]{40})[.:]/i;\n/**\n * Initialize matrix transport\n * The matrix client instance will be outputed to RaidenEpicDeps.matrix$ AsyncSubject\n * The setup info (including credentials, for persistence) will be the matrixSetup output action\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param address,network,signer,matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixSetup generated by initializing matrix client\n */\nexport const initMatrixEpic = ({}, state$, { address, network, signer, matrix$, config$ }) => state$.pipe(first(), withLatestFrom(config$), mergeMap(([state, { matrixServer, matrixServerLookup }]) => {\n    const server = get(state, ['transport', 'matrix', 'server']), setup = get(state, ['transport', 'matrix', 'setup']);\n    if (server && (!matrixServer || matrixServer === server)) {\n        // reuse server&setup from state iff set and either matrixServer equal or undefined\n        return of({ server, setup });\n    }\n    else if (matrixServer) {\n        // [re]auth on [new] server if matrixServer is set and different from state or first run\n        return of({ server: matrixServer, setup: undefined });\n    }\n    else {\n        // fetch servers list and use the one with shortest http round trip time (rtt)\n        return from(fetch(matrixServerLookup)).pipe(mergeMap(response => {\n            if (!response.ok)\n                return throwError(new Error(`Could not fetch server list from \"${matrixServerLookup}\" => ${response.status}`));\n            return response.text();\n        }), mergeMap(text => from(yamlListToArray(text))), mergeMap(server => matrixRTT(server)), toArray(), map(rtts => sortBy(rtts, ['rtt'])), map(rtts => {\n            if (!rtts[0] || typeof rtts[0].rtt !== 'number' || isNaN(rtts[0].rtt))\n                throw new Error(`Could not contact any matrix servers: ${JSON.stringify(rtts)}`);\n            return rtts[0].server;\n        }), map(server => ({\n            server: server.includes('://') ? server : `https://${server}`,\n            setup: undefined,\n        })));\n    }\n}), mergeMap(function ({ server, setup, }) {\n    let { userId, accessToken, deviceId } = setup || {};\n    if (setup) {\n        // if matrixSetup was already issued before, and credentials are already in state\n        const matrix = createClient({\n            baseUrl: server,\n            userId,\n            accessToken,\n            deviceId,\n        });\n        return of({ matrix, server, setup });\n    }\n    else {\n        const serverName = getServerName(server);\n        if (!serverName)\n            return throwError(new Error(`Could not get serverName from \"${server}\"`));\n        const matrix = createClient({ baseUrl: server });\n        const userName = address.toLowerCase();\n        userId = `@${userName}:${serverName}`;\n        // create password as signature of serverName, then try login or register\n        return from(signer.signMessage(serverName)).pipe(mergeMap(password => from(matrix.loginWithPassword(userName, password)).pipe(catchError(() => from(matrix.register(userName, password))))), tap(result => {\n            // matrix.register implementation doesn't set returned credentials\n            // which would require an unnecessary additional login request if we didn't\n            // set it here, and login doesn't set deviceId, so we set all credential\n            // parameters again here after successful login or register\n            matrix.deviceId = result.device_id;\n            matrix._http.opts.accessToken = result.access_token;\n            matrix.credentials = {\n                userId: result.user_id,\n            };\n            // set vars for later MatrixSetupAction\n            accessToken = result.access_token;\n            deviceId = result.device_id;\n        }), \n        // displayName must be signature of full userId for our messages to be accepted\n        mergeMap(() => signer.signMessage(userId)), map(signedUserId => ({\n            matrix,\n            server,\n            setup: {\n                userId: userId,\n                accessToken: accessToken,\n                deviceId: deviceId,\n                displayName: signedUserId,\n            },\n        })));\n    }\n}), mergeMap(({ matrix, server, setup }) => \n// ensure displayName is set even on restarts\nfrom(matrix.setDisplayName(setup.displayName)).pipe(\n// ensure we joined discovery room\nmergeMap(() => matrix.joinRoom(`#raiden_${network.name || network.chainId}_discovery:${getServerName(server)}`)), mapTo({ matrix, server, setup }))), tap(({ matrix }) => {\n    // like Promise.resolve for AsyncSubjects\n    matrix$.next(matrix);\n    matrix$.complete();\n}), map(({ server, setup }) => matrixSetup({ server, setup })));\n/**\n * Start MatrixClient sync polling when detecting MatrixSetupAction, **after** init time fromEvents\n * were already registered.\n * This is required to ensure init-time events registering are done before initial sync, to avoid\n * losing one-shot events, like invitations.\n *\n * @param action$ - Observable of matrixSetup actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixStartEpic = (action$, {}, { matrix$ }) => action$.pipe(filter(isActionOf(matrixSetup)), switchMap(() => matrix$), tap(matrix => console.log('MATRIX client', matrix)), mergeMap(matrix => matrix.startClient({ initialSyncLimit: 0 })), ignoreElements());\n/**\n * Calls matrix.stopClient when raiden is shutting down, i.e. action$ completes\n *\n * @param action$ - Observable of matrixSetup actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixShutdownEpic = (action$, {}, { matrix$ }) => matrix$.pipe(mergeMap(matrix => action$.pipe(finalize(() => matrix.stopClient()))), ignoreElements());\n/**\n * Handles MatrixRequestMonitorPresenceAction and emits a MatrixPresenceUpdateAction\n * If presence is already known, emits it, else fetch from user profile\n * Even if the presence stays the same, we emit a MatrixPresenceUpdateAction, as this may be a\n * request being waited by a promise or something like that\n * IOW: every request should be followed by a presence update or a failed action, but presence\n * updates may happen later without new requests (e.g. when the user goes offline)\n *\n * @param action$ - Observable of matrixRequestMonitorPresence actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of presence updates or fail action\n */\nexport const matrixMonitorPresenceEpic = (action$, {}, { matrix$ }) => action$.pipe(filter(isActionOf(matrixRequestMonitorPresence)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(getPresences$(action$)), \n// TODO: groupBy(address)+concatMap serialize presence fetching\nmergeMap(([{ action, matrix }, presences]) => {\n    if (action.meta.address in presences)\n        // we already monitored/saw this user's presence\n        return of(presences[action.meta.address]);\n    const validUsers = [];\n    for (const user of matrix.getUsers()) {\n        if (!user.displayName)\n            continue;\n        if (!user.presence)\n            continue;\n        let recovered;\n        try {\n            const match = userRe.exec(user.userId);\n            if (!match || getAddress(match[1]) !== action.meta.address)\n                continue;\n            recovered = verifyMessage(user.userId, user.displayName);\n            if (!recovered || recovered !== action.meta.address)\n                continue;\n        }\n        catch (err) {\n            continue;\n        }\n        validUsers.push(user);\n    }\n    // IFF we see a cached/stored user (matrix.getUsers), with displayName and presence already\n    // populated, which displayName signature verifies to our address of interest,\n    // then construct and return the MatrixPresenceUpdateAction from the stored data\n    if (validUsers.length > 0) {\n        const user = minBy(validUsers, 'lastPresenceTs');\n        return of(matrixPresenceUpdate({ userId: user.userId, available: AVAILABLE.includes(user.presence) }, action.meta));\n    }\n    // if anything failed up to here, go the slow path: searchUserDirectory + getUserPresence\n    return from(\n    // search user directory for any user containing the address of interest in its userId\n    matrix.searchUserDirectory({ term: action.meta.address.toLowerCase() })).pipe(\n    // for every result matches, verify displayName signature is address of interest\n    map(({ results }) => {\n        const validUsers = [];\n        for (const user of results) {\n            if (!user.display_name)\n                continue;\n            try {\n                const match = userRe.exec(user.user_id);\n                if (!match || getAddress(match[1]) !== action.meta.address)\n                    continue;\n                const recovered = verifyMessage(user.user_id, user.display_name);\n                if (!recovered || recovered !== action.meta.address)\n                    continue;\n            }\n            catch (err) {\n                continue;\n            }\n            validUsers.push(user.user_id);\n        }\n        if (validUsers.length === 0)\n            // if no valid user could be found, throw an error to be handled below\n            throw new Error(`Could not find any user with valid signature for ${action.meta.address} in ${JSON.stringify(results)}`);\n        else\n            return validUsers;\n    }), mergeMap(userIds => from(userIds)), mergeMap(userId => getUserPresence(matrix, userId)\n        .then(presence => (Object.assign({}, presence, { user_id: userId })))\n        .catch(err => {\n        console.log('Error fetching user presence, ignoring:', err);\n        return { presence: '', user_id: userId };\n    })), filter(presence => !!presence && !!presence.presence), toArray(), \n    // for all matched/verified users, get its presence through dedicated API\n    // it's required because, as the user events could already have been handled and\n    // filtered out by matrixPresenceUpdateEpic because it wasn't yet a user-of-interest,\n    // we could have missed presence updates, then we need to fetch it here directly,\n    // and from now on, that other epic will monitor its updates, and sort by most recently\n    // seen user\n    map(presences => minBy(presences, 'last_active_ago')), map(({ presence, user_id: userId }) => matrixPresenceUpdate({\n        userId,\n        available: AVAILABLE.includes(presence),\n    }, action.meta)), catchError(err => of(matrixRequestMonitorPresenceFailed(err, action.meta))));\n}));\n/**\n * Monitor peers matrix presence from User.presence events\n * We aggregate all users of interest (i.e. for which a monitor request was emitted at some point)\n * and emit presence updates for any presence change happening to a user validating to this address\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of presence updates\n */\nexport const matrixPresenceUpdateEpic = (action$, {}, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix presence events\nswitchMap(matrix => \n// matrix's 'User.presence' sometimes fail to fire, but generic 'event' is always fired,\n// and User (retrieved via matrix.getUser) is up-to-date before 'event' emits\nfromEvent(matrix, 'event').pipe(map(event => ({ event, matrix })))), filter(({ event }) => event.getType() === 'm.presence'), \n// parse peer address from userId\nmap(({ event, matrix }) => {\n    // as 'event' is emitted after user is (created and) updated, getUser always returns it\n    const user = matrix.getUser(event.getSender()), match = userRe.exec(user.userId), peerAddress = match && match[1];\n    // getAddress will convert any valid address into checksummed-format\n    return {\n        user,\n        matrix,\n        peerAddress: (peerAddress && getAddress(peerAddress)),\n    };\n}), \n// filter out events without userId in the right format (startWith hex-address)\nfilter(({ user, peerAddress }) => !!(user.presence && peerAddress)), withLatestFrom(\n// observable of all addresses whose presence monitoring was requested since init\naction$.pipe(filter(isActionOf(matrixRequestMonitorPresence)), scan((toMonitor, request) => toMonitor.add(request.meta.address), new Set()), startWith(new Set())), \n// known presences as { address: <last seen MatrixPresenceUpdateAction> } mapping\ngetPresences$(action$)), \n// filter out events from users we don't care about\n// i.e.: presence monitoring never requested\nfilter(([{ peerAddress }, toMonitor]) => toMonitor.has(peerAddress)), mergeMap(([{ user, matrix, peerAddress }, , presences]) => {\n    // first filter can't tell typescript this property will always be set!\n    const userId = user.userId, address = peerAddress, presence = user.presence, available = AVAILABLE.includes(presence);\n    if (address in presences &&\n        presences[address].payload.userId === userId &&\n        presences[address].payload.available === available)\n        // even if signature verification passes, this wouldn't change presence, so return early\n        return EMPTY;\n    // fetch profile info if user doesn't contain a displayName\n    const displayName$ = user.displayName\n        ? of(user.displayName)\n        : from(matrix.getProfileInfo(userId, 'displayname')).pipe(map(profile => profile.displayname), catchError(() => of(undefined)));\n    return displayName$.pipe(map(displayName => {\n        // errors raised here will be logged and ignored on catchError below\n        if (!displayName)\n            throw new Error(`Could not get displayName of \"${userId}\"`);\n        // ecrecover address, validating displayName is the signature of the userId\n        const recovered = verifyMessage(userId, displayName);\n        if (!recovered || recovered !== peerAddress)\n            throw new Error(`Could not verify displayName signature of \"${userId}\": got \"${recovered}\"`);\n        return recovered;\n    }), map(address => matrixPresenceUpdate({ userId, available, ts: user.lastPresenceTs }, { address })));\n}), catchError(err => (console.log('Error validating presence event, ignoring', err), EMPTY)));\n/**\n * Upon receiving a MessageSendAction, ensure there's a room for the given address\n * Requires address to have its presence monitored.\n *\n * @param action$ - Observable of messageSend actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixRoom actions\n */\nexport const matrixCreateRoomEpic = (action$, state$, { matrix$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, which is called only at outer next and subscribe delayed\nmulticast(new ReplaySubject(1), presencesStateReplay$ => \n// actual output observable, handles MessageSendAction serially and create room if needed\naction$.pipe(filter(isActionOf(messageSend)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), \n// concatMap is used to prevent bursts of messages for a given address (eg. on startup)\n// of creating multiple rooms for same address\nconcatMap(({ action, matrix }) => \n// presencesStateReplay$+take(1) acts like withLatestFrom with cached result\npresencesStateReplay$.pipe(\n// wait for user to be monitored\nfilter(([presences]) => action.meta.address in presences), take(1), \n// if there's already a room state for address and it's present in matrix, skip\nfilter(([, state]) => !get(state, ['transport', 'matrix', 'rooms', action.meta.address, 0])), \n// else, create a room, invite known user and dispatch the respective MatrixRoomAction\n// to store it in state\nmergeMap(([presences]) => matrix.createRoom({\n    visibility: 'private',\n    invite: [presences[action.meta.address].payload.userId],\n})), map(({ room_id: roomId }) => matrixRoom({ roomId }, action.meta)))))));\n/**\n * Invites users coming online to rooms we may have with them\n *\n * @param action$ - Observable of matrixPresenceUpdate actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixInviteEpic = (action$, state$, { matrix$ }) => action$.pipe(filter(isActionOf(matrixPresenceUpdate)), filter(action => action.payload.available), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(state$), mergeMap(([{ action, matrix }, state]) => {\n    const roomId = get(state, [\n        'transport',\n        'matrix',\n        'rooms',\n        action.meta.address,\n        0,\n    ]);\n    if (roomId) {\n        const room = matrix.getRoom(roomId);\n        if (room) {\n            const member = room.getMember(action.payload.userId);\n            if (!member)\n                return from(matrix.invite(roomId, action.payload.userId));\n        }\n    }\n    return EMPTY;\n}), ignoreElements());\n/**\n * Handle invites sent to us and accepts them iff sent by a monitored user\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixRoom actions\n */\nexport const matrixHandleInvitesEpic = (action$, {}, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix invite events\nswitchMap(matrix => fromEvent(matrix, 'RoomMember.membership', (event, member) => ({ event, member, matrix }))), filter(\n// filter for invite events to us\n({ member, matrix }) => member.userId === matrix.getUserId() && member.membership === 'invite'), withLatestFrom(getPresences$(action$)), mergeMap(([{ event, member, matrix }, presences]) => {\n    const sender = event.getSender(), cachedPresence = find(presences, p => p.payload.userId === sender), senderPresence$ = cachedPresence\n        ? of(cachedPresence)\n        : action$.pipe(\n        // as these membership events can come up quite early, we delay continue processing\n        // them a while, to see if the sender is of interest to us (presence monitored)\n        filter(isActionOf(matrixPresenceUpdate)), filter(a => a.payload.userId === sender), take(1), \n        // Don't wait more than some arbitrary time for this sender presence update to show\n        // up; completes without emitting anything otherwise, ending this pipeline.\n        // This also works as a filter to continue processing invites only for monitored\n        // users, as it'll complete without emitting if no MatrixPresenceUpdateAction is\n        // found for sender in time\n        takeUntil(timer(30e3)));\n    return senderPresence$.pipe(map(senderPresence => ({ matrix, member, senderPresence })));\n}), mergeMap(({ matrix, member, senderPresence }) => \n// join room and emit MatrixRoomAction to make it default/first option for sender address\nfrom(matrix.joinRoom(member.roomId, { syncRoom: true })).pipe(map(() => matrixRoom({ roomId: member.roomId }, { address: senderPresence.meta.address })))));\n/**\n * Leave any excess room for a partner when creating or joining a new one.\n * Excess rooms are the ones behind a given threshold (currently 3) in the address's rooms queue\n *\n * @param action$ - Observable of matrixRoom actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixRoomLeave actions\n */\nexport const matrixLeaveExcessRoomsEpic = (action$, state$, { matrix$ }) => action$.pipe(\n// act whenever a new room is added to the address queue in state\nfilter(isActionOf(matrixRoom)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(state$), mergeMap(([{ action, matrix }, state]) => {\n    const THRESHOLD = 3;\n    const rooms = state.transport.matrix.rooms[action.meta.address];\n    return from(rooms.filter(({}, i) => i >= THRESHOLD)).pipe(mergeMap(roomId => matrix.leave(roomId).then(() => roomId)), map(roomId => matrixRoomLeave({ roomId }, action.meta)));\n}));\n/**\n * Leave any room which is neither discovery/global nor known to state as a room for a user of\n * interest\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixLeaveUnknownRoomsEpic = ({}, state$, { matrix$, network }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix Room events\nswitchMap(matrix => fromEvent(matrix, 'Room').pipe(map(room => ({ matrix, roomId: room.roomId })))), delay(30e3), // this room may become known later for some reason, so wait a little\nwithLatestFrom(state$), \n// filter for leave events to us\nfilter(([{ matrix, roomId }, state]) => {\n    const room = matrix.getRoom(roomId);\n    if (!room)\n        return false; // room already gone while waiting\n    if (room.name && room.name.match(`#raiden_${network.name || network.chainId}_discovery:`))\n        return false;\n    const rooms = get(state, ['transport', 'matrix', 'rooms'], {});\n    for (const address in rooms) {\n        for (const roomId of rooms[address]) {\n            if (roomId === room.roomId)\n                return false;\n        }\n    }\n    return true;\n}), mergeMap(([{ matrix, roomId }]) => matrix.leave(roomId)), ignoreElements());\n/**\n * If we leave a room for any reason (eg. a kick event), purge it from state\n * Notice excess rooms left by matrixLeaveExcessRoomsEpic are cleaned before the matrix event is\n * detected, and then no MatrixRoomLeaveAction is emitted for them by this epic.\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixRoomLeave actions\n */\nexport const matrixCleanLeftRoomsEpic = ({}, state$, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix invite events\nswitchMap(matrix => fromEvent(matrix, 'Room.myMembership', (room, membership) => ({ room, membership, matrix }))), \n// filter for leave events to us\nfilter(({ membership }) => membership === 'leave'), withLatestFrom(state$), mergeMap(function* ([{ room }, state]) {\n    const rooms = get(state, ['transport', 'matrix', 'rooms'], {});\n    for (const address in rooms) {\n        for (const roomId of rooms[address]) {\n            if (roomId === room.roomId) {\n                yield matrixRoomLeave({ roomId }, { address: address });\n            }\n        }\n    }\n}));\n/**\n * Handles a MessageSendAction and send its message to the first room on queue for address\n *\n * @param action$ - Observable of messageSend actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixMessageSendEpic = (action$, state$, { matrix$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, called only at outer emit and subscription delayed\nmulticast(new ReplaySubject(1), presencesStateReplay$ => \n// actual output observable, gets/wait for the user to be in a room, and then sendMessage\naction$.pipe(filter(isActionOf(messageSend)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), groupBy(({ action }) => action.meta.address), \n// merge all inner/grouped observables, so different user's \"queues\" can be parallel\nmergeMap(grouped$ => \n// per-user \"queue\"\ngrouped$.pipe(\n// each per-user \"queue\" (observable) are processed serially (because concatMap)\n// TODO: batch all pending messages in a single send message request, with retry\nconcatMap(({ action, matrix }) => presencesStateReplay$.pipe(\n// wait for address to be monitored, online and roomId to be in state.\n// ReplaySubject ensures it happens immediatelly if all conditions are satisfied\nfilter(([presences, state]) => action.meta.address in presences &&\n    presences[action.meta.address].payload.available &&\n    get(state, ['transport', 'matrix', 'rooms', action.meta.address, 0])), map(([, state]) => state.transport.matrix.rooms[action.meta.address][0]), distinctUntilChanged(), \n// get/wait room object for roomId\nswitchMap(roomId => {\n    const room = matrix.getRoom(roomId);\n    // wait for the room state to be populated (happens after createRoom resolves)\n    return room\n        ? of(room)\n        : fromEvent(matrix, 'Room').pipe(filter(room => room.roomId === roomId), take(1));\n}), \n// get up-to-date/last presences at this point in time, which may have been updated\nwithLatestFrom(presencesStateReplay$), \n// get room member for partner userId\nmergeMap(([room, [presences]]) => {\n    // get latest known userId for address at this point in time\n    const userId = presences[action.meta.address].payload.userId;\n    const member = room.getMember(userId);\n    // if it's already present in room, return its membership\n    if (member && member.membership === 'join')\n        return of(member);\n    // else, wait for the user to join our newly created room\n    return fromEvent(matrix, 'RoomMember.membership', ({}, member) => member).pipe(\n    // use up-to-date presences again, which may have been updated while\n    // waiting for member join event (e.g. user roamed and was re-invited)\n    withLatestFrom(presencesStateReplay$), filter(([member, [presences]]) => member.roomId === room.roomId &&\n        member.userId === presences[action.meta.address].payload.userId &&\n        member.membership === 'join'), take(1), map(([member]) => member));\n}), take(1), // use first room/user which meets all requirements/filters so far\n// send message!\nmergeMap(member => {\n    const body = typeof action.payload.message === 'string'\n        ? action.payload.message\n        : encodeJsonMessage(action.payload.message);\n    return matrix.sendEvent(member.roomId, 'm.room.message', { body, msgtype: 'm.text' }, '');\n}), map(() => messageSent(action.payload, action.meta)))))))));\n/**\n * Subscribe to matrix messages and emits MessageReceivedAction upon receiving a valid message from\n * an user of interest (one valid signature from an address we monitor) in a room we have for them\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of messageReceived actions\n */\nexport const matrixMessageReceivedEpic = (action$, state$, { matrix$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, called only at outer emit and subscription delayed\nmulticast(new ReplaySubject(1), presencesStateReplay$ => \n// actual output observable, gets/wait for the user to be in a room, and then sendMessage\nmatrix$.pipe(\n// when matrix finishes initialization, register to matrix timeline events\nswitchMap(matrix => fromEvent(matrix, 'Room.timeline', (event, room) => ({ matrix, event, room }))), \n// filter for text messages from other users\nfilter(({ event, matrix }) => event.getType() === 'm.room.message' &&\n    event.getSender() !== matrix.getUserId() &&\n    event.event.content.msgtype === 'm.text'), mergeMap(({ event, room }) => presencesStateReplay$.pipe(filter(([presences, state]) => {\n    const presence = find(presences, ['payload.userId', event.getSender()]);\n    if (!presence)\n        return false;\n    const rooms = get(state, ['transport', 'matrix', 'rooms', presence.meta.address], []);\n    if (!rooms.includes(room.roomId))\n        return false;\n    return true;\n}), take(1), \n// take up to an arbitrary timeout to presence status for the sender\n// AND the room in which this message was sent to be in sender's address room queue\ntakeUntil(timer(30e3)), mergeMap(function* ([presences]) {\n    const presence = find(presences, ['payload.userId', event.getSender()]);\n    for (const line of (event.event.content.body || '').split('\\n')) {\n        let message;\n        try {\n            message = decodeJsonMessage(line);\n            const signer = getMessageSigner(message);\n            if (signer !== presence.meta.address)\n                throw new Error(`Signature mismatch: sender=${presence.meta.address} != signer=${signer}`);\n        }\n        catch (err) {\n            console.warn(`Could not decode message: ${line}: ${err}`);\n            message = undefined;\n        }\n        yield messageReceived({\n            text: line,\n            message,\n            ts: event.event.origin_server_ts,\n            userId: presence.payload.userId,\n            roomId: room.roomId,\n        }, presence.meta);\n    }\n}))))));\n/**\n * If matrix received a message from user in a room we have with them, but not the first on queue,\n * update queue so this room goes to the front and will be used as send message room from now on\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of matrixRoom actions\n */\nexport const matrixMessageReceivedUpdateRoomEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), filter(([action, state]) => {\n    const rooms = get(state, ['transport', 'matrix', 'rooms', action.meta.address], []);\n    return (!!action.payload.roomId &&\n        rooms.includes(action.payload.roomId) &&\n        rooms[0] !== action.payload.roomId);\n}), map(([action]) => matrixRoom({ roomId: action.payload.roomId }, action.meta)));\n/**\n * Channel monitoring triggers matrix presence monitoring for partner\n *\n * @param action$ - Observable of RaidenActions\n * @returns Observable of matrixRequestMonitorPresence actions\n */\nexport const matrixMonitorChannelPresenceEpic = (action$) => action$.pipe(filter(isActionOf(channelMonitored)), map(action => matrixRequestMonitorPresence(undefined, { address: action.meta.partner })));\n/**\n * Sends Delivered for specific messages\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param signer - RaidenEpicDeps members\n * @returns Observable of messageSend actions\n */\nexport const deliveredEpic = (action$, {}, { signer }) => {\n    const cache = new LruCache(32);\n    return action$.pipe(filter(isActionOf(messageReceived)), concatMap(action => {\n        const message = action.payload.message;\n        if (!message ||\n            !(Signed(Processed).is(message) ||\n                Signed(SecretRequest).is(message) ||\n                Signed(SecretReveal).is(message)))\n            return EMPTY;\n        const msgId = message.message_identifier, key = msgId.toString();\n        const cached = cache.get(key);\n        if (cached)\n            return of(messageSend({ message: cached }, action.meta));\n        const delivered = {\n            type: MessageType.DELIVERED,\n            delivered_message_identifier: msgId,\n        };\n        return from(signMessage(signer, delivered)).pipe(tap(signed => cache.put(key, signed)), map(signed => messageSend({ message: signed }, action.meta)));\n    }));\n};\n//# sourceMappingURL=epics.js.map","import { distinctUntilChanged, map } from 'rxjs/operators';\n/**\n * Util to split a combineLatest tuple Observable to a tuple of Observables of each member\n * Util when combining observables to e.g. multicast, and then willing to handle them separately\n * inside the multicast selector.\n *\n * @param tuple$ - An Observable of tuples of up to 4 values\n * @returns 2-4-tuple of Observables reflecting each value of the tuple\n */\nexport function splitCombined(tuple$) {\n    return [\n        tuple$.pipe(map(t => t[0]), distinctUntilChanged()),\n        tuple$.pipe(map(t => t[1]), distinctUntilChanged()),\n        tuple$.pipe(map(t => t[2]), distinctUntilChanged()),\n        tuple$.pipe(map(t => t[3]), distinctUntilChanged()),\n    ];\n}\n//# sourceMappingURL=rxjs.js.map","/* eslint-disable @typescript-eslint/camelcase */\nimport { combineLatest, EMPTY, from, merge, of } from 'rxjs';\nimport { catchError, concatMap, delay, exhaustMap, filter, first, ignoreElements, map, mergeMap, publishReplay, repeatWhen, take, takeUntil, tap, withLatestFrom, } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { bigNumberify } from 'ethers/utils';\nimport { Zero, One } from 'ethers/constants';\nimport { findKey, get } from 'lodash';\nimport { splitCombined } from '../utils/rxjs';\nimport { LruCache } from '../utils/lru';\nimport { getPresences$ } from '../transport/utils';\nimport { messageReceived, messageSend, messageSent } from '../messages/actions';\nimport { LockedTransfer, LockExpired, MessageType, Processed, RefundTransfer, SecretRequest, SecretReveal, Signed, WithdrawExpired, WithdrawRequest, } from '../messages/types';\nimport { getBalanceProofFromEnvelopeMessage, signMessage } from '../messages/utils';\nimport { ChannelState } from '../channels/state';\nimport { channelClose, channelClosed, newBlock } from '../channels/actions';\nimport { transfer, transferExpire, transferExpired, transferExpireFailed, transferExpireProcessed, transferFailed, transferProcessed, transferred, transferRefunded, transferSecret, transferSecretRequest, transferSecretReveal, transferSigned, transferUnlock, transferUnlocked, transferUnlockProcessed, withdrawReceiveRequest, withdrawSendConfirmation, } from './actions';\nimport { getLocksroot, getSecrethash, makeMessageId, makePaymentId } from './utils';\n/**\n * Return the next nonce for a (possibly missing) balanceProof, or else BigNumber(1)\n *\n * @param balanceProof - Balance proof to increase nonce from\n * @returns Increased nonce, or One if no balance proof provided\n */\nfunction nextNonce(balanceProof) {\n    if (balanceProof)\n        return balanceProof.nonce.add(1);\n    else\n        return One;\n}\n/**\n * Create an observable to compose and sign a LockedTransfer message/transferSigned action\n * As it's an async observable which depends on state and may return an action which changes it,\n * the returned observable must be subscribed in a serialized context that ensures non-concurrent\n * write access to the channel's balance proof (e.g. concatMap)\n *\n * @param presences$ - Observable of address to last matrixPresenceUpdate mapping\n * @param state$ - Observable of current state\n * @param action - transfer request action to be sent\n * @param network,address,signer - RaidenEpicDeps members\n * @returns Observable of transferSigned|transferSecret|transferFailed actions\n */\nfunction makeAndSignTransfer(presences$, state$, action, { network, address, signer, config$ }) {\n    return combineLatest(presences$, state$, config$).pipe(first(), mergeMap(([presences, state, config]) => {\n        if (action.meta.secrethash in state.sent) {\n            // don't throw to avoid emitting transferFailed, to just wait for already pending transfer\n            console.error('transfer already present', action.meta);\n            return EMPTY;\n        }\n        if (!(action.payload.target in presences))\n            throw new Error('target not monitored');\n        if (!presences[action.payload.target].payload.available)\n            throw new Error('target not available/online');\n        const secret = action.payload.secret;\n        if (secret && getSecrethash(secret) !== action.meta.secrethash) {\n            throw new Error('secrethash does not match provided secret');\n        }\n        // find a route\n        const availableRouteCapacities = new Map();\n        for (const [key, channel] of Object.entries(state.channels[action.payload.tokenNetwork])) {\n            const partner = key;\n            // capacity is own deposit - (own trasferred + locked) + (partner transferred)\n            const capacity = channel.own.deposit\n                .sub(channel.own.balanceProof\n                ? channel.own.balanceProof.transferredAmount.add(channel.own.balanceProof.lockedAmount)\n                : Zero)\n                .add(\n            // only relevant once we can receive from partner\n            channel.partner.balanceProof ? channel.partner.balanceProof.transferredAmount : Zero);\n            if (channel.state !== ChannelState.open) {\n                console.debug(`transfer: channel with \"${partner}\" in state \"${channel.state}\" instead of \"${ChannelState.open}\"`);\n            }\n            else if (capacity.lt(action.payload.amount)) {\n                console.debug(`transfer: channel with \"${partner}\" without enough capacity (${capacity.toString()})`);\n            }\n            else if (!(partner in presences) || !presences[partner].payload.available) {\n                console.debug(`transfer: partner \"${partner}\" not available in transport`);\n            }\n            else {\n                availableRouteCapacities.set(partner, capacity);\n            }\n        }\n        const sortedRecipients = Array.from(availableRouteCapacities.keys()).sort((a, b) => {\n            // prioritize a direct available route\n            if (a === action.payload.target)\n                return -1;\n            if (b === action.payload.target)\n                return 1;\n            // else, sort descending on capacity (larger capacity first)\n            const capA = availableRouteCapacities.get(a), capB = availableRouteCapacities.get(b);\n            if (capA.gt(capB))\n                return -1;\n            if (capA.lt(capB))\n                return 1;\n            else\n                return 0;\n        });\n        const recipient = sortedRecipients[0];\n        if (!recipient)\n            throw new Error('Could not find an online partner for tokenNetwork with enough capacity');\n        if (recipient !== action.payload.target)\n            throw new Error('Mediated transfers are currently not supported');\n        const channel = state.channels[action.payload.tokenNetwork][recipient];\n        // check below never fail, because of for loop filter, just for type narrowing\n        if (channel.state !== ChannelState.open)\n            throw new Error('not open');\n        let paymentId = action.payload.paymentId;\n        if (!paymentId)\n            paymentId = makePaymentId();\n        const lock = {\n            amount: action.payload.amount,\n            expiration: bigNumberify(state.blockNumber + config.revealTimeout * 2),\n            secrethash: action.meta.secrethash,\n        }, locks = [...(channel.own.locks || []), lock], locksroot = getLocksroot(locks), fee = action.payload.fee || Zero, msgId = makeMessageId(), token = findKey(state.tokens, tn => tn === action.payload.tokenNetwork);\n        const message = {\n            type: MessageType.LOCKED_TRANSFER,\n            message_identifier: msgId,\n            chain_id: bigNumberify(network.chainId),\n            token_network_address: action.payload.tokenNetwork,\n            channel_identifier: bigNumberify(channel.id),\n            nonce: nextNonce(channel.own.balanceProof),\n            transferred_amount: (channel.own.balanceProof\n                ? channel.own.balanceProof.transferredAmount\n                : Zero),\n            locked_amount: (channel.own.balanceProof\n                ? channel.own.balanceProof.lockedAmount\n                : Zero).add(action.payload.amount),\n            locksroot,\n            payment_identifier: paymentId,\n            token,\n            recipient,\n            lock,\n            target: action.payload.target,\n            initiator: address,\n            fee,\n            metadata: {\n                routes: [{ route: [action.payload.target] }],\n            },\n        };\n        return from(signMessage(signer, message)).pipe(mergeMap(function* (signed) {\n            // besides transferSigned, also yield transferSecret (for registering) if we know it\n            if (secret)\n                yield transferSecret({ secret }, { secrethash: action.meta.secrethash });\n            yield transferSigned({ message: signed }, { secrethash: action.meta.secrethash });\n            // messageSend LockedTransfer handled by transferSignedRetryMessageEpic\n        }));\n    }), catchError(err => of(transferFailed(err, action.meta))));\n}\n/**\n * Create an observable to compose and sign a Unlock message/transferUnlocked action\n * As it's an async observable which depends on state and may return an action which changes it,\n * the returned observable must be subscribed in a serialized context that ensures non-concurrent\n * write access to the channel's balance proof (e.g. concatMap)\n *\n * @param state$ - Observable of current state\n * @param action - transferUnlock request action to be sent\n * @param signer - RaidenEpicDeps members\n * @returns Observable of transferUnlocked actions\n */\nfunction makeAndSignUnlock(state$, action, { signer }) {\n    return state$.pipe(first(), mergeMap(state => {\n        const secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent))\n            throw new Error('unknown transfer');\n        const transfer = state.sent[secrethash].transfer[1], channel = get(state.channels, [\n            transfer.token_network_address,\n            transfer.recipient,\n        ]);\n        // shouldn't happen, channel close clears transfers, but unlock may already have been queued\n        if (!channel || channel.state !== ChannelState.open || !channel.own.balanceProof)\n            throw new Error('channel gone, not open or no balanceProof');\n        let signed$;\n        if (state.sent[secrethash].unlock) {\n            // unlock already signed, use cached\n            signed$ = of(state.sent[secrethash].unlock[1]);\n        }\n        else {\n            // don't forget to check after signature too, may have expired by then\n            if (transfer.lock.expiration.lte(state.blockNumber))\n                throw new Error('lock expired');\n            const locks = (channel.own.locks || []).filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks), msgId = makeMessageId();\n            const message = {\n                type: MessageType.UNLOCK,\n                message_identifier: msgId,\n                chain_id: transfer.chain_id,\n                token_network_address: transfer.token_network_address,\n                channel_identifier: transfer.channel_identifier,\n                nonce: nextNonce(channel.own.balanceProof),\n                transferred_amount: channel.own.balanceProof.transferredAmount.add(transfer.lock.amount),\n                locked_amount: channel.own.balanceProof.lockedAmount.sub(transfer.lock.amount),\n                locksroot,\n                payment_identifier: transfer.payment_identifier,\n                secret: state.secrets[action.meta.secrethash].secret,\n            };\n            signed$ = from(signMessage(signer, message));\n        }\n        return signed$.pipe(withLatestFrom(state$), mergeMap(function* ([signed, state]) {\n            if (transfer.lock.expiration.lte(state.blockNumber))\n                throw new Error('lock expired!');\n            if (state.sent[secrethash].channelClosed)\n                throw new Error('channel closed!');\n            yield transferUnlocked({ message: signed }, action.meta);\n            // messageSend Unlock handled by transferUnlockedRetryMessageEpic\n            // we don't check if transfer was refunded. If partner refunded the transfer but still\n            // forwarded the payment, we still act honestly and unlock if they revealed\n        }));\n    }), catchError(err => {\n        console.error('Error when trying to unlock after SecretReveal', err);\n        return EMPTY;\n    }));\n}\n/**\n * Create an observable to compose and sign a LockExpired message/transferExpired action\n * As it's an async observable which depends on state and may return an action which changes it,\n * the returned observable must be subscribed in a serialized context that ensures non-concurrent\n * write access to the channel's balance proof (e.g. concatMap)\n *\n * @param state$ - Observable of current state\n * @param action - transfer request action to be sent\n * @param signer - RaidenEpicDeps members\n * @returns Observable of transferExpired|transferExpireFailed actions\n */\nfunction makeAndSignLockExpired(state$, action, { signer }) {\n    return state$.pipe(first(), mergeMap(state => {\n        const secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent))\n            throw new Error('unknown transfer');\n        const transfer = state.sent[secrethash].transfer[1], channel = get(state.channels, [\n            transfer.token_network_address,\n            transfer.recipient,\n        ]);\n        if (!channel || channel.state !== ChannelState.open || !channel.own.balanceProof)\n            throw new Error('channel gone, not open or no balanceProof');\n        let signed$;\n        if (state.sent[secrethash].lockExpired) {\n            // lockExpired already signed, use cached\n            signed$ = of(state.sent[secrethash].lockExpired[1]);\n        }\n        else {\n            if (transfer.lock.expiration.gte(state.blockNumber))\n                throw new Error('lock not yet expired');\n            else if (state.sent[secrethash].unlock)\n                throw new Error('transfer already unlocked');\n            const locks = (channel.own.locks || []).filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks), msgId = makeMessageId();\n            const message = {\n                type: MessageType.LOCK_EXPIRED,\n                message_identifier: msgId,\n                chain_id: transfer.chain_id,\n                token_network_address: transfer.token_network_address,\n                channel_identifier: transfer.channel_identifier,\n                nonce: nextNonce(channel.own.balanceProof),\n                transferred_amount: channel.own.balanceProof.transferredAmount,\n                locked_amount: channel.own.balanceProof.lockedAmount.sub(transfer.lock.amount),\n                locksroot,\n                recipient: transfer.recipient,\n                secrethash,\n            };\n            signed$ = from(signMessage(signer, message));\n        }\n        return signed$.pipe(\n        // messageSend LockExpired handled by transferExpiredRetryMessageEpic\n        map(signed => transferExpired({ message: signed }, action.meta)));\n    }), catchError(err => of(transferExpireFailed(err, action.meta))));\n}\n/**\n * Create an observable to compose and sign a [[WithdrawConfirmation]] message\n *\n * Validate we're inside expiration timeout, channel exists and is open, and that total_withdraw is\n * less than or equal withdrawable amount (while we don't receive, partner.deposit +\n * own.transferredAmount).\n * We need it inside [[transferGenerateAndSignEnvelopeMessageEpic]] concatMap/lock because we read\n * and change the 'nonce', even though WithdrawConfirmation doesn't carry a full balanceProof.\n * Also, instead of storing the messages in state and retrying, we just cache it and send cached\n * signed message on each received request.\n *\n * TODO: once we're able to receive transfers, instead of considering only own.transferredAmount,\n * we must also listen to ChannelWithdraw events, store it alongside pending withdraw requests and\n * take that into account before accepting a transfer and also total balance/capacity for accepting\n * a total_withdraw from a WithdrawRequest.\n *\n * @param state$ - Observable of current state\n * @param action - Withdraw request which caused this handling\n * @param signer - RaidenEpicDeps members\n * @param cache - A Map to store and reuse previously Signed<WithdrawConfirmation>\n * @returns Observable of transferExpired|transferExpireFailed actions\n */\nfunction makeAndSignWithdrawConfirmation(state$, action, { signer }, cache) {\n    return state$.pipe(first(), mergeMap(state => {\n        const request = action.payload.message;\n        const channel = get(state.channels, [\n            action.meta.tokenNetwork,\n            action.meta.partner,\n        ]);\n        // check channel is in valid state and requested total_withdraw is valid\n        // withdrawable amount is: total_withdraw <= partner.deposit + own.transferredAmount\n        if (!channel ||\n            channel.state !== ChannelState.open ||\n            !request.channel_identifier.eq(channel.id))\n            throw new Error('channel gone or not open');\n        else if (request.expiration.lte(state.blockNumber))\n            throw new Error('WithdrawRequest expired');\n        else if (request.total_withdraw.gt(channel.partner.deposit.add(channel.own.balanceProof ? channel.own.balanceProof.transferredAmount : Zero)))\n            throw new Error('invalid total_withdraw, greater than partner.deposit + own.transferredAmount');\n        let signed$;\n        const key = request.message_identifier.toString();\n        const cached = cache.get(key);\n        // ensure all parameters are equal the cached one before returning it, or else sign again\n        if (cached &&\n            cached.chain_id.eq(request.chain_id) &&\n            cached.token_network_address === request.token_network_address &&\n            cached.channel_identifier.eq(request.channel_identifier) &&\n            cached.participant === request.participant &&\n            cached.total_withdraw.eq(request.total_withdraw) &&\n            cached.expiration.eq(request.expiration)) {\n            signed$ = of(cached);\n        }\n        else {\n            const confirmation = {\n                type: MessageType.WITHDRAW_CONFIRMATION,\n                message_identifier: request.message_identifier,\n                chain_id: request.chain_id,\n                token_network_address: request.token_network_address,\n                channel_identifier: request.channel_identifier,\n                participant: request.participant,\n                total_withdraw: request.total_withdraw,\n                nonce: nextNonce(channel.own.balanceProof),\n                expiration: request.expiration,\n            };\n            signed$ = from(signMessage(signer, confirmation)).pipe(tap(signed => cache.put(key, signed)));\n        }\n        return signed$.pipe(map(signed => withdrawSendConfirmation({ message: signed }, action.meta)));\n    }), catchError(err => {\n        console.error('Error trying to handle WithdrawRequest, ignoring:', err);\n        return EMPTY;\n    }));\n}\n/**\n * Serialize creation and signing of BalanceProof-changing messages or actions\n * Actions which change any data in any channel balance proof must only ever be created reading\n * state inside the serialization flow provided by the concatMap, and also be composed and produced\n * inside it (inner, subscribed observable)\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param deps - RaidenEpicDeps\n * @returns Observable of output actions for this epic\n */\nexport const transferGenerateAndSignEnvelopeMessageEpic = (action$, state$, deps) => combineLatest(getPresences$(action$), state$).pipe(publishReplay(1, undefined, presencesStateReplay$ => {\n    const [presences$, state$] = splitCombined(presencesStateReplay$), withdrawCache = new LruCache(32);\n    return action$.pipe(filter(isActionOf([transfer, transferUnlock, transferExpire, withdrawReceiveRequest])), concatMap(action => isActionOf(transfer, action)\n        ? makeAndSignTransfer(presences$, state$, action, deps)\n        : isActionOf(transferUnlock, action)\n            ? makeAndSignUnlock(state$, action, deps)\n            : isActionOf(transferExpire, action)\n                ? makeAndSignLockExpired(state$, action, deps)\n                : makeAndSignWithdrawConfirmation(state$, action, deps, withdrawCache)));\n}));\n/**\n * Handles a transferSigned action and retry messageSend until transfer is gone (completed with\n * success or error) OR Processed message for LockedTransfer received.\n * transferSigned for pending LockedTransfer's may be re-emitted on startup for pending transfer,\n * to start retrying sending the message again until stop condition is met.\n *\n * @param action$ - Observable of transferSigned actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of messageSend actions\n */\nexport const transferSignedRetryMessageEpic = (action$, state$) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(filter(isActionOf(transferSigned)), mergeMap(action => {\n    const secrethash = action.meta.secrethash, signed = action.payload.message, send = messageSend({ message: signed }, { address: signed.recipient });\n    // emit Send once immediatelly, then wait until respective messageSent, then completes\n    const sendOnceAndWaitSent$ = merge(of(send), action$.pipe(filter(a => isActionOf(messageSent, a) &&\n        a.payload.message === send.payload.message &&\n        a.meta.address === send.meta.address), take(1), \n    // don't output messageSent, just wait for it before completing\n    ignoreElements()));\n    return sendOnceAndWaitSent$.pipe(\n    // Resubscribe/retry every 30s after messageSend succeeds with messageSent\n    // Notice first (or any) messageSend can wait for a long time before succeeding, as it\n    // waits for address's user in transport to be online and joined room before actually\n    // sending the message. That's why repeatWhen emits/resubscribe only some time after\n    // sendOnceAndWaitSent$ completes, instead of a plain 'interval'\n    // TODO: configurable retry delay, possibly use an exponential backoff timeout strat\n    repeatWhen(completed$ => completed$.pipe(delay(30e3))), \n    // until transferProcessed received OR transfer completed OR channelClosed\n    takeUntil(state$.pipe(filter(state => !!state.sent[secrethash].transferProcessed ||\n        !!state.sent[secrethash].unlockProcessed ||\n        !!state.sent[secrethash].lockExpiredProcessed ||\n        !!state.sent[secrethash].channelClosed))));\n}))));\n/**\n * Handles a transferUnlocked action and retry messageSend until transfer is gone (completed with\n * success or error).\n * transferUnlocked for pending Unlock's may be re-emitted on startup for pending transfer, to\n * start retrying sending the message again until stop condition is met.\n *\n * @param action$ - Observable of transferUnlocked actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of messageSend actions\n */\nexport const transferUnlockedRetryMessageEpic = (action$, state$) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(filter(isActionOf(transferUnlocked)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const secrethash = action.meta.secrethash;\n    if (!(secrethash in state.sent))\n        return EMPTY; // shouldn't happen\n    const unlock = action.payload.message, transfer = state.sent[secrethash].transfer[1], send = messageSend({ message: unlock }, { address: transfer.recipient });\n    // emit Send once immediatelly, then wait until respective messageSent, then completes\n    const sendOnceAndWaitSent$ = merge(of(send), action$.pipe(filter(a => isActionOf(messageSent, a) &&\n        a.payload.message === send.payload.message &&\n        a.meta.address === send.meta.address), take(1), \n    // don't output messageSent, just wait for it before completing\n    ignoreElements()));\n    return sendOnceAndWaitSent$.pipe(\n    // Resubscribe/retry every 30s after messageSend succeeds with messageSent\n    // Notice first (or any) messageSend can wait for a long time before succeeding, as it\n    // waits for address's user in transport to be online and joined room before actually\n    // sending the message. That's why repeatWhen emits/resubscribe only some time after\n    // sendOnceAndWaitSent$ completes, instead of a plain 'interval'\n    // TODO: configurable retry delay, possibly use an exponential backoff timeout strat\n    repeatWhen(completed$ => completed$.pipe(delay(30e3))), \n    // until transferUnlockProcessed OR channelClosed\n    takeUntil(state$.pipe(filter(state => !!state.sent[secrethash].unlockProcessed ||\n        !!state.sent[secrethash].channelClosed))));\n}))));\n/**\n * Handles a transferExpired action and retry messageSend until transfer is gone (completed with\n * success or error).\n * transferExpired for pending LockExpired's may be re-emitted on startup for pending transfer, to\n * start retrying sending the message again until stop condition is met.\n *\n * @param action$ - Observable of transferExpired actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of messageSend actions\n */\nexport const transferExpiredRetryMessageEpic = (action$, state$) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(filter(isActionOf(transferExpired)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const secrethash = action.meta.secrethash;\n    if (!(secrethash in state.sent))\n        return EMPTY; // shouldn't happen\n    const lockExpired = action.payload.message, send = messageSend({ message: lockExpired }, { address: state.sent[secrethash].transfer[1].recipient });\n    // emit Send once immediatelly, then wait until respective messageSent, then completes\n    const sendOnceAndWaitSent$ = merge(of(send), action$.pipe(filter(a => isActionOf(messageSent, a) &&\n        a.payload.message === send.payload.message &&\n        a.meta.address === send.meta.address), take(1), \n    // don't output messageSent, just wait for it before completing\n    ignoreElements()));\n    return sendOnceAndWaitSent$.pipe(\n    // Resubscribe/retry every 30s after messageSend succeeds with messageSent\n    // Notice first (or any) messageSend can wait for a long time before succeeding, as it\n    // waits for address's user in transport to be online and joined room before actually\n    // sending the message. That's why repeatWhen emits/resubscribe only some time after\n    // sendOnceAndWaitSent$ completes, instead of a plain 'interval'\n    // TODO: configurable retry delay, possibly use an exponential backoff timeout strat\n    repeatWhen(completed$ => completed$.pipe(delay(30e3))), \n    // until transferExpireProcessed OR channelClosed\n    takeUntil(state$.pipe(filter(state => !!state.sent[secrethash].lockExpiredProcessed ||\n        !!state.sent[secrethash].channelClosed))));\n}))));\n/**\n * Process newBlocks, emits transferExpire (request to compose&sign LockExpired for a transfer)\n * if pending transfer's lock expired and transfer didn't unlock (succeed) in time\n * Also, emits transferFailed, to notify users that a transfer has failed (although it'll only be\n * considered as completed with fail once the transferExpireProcessed arrives).\n *\n * @param action$ - Observable of newBlock|transferExpired|transferExpireFailed actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferExpire|transferFailed actions\n */\nexport const transferAutoExpireEpic = (action$, state$) => action$.pipe(filter(isActionOf(newBlock)), withLatestFrom(state$), \n// exhaustMap ignores new blocks while previous request batch is still pending\nexhaustMap(([{ payload: { blockNumber } }, state]) => {\n    const requests$ = [];\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.unlock ||\n            sent.lockExpired ||\n            sent.channelClosed ||\n            sent.transfer[1].lock.expiration.gte(blockNumber))\n            continue;\n        const secrethash = key;\n        // this observable acts like a Promise: emits request once, completes on success/failure\n        const requestAndWait$ = merge(\n        // output once tranferExpire\n        of(transferExpire(undefined, { secrethash })), \n        // but wait until respective success/failure action is seen before completing\n        action$.pipe(filter(a => isActionOf([transferExpired, transferExpireFailed], a) &&\n            a.meta.secrethash === secrethash), take(1), \n        // don't output success/failure action, just wait for first match to complete\n        ignoreElements()));\n        requests$.push(requestAndWait$);\n        // notify users that this transfer failed definitely\n        requests$.push(of(transferFailed(new Error(`transfer expired at block=${sent.transfer[1].lock.expiration.toString()}`), { secrethash })));\n    }\n    // process all requests before completing and restart handling newBlocks (in exhaustMap)\n    return merge(...requests$);\n}));\n/**\n * Re-queue pending transfer's BalanceProof/Envelope messages for retry on init\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferSigned|transferUnlocked actions\n */\nexport const initQueuePendingEnvelopeMessagesEpic = ({}, state$) => state$.pipe(first(), mergeMap(function* (state) {\n    // loop over all pending transfers\n    for (const [key, sent] of Object.entries(state.sent)) {\n        const secrethash = key;\n        // transfer already completed or channelClosed\n        if (sent.unlockProcessed || sent.lockExpiredProcessed || sent.channelClosed)\n            continue;\n        // Processed not received yet for LockedTransfer\n        if (!sent.transferProcessed)\n            yield transferSigned({ message: sent.transfer[1] }, { secrethash });\n        // already unlocked, but Processed not received yet for Unlock\n        if (sent.unlock)\n            yield transferUnlocked({ message: sent.unlock[1] }, { secrethash });\n        // lock expired, but Processed not received yet for LockExpired\n        if (sent.lockExpired)\n            yield transferExpired({ message: sent.lockExpired[1] }, { secrethash });\n    }\n}));\n/**\n * Handles receiving a signed Processed for some sent LockedTransfer\n * This will persist the Processed reply in transfer state and stop message retry\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferProcessed actions\n */\nexport const transferProcessedReceivedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(Processed).is(message))\n        return;\n    let secrethash = undefined;\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.transfer[1].message_identifier.eq(message.message_identifier) &&\n            sent.transfer[1].recipient === action.meta.address) {\n            secrethash = key;\n            break;\n        }\n    }\n    if (!secrethash)\n        return;\n    yield transferProcessed({ message }, { secrethash });\n}));\n/**\n * Handles receiving a signed SecretRequest from target for some sent LockedTransfer\n * Emits a transferSecretRequest action only if all conditions are met\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of output actions for this epic\n */\nexport const transferSecretRequestedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(SecretRequest).is(message))\n        return;\n    // proceed only if we know the secret and the transfer\n    if (!(message.secrethash in state.secrets) || !(message.secrethash in state.sent))\n        return;\n    const transfer = state.sent[message.secrethash].transfer[1];\n    if (transfer.target !== action.meta.address || // reveal only to target\n        transfer.lock.expiration.lte(state.blockNumber) || // don't reveal if expired\n        !transfer.payment_identifier.eq(message.payment_identifier) ||\n        !transfer.lock.amount.eq(message.amount) ||\n        !transfer.lock.expiration.eq(message.expiration)\n    // we don't check if transfer was refunded. If partner refunded the transfer but still\n    // forwarded the payment, they would be in risk of losing their money, not us\n    )\n        return;\n    yield transferSecretRequest({ message }, { secrethash: message.secrethash });\n}));\n/**\n * Handles a transferSecretRequest action to send the respective secret to target\n * It both emits transferSecretReveal (to persist sent SecretReveal in state and indicate that\n * the secret was revealed and thus the transfer should be assumed as succeeded) as well as\n * triggers sending the message once. New SecretRequests will cause a new transferSecretRequest,\n * which will re-send the cached SecretReveal.\n *\n * @param action$ - Observable of transferSecretRequest actions\n * @param state$ - Observable of RaidenStates\n * @param signer - RaidenEpicDeps signer\n * @returns Observable of transferSecretReveal|messageSend actions\n */\nexport const transferSecretRevealEpic = (action$, state$, { signer }) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(filter(isActionOf(transferSecretRequest)), concatMap(action => state$.pipe(first(), mergeMap(state => {\n    const target = state.sent[action.meta.secrethash].transfer[1].target;\n    let reveal$;\n    if (state.sent[action.meta.secrethash].secretReveal)\n        reveal$ = of(state.sent[action.meta.secrethash].secretReveal[1]);\n    else {\n        const message = {\n            type: MessageType.SECRET_REVEAL,\n            message_identifier: makeMessageId(),\n            secret: state.secrets[action.meta.secrethash].secret,\n        };\n        reveal$ = from(signMessage(signer, message));\n    }\n    return reveal$.pipe(mergeMap(function* (message) {\n        yield transferSecretReveal({ message }, action.meta);\n        yield messageSend({ message }, { address: target });\n    }));\n}))))));\n/**\n * Handles receiving a valid SecretReveal from recipient (neighbor/partner)\n * This indicates that the partner knowws the secret, and we should Unlock to avoid going on-chain.\n * The transferUnlock action is a request for the unlocking to be generated and sent.\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of output actions for this epic\n */\nexport const transferSecretRevealedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(SecretReveal).is(message))\n        return;\n    const secrethash = getSecrethash(message.secret);\n    if (!(secrethash in state.sent) ||\n        action.meta.address !== state.sent[secrethash].transfer[1].recipient ||\n        // don't unlock if channel closed\n        state.sent[secrethash].channelClosed ||\n        // don't unlock again if already unlocked, retry handled by transferUnlockedRetryMessageEpic\n        // in the future, we may avoid retry until Processed, and [re]send once per SecretReveal\n        state.sent[secrethash].unlock)\n        return;\n    // transferSecret is noop if we already know the secret (e.g. we're the initiator)\n    yield transferSecret({ secret: message.secret }, { secrethash });\n    // request unlock to be composed, signed & sent to partner\n    yield transferUnlock(undefined, { secrethash });\n}));\n/**\n * Handles receiving a signed Processed for some sent Unlock\n * It sends the success action for transfer (which resolves any pending Promise), marking it as\n * completed successfuly by setting sent.unlockProcessed\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferred|transferUnlockProcessed actions\n */\nexport const transferUnlockProcessedReceivedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(Processed).is(message))\n        return;\n    let secrethash;\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.unlock &&\n            sent.unlock[1].message_identifier.eq(message.message_identifier) &&\n            sent.transfer[1].recipient === action.meta.address) {\n            secrethash = key;\n            break;\n        }\n    }\n    if (!secrethash)\n        return;\n    yield transferred({\n        balanceProof: getBalanceProofFromEnvelopeMessage(state.sent[secrethash].unlock[1]),\n    }, { secrethash });\n    yield transferUnlockProcessed({ message }, { secrethash });\n}));\n/**\n * Handles receiving a signed Processed for some sent LockExpired\n * It marks the end of the unhappy case, by setting sent.lockExpiredProcessed\n * transferFailed was already sent at newBlock handling/transferExpire time\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of output actions for this epic\n */\nexport const transferExpireProcessedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(Processed).is(message))\n        return;\n    let secrethash;\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.lockExpired &&\n            sent.lockExpired[1].message_identifier.eq(message.message_identifier) &&\n            sent.transfer[1].recipient === action.meta.address) {\n            secrethash = key;\n            break;\n        }\n    }\n    if (!secrethash)\n        return;\n    yield transferExpireProcessed({ message }, { secrethash });\n}));\n/**\n * Complete or fail any pending transfer for any closing or closed channels\n * Transfer is considered successful if secret was revealed (as it could be claimed on-chain),\n * else it's considered as failed as couldn't succeed inside expiration timeout\n *\n * @param action$ - Observable of channelClose|channelClosed actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferred|transferFailed actions\n */\nexport const transferChannelClosedEpic = (action$, state$) => action$.pipe(filter(isActionOf([channelClose, channelClosed])), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    for (const [key, sent] of Object.entries(state.sent)) {\n        const secrethash = key, transfer = sent.transfer[1];\n        if (transfer.token_network_address !== action.meta.tokenNetwork ||\n            transfer.recipient !== action.meta.partner)\n            continue;\n        // as we can't know for sure if recipient/partner received the secret or unlock,\n        //consider transfer failed iff neither the secret was revealed nor the unlock happened\n        if (!sent.secretReveal && !sent.unlock)\n            yield transferFailed(new Error(`Channel closed before revealing or unlocking`), {\n                secrethash,\n            });\n        else if (state.sent[secrethash].unlock)\n            yield transferred({\n                balanceProof: getBalanceProofFromEnvelopeMessage(state.sent[secrethash].unlock[1]),\n            }, { secrethash });\n        else\n            yield transferred({}, { secrethash });\n    }\n}));\n/**\n * Receiving RefundTransfer for pending transfer fails it\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferFailed|transferRefunded actions\n */\nexport const transferRefundedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(RefundTransfer).is(message))\n        return;\n    const secrethash = message.lock.secrethash;\n    if (!(secrethash in state.sent))\n        return;\n    const [, transfer] = state.sent[secrethash].transfer;\n    if (message.initiator !== transfer.recipient ||\n        !message.payment_identifier.eq(transfer.payment_identifier) ||\n        !message.lock.amount.eq(transfer.lock.amount) ||\n        !message.lock.expiration.eq(transfer.lock.expiration) ||\n        state.sent[secrethash].unlock || // already unlocked\n        state.sent[secrethash].lockExpired || // already expired\n        state.sent[secrethash].channelClosed || // channel closed\n        message.lock.expiration.lte(state.blockNumber) // lock expired but transfer didn't yet\n    )\n        return;\n    yield transferRefunded({ message }, { secrethash });\n    yield transferFailed(new Error('transfer refunded'), { secrethash });\n}));\n/**\n * Sends Processed for unhandled nonce'd messages\n *\n * We don't yet support receiving nor mediating transfers (LockedTransfer, RefundTransfer), but\n * also don't want the partner to keep retrying any messages intended for us indefinitely.\n * That's why we decided to just answer them with Processed, to clear their queue. Of course, we\n * still don't validate, store state for these messages nor handle them in any way (e.g. requesting\n * secret from initiator), so any transfer is going to expire, and then we also reply Processed for\n * the respective LockExpired.\n * Additionally, we hook in sending Processed for other messages which contain nonces (and require\n * Processed reply to stop being retried) but are safe to be ignored, like WithdrawExpired.\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @param signer - RaidenEpicDeps members\n * @returns Observable of messageSend actions\n */\nexport const transferReceivedReplyProcessedEpic = (action$, {}, { signer }) => {\n    const cache = new LruCache(32);\n    return action$.pipe(filter(isActionOf(messageReceived)), concatMap(action => {\n        const message = action.payload.message;\n        if (!message ||\n            !(Signed(LockedTransfer).is(message) ||\n                Signed(RefundTransfer).is(message) ||\n                Signed(LockExpired).is(message) ||\n                Signed(WithdrawExpired).is(message)))\n            return EMPTY;\n        const msgId = message.message_identifier, key = msgId.toString();\n        const cached = cache.get(key);\n        if (cached)\n            return of(messageSend({ message: cached }, action.meta));\n        const processed = {\n            type: MessageType.PROCESSED,\n            message_identifier: msgId,\n        };\n        return from(signMessage(signer, processed)).pipe(tap(signed => cache.put(key, signed)), map(signed => messageSend({ message: signed }, action.meta)));\n    }));\n};\n/**\n * When receiving a [[WithdrawRequest]] message, create the respective [[withdrawReceiveRequest]]\n * action\n *\n * @param action$ - Observable of messageReceived actions\n * @returns Observable of withdrawReceiveRequest actions\n */\nexport const withdrawRequestReceivedEpic = (action$) => action$.pipe(filter(isActionOf(messageReceived)), mergeMap(function* (action) {\n    const message = action.payload.message;\n    if (!message ||\n        !Signed(WithdrawRequest).is(message) ||\n        message.participant !== action.meta.address)\n        return;\n    yield withdrawReceiveRequest({ message }, {\n        tokenNetwork: message.token_network_address,\n        partner: message.participant,\n        totalWithdraw: message.total_withdraw,\n        expiration: message.expiration.toNumber(),\n    });\n}));\n/**\n * sendMessage when a [[withdrawSendConfirmation]] action is fired\n *\n * @param action$ - Observable of withdrawSendConfirmation actions\n * @returns Observable of messageSend actions\n */\nexport const withdrawSendConfirmationEpic = (action$) => action$.pipe(filter(isActionOf(withdrawSendConfirmation)), map(action => messageSend({ message: action.payload.message }, { address: action.meta.partner })));\n//# sourceMappingURL=epics.js.map","import { from, of } from 'rxjs';\nimport { catchError, filter, mergeMap, takeWhile, takeUntil } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { negate } from 'lodash';\nimport { raidenShutdown } from './actions';\nimport * as ChannelsEpics from './channels/epics';\nimport * as TransportEpics from './transport/epics';\nimport * as TransfersEpics from './transfers/epics';\nexport const RaidenEpics = Object.assign({}, ChannelsEpics, TransportEpics, TransfersEpics);\nexport const raidenRootEpic = (action$, state$, deps) => {\n    const shutdownNotification = action$.pipe(filter(isActionOf(raidenShutdown))), limitedAction$ = action$.pipe(takeWhile(negate(isActionOf(raidenShutdown)), true)), limitedState$ = state$.pipe(takeUntil(shutdownNotification));\n    // wire state$ & action$ to output subjects, to expose them to Raiden public class\n    limitedState$.subscribe(deps.stateOutput$);\n    limitedAction$.subscribe(deps.actionOutput$);\n    // like combineEpics, but completes action$, state$ & output$ when a raidenShutdown goes through\n    return from(Object.values(RaidenEpics)).pipe(mergeMap(epic => epic(limitedAction$, limitedState$, deps)), catchError(err => of(raidenShutdown({ reason: err }))), takeUntil(shutdownNotification));\n};\n//# sourceMappingURL=epics.js.map","import * as t from 'io-ts';\n/**\n * A Raiden configuration object with required parameters and\n * optional parameters from [[PartialRaidenConfig]].\n *\n * - matrixServerLookup - Matrix server URL to fetch existing matrix servers from.\n *      After intializing a [[Raiden]] instance, the matrix server can't be changed later on.\n * - revealTimeout - Timeout for secrets to be revealed\n * - settleTimeout - Timeout for channels to be settled\n * - matrixServer - Specify a matrix server to use.\n */\nexport const RaidenConfig = t.readonly(t.intersection([\n    t.type({\n        matrixServerLookup: t.string,\n        revealTimeout: t.number,\n        settleTimeout: t.number,\n    }),\n    t.partial({\n        matrixServer: t.string,\n    }),\n]));\nexport const defaultConfig = {\n    matrixServerLookup: 'https://raw.githubusercontent.com/raiden-network/raiden-transport/master/known_servers.test.yaml',\n    settleTimeout: 500,\n    revealTimeout: 50,\n};\n//# sourceMappingURL=config.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer, Contract } from 'ethers';\nimport { Wallet } from 'ethers/wallet';\nimport { Web3Provider, JsonRpcProvider } from 'ethers/providers';\nimport { bigNumberify } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { isActionOf } from 'typesafe-actions';\nimport { createLogger } from 'redux-logger';\nimport { debounce, findKey, transform, constant, memoize, pick, isEmpty } from 'lodash';\nimport { Subject, BehaviorSubject, AsyncSubject, from } from 'rxjs';\nimport { first, filter, map, distinctUntilChanged, scan, concatMap } from 'rxjs/operators';\nimport TokenNetworkRegistryAbi from './abi/TokenNetworkRegistry.json';\nimport TokenNetworkAbi from './abi/TokenNetwork.json';\nimport HumanStandardTokenAbi from './abi/HumanStandardToken.json';\nimport ropstenDeploy from './deployment/deployment_ropsten.json';\nimport rinkebyDeploy from './deployment/deployment_rinkeby.json';\nimport kovanDeploy from './deployment/deployment_kovan.json';\nimport goerliDeploy from './deployment/deployment_goerli.json';\nimport { ShutdownReason } from './constants';\nimport { Address, PrivateKey, Secret, Hash, UInt } from './utils/types';\nimport { RaidenState, initialState, encodeRaidenState, decodeRaidenState } from './state';\nimport { raidenReducer } from './reducer';\nimport { raidenRootEpic } from './epics';\nimport { RaidenEvents, raidenShutdown } from './actions';\nimport { channelOpened, channelOpenFailed, channelOpen, channelDeposited, channelDepositFailed, channelDeposit, channelClosed, channelCloseFailed, channelClose, channelSettled, channelSettleFailed, channelSettle, } from './channels/actions';\nimport { matrixPresenceUpdate, matrixRequestMonitorPresenceFailed, matrixRequestMonitorPresence, } from './transport/actions';\nimport { transfer, transferFailed, transferSigned } from './transfers/actions';\nimport { makeSecret, raidenSentTransfer, getSecrethash } from './transfers/utils';\nimport { patchSignSend } from './utils/ethers';\nimport { defaultConfig } from './config';\nexport class Raiden {\n    constructor(provider, network, signer, contractsInfo, state, config) {\n        this.resolveName = provider.resolveName.bind(provider);\n        const address = state.address;\n        // use next from latest known blockNumber as start block when polling\n        provider.resetEventsBlock(state.blockNumber + 1);\n        const state$ = new BehaviorSubject(state);\n        this.state$ = state$;\n        const action$ = new Subject();\n        this.action$ = action$;\n        this.channels$ = state$.pipe(map(state => transform(\n        // transform state.channels to token-partner-raidenChannel map\n        state.channels, (result, partner2channel, tokenNetwork) => {\n            const token = findKey(state.tokens, tn => tn === tokenNetwork);\n            if (!token)\n                return; // shouldn't happen, token mapping is always bi-directional\n            result[token] = transform(\n            // transform Channel to RaidenChannel, with more info\n            partner2channel, (partner2raidenChannel, channel, partner) => {\n                const partnerTotal = channel.partner.balanceProof\n                    ? channel.partner.balanceProof.transferredAmount.add(channel.partner.balanceProof.lockedAmount)\n                    : Zero, ownTotal = channel.own.balanceProof\n                    ? channel.own.balanceProof.transferredAmount.add(channel.own.balanceProof.lockedAmount)\n                    : Zero, balance = partnerTotal.sub(ownTotal);\n                partner2raidenChannel[partner] = Object.assign({ state: channel.state }, pick(channel, ['id', 'settleTimeout', 'openBlock', 'closeBlock']), { token, tokenNetwork: tokenNetwork, partner: partner, ownDeposit: channel.own.deposit, partnerDeposit: channel.partner.deposit, balance, capacity: channel.own.deposit.add(balance) });\n            });\n        })));\n        this.transfers$ = state$.pipe(map(state => state.sent), distinctUntilChanged(), concatMap(sent => from(Object.entries(sent))), \n        /* this scan stores a reference to each [key,value] in 'acc', and emit as 'changed' iff it\n         * changes from last time seen. It relies on value references changing only if needed */\n        scan(({ acc }, [secrethash, sent]) => {\n            // if ref didn't change, emit previous accumulator, without 'changed' value\n            if (acc[secrethash] === sent)\n                return { acc };\n            // else, update ref in 'acc' and emit value in 'changed' prop\n            else\n                return { acc: Object.assign({}, acc, { [secrethash]: sent }), changed: sent };\n        }, { acc: {} }), filter(({ changed }) => !!changed), // filter out if reference didn't change from last emit\n        map(({ changed }) => changed), // get the changed object only\n        // from here, we get SentTransfer objects which changed from previous state (all on first)\n        map(raidenSentTransfer));\n        this.events$ = action$.pipe(filter(isActionOf(Object.values(RaidenEvents))));\n        this.getTokenInfo = memoize((token) => __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token))\n                throw new Error('Invalid address');\n            if (!(token in this.state.tokens))\n                throw new Error(`token \"${token}\" not monitored`);\n            const tokenContract = this.deps.getTokenContract(token);\n            const [totalSupply, decimals, name, symbol] = yield Promise.all([\n                tokenContract.functions.totalSupply(),\n                tokenContract.functions.decimals(),\n                tokenContract.functions.name().catch(constant(undefined)),\n                tokenContract.functions.symbol().catch(constant(undefined)),\n            ]);\n            return { totalSupply, decimals, name, symbol };\n        }));\n        const middlewares = [];\n        if (process.env.NODE_ENV === 'development') {\n            middlewares.push(createLogger({ level: 'debug' }));\n        }\n        this.deps = {\n            stateOutput$: state$,\n            actionOutput$: action$,\n            config$: new BehaviorSubject(config),\n            matrix$: new AsyncSubject(),\n            provider,\n            network,\n            signer,\n            address,\n            contractsInfo,\n            registryContract: new Contract(contractsInfo.TokenNetworkRegistry.address, TokenNetworkRegistryAbi, signer),\n            getTokenNetworkContract: memoize((address) => new Contract(address, TokenNetworkAbi, signer)),\n            getTokenContract: memoize((address) => new Contract(address, HumanStandardTokenAbi, signer)),\n        };\n        // minimum blockNumber of contracts deployment as start scan block\n        const epicMiddleware = createEpicMiddleware({ dependencies: this.deps });\n        this.store = createStore(raidenReducer, state, applyMiddleware(...middlewares, epicMiddleware));\n        epicMiddleware.run(raidenRootEpic);\n    }\n    /**\n     * Async helper factory to make a Raiden instance from more common parameters.\n     *\n     * An async factory is needed so we can do the needed async requests to construct the required\n     * parameters ahead of construction time, and avoid partial initialization then\n     *\n     * @param connection - A URL or provider to connect to, one of:\n     *     <ul>\n     *       <li>JsonRpcProvider instance,</li>\n     *       <li>a Metamask's web3.currentProvider object or,</li>\n     *       <li>a hostname or remote json-rpc connection string</li>\n     *     </ul>\n     * @param account - An account to use as main account, one of:\n     *     <ul>\n     *       <li>Signer instance (e.g. Wallet) loadded with account/private key or</li>\n     *       <li>hex-encoded string address of a remote account in provider or</li>\n     *       <li>hex-encoded string local private key or</li>\n     *       <li>number index of a remote account loaded in provider\n     *            (e.g. 0 for Metamask's loaded account)</li>\n     *     </ul>\n     * @param storageOrState - Storage/localStorage-like synchronous object where to load and store\n     *     current state or initial RaidenState-like object instead. In this case, user must listen\n     *     state$ changes and update them on whichever persistency option is used\n     * @param contracts - Contracts deployment info\n     * @param config - Raiden configuration\n     * @returns Promise to Raiden SDK client instance\n     **/\n    static create(connection, account, storageOrState, contracts, config) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let provider;\n            if (typeof connection === 'string') {\n                provider = new JsonRpcProvider(connection);\n            }\n            else if (connection instanceof JsonRpcProvider) {\n                provider = connection;\n            }\n            else {\n                provider = new Web3Provider(connection);\n            }\n            // Patch provider's sign method (https://github.com/raiden-network/light-client/issues/223)\n            patchSignSend(provider);\n            const network = yield provider.getNetwork();\n            // if no ContractsInfo, try to populate from defaults\n            if (!contracts) {\n                switch (network.name) {\n                    case 'rinkeby':\n                        contracts = rinkebyDeploy.contracts;\n                        break;\n                    case 'ropsten':\n                        contracts = ropstenDeploy.contracts;\n                        break;\n                    case 'kovan':\n                        contracts = kovanDeploy.contracts;\n                        break;\n                    case 'goerli':\n                        contracts = goerliDeploy.contracts;\n                        break;\n                    default:\n                        throw new Error(`No deploy info provided nor recognized network: ${JSON.stringify(network)}`);\n                }\n            }\n            let signer;\n            if (Signer.isSigner(account)) {\n                if (account.provider === provider)\n                    signer = account;\n                else if (account instanceof Wallet)\n                    signer = account.connect(provider);\n                else\n                    throw new Error(`Signer ${account} not connected to ${provider}`);\n            }\n            else if (typeof account === 'number') {\n                // index of account in provider\n                signer = provider.getSigner(account);\n            }\n            else if (Address.is(account)) {\n                // address\n                const accounts = yield provider.listAccounts();\n                if (!accounts.includes(account))\n                    throw new Error(`Account \"${account}\" not found in provider, got=${accounts}`);\n                signer = provider.getSigner(account);\n            }\n            else if (PrivateKey.is(account)) {\n                // private key\n                signer = new Wallet(account, provider);\n            }\n            else {\n                throw new Error('String account must be either a 0x-encoded address or private key');\n            }\n            const address = (yield signer.getAddress());\n            // use TokenNetworkRegistry deployment block as initial blockNumber, or 0\n            let loadedState = Object.assign({}, initialState, { blockNumber: contracts.TokenNetworkRegistry.block_number || 0, address, chainId: network.chainId, registry: contracts.TokenNetworkRegistry.address });\n            // type guard\n            function isStorage(storageOrState) {\n                return storageOrState && typeof storageOrState.getItem === 'function';\n            }\n            let onState = undefined, onStateComplete = undefined;\n            if (storageOrState && isStorage(storageOrState)) {\n                const ns = `raiden_${network.name || network.chainId}_${contracts.TokenNetworkRegistry.address}_${address}`;\n                const loaded = Object.assign({}, loadedState, JSON.parse((yield storageOrState.getItem(ns)) || 'null'));\n                loadedState = decodeRaidenState(loaded);\n                // to be subscribed on raiden.state$\n                const debouncedState = debounce((state) => {\n                    storageOrState.setItem(ns, encodeRaidenState(state));\n                }, 1000, { maxWait: 5000 });\n                onState = debouncedState;\n                onStateComplete = () => debouncedState.flush();\n            }\n            else if (storageOrState && RaidenState.is(storageOrState)) {\n                loadedState = storageOrState;\n            }\n            else if (storageOrState /* typeof storageOrState === unknown */) {\n                loadedState = decodeRaidenState(storageOrState);\n            }\n            if (address !== loadedState.address)\n                throw new Error(`Mismatch between provided account and loaded state: \"${address}\" !== \"${loadedState.address}\"`);\n            if (network.chainId !== loadedState.chainId ||\n                contracts.TokenNetworkRegistry.address !== loadedState.registry)\n                throw new Error(`Mismatch between network or registry address and loaded state`);\n            const raidenConfig = Object.assign({}, defaultConfig, config);\n            const raiden = new Raiden(provider, network, signer, contracts, loadedState, raidenConfig);\n            if (onState)\n                raiden.state$.subscribe(onState, onStateComplete, onStateComplete);\n            return raiden;\n        });\n    }\n    /**\n     * Triggers all epics to be unsubscribed\n     */\n    stop() {\n        this.store.dispatch(raidenShutdown({ reason: ShutdownReason.STOP }));\n    }\n    get state() {\n        return this.store.getState();\n    }\n    get address() {\n        return this.deps.address;\n    }\n    get network() {\n        return this.deps.network;\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.deps.provider.blockNumber || (yield this.deps.provider.getBlockNumber());\n        });\n    }\n    config(newConfig) {\n        this.deps.config$.pipe(first()).subscribe((currentConfig) => this.deps.config$.next(Object.assign({}, currentConfig, newConfig)));\n    }\n    /**\n     * Get ETH balance for given address or self\n     *\n     * @param address - Optional target address. If omitted, gets own balance\n     * @returns BigNumber of ETH balance\n     */\n    getBalance(address) {\n        address = address || this.address;\n        if (!Address.is(address))\n            throw new Error('Invalid address');\n        return this.deps.provider.getBalance(address);\n    }\n    /**\n     * Get token balance and token decimals for given address or self\n     *\n     * @param token - Token address to fetch balance. Must be one of the monitored tokens.\n     * @param address - Optional target address. If omitted, gets own balance\n     * @returns BigNumber containing address's token balance\n     */\n    getTokenBalance(token, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = address || this.address;\n            if (!Address.is(address) || !Address.is(token))\n                throw new Error('Invalid address');\n            if (!(token in this.state.tokens))\n                throw new Error(`token \"${token}\" not monitored`);\n            const tokenContract = this.deps.getTokenContract(token);\n            return tokenContract.functions.balanceOf(address);\n        });\n    }\n    /**\n     * Returns a list of all token addresses registered as token networks in registry\n     *\n     * @returns Promise to list of token addresses\n     */\n    getTokenList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // here we assume there'll be at least one token registered on a registry\n            // so, if the list is empty (e.g. on first init), raidenInitializationEpic is still fetching\n            // the TokenNetworkCreated events from registry, so we wait until some token is found\n            return this.state$\n                .pipe(first(state => !isEmpty(state.tokens)), map(state => Object.keys(state.tokens)))\n                .toPromise();\n        });\n    }\n    /**\n     * Open a channel on the tokenNetwork for given token address with partner\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param partner - Partner address\n     * @param options - (optional) option parameter\n     * @param options.settleTimeout - Custom, one-time settle timeout\n     * @returns txHash of channelOpen call, iff it succeeded\n     */\n    openChannel(token, partner, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelOpened, channelOpenFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelOpenFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelOpen(Object.assign({}, options), { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Deposit tokens on channel between us and partner on tokenNetwork for token\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param partner - Partner address\n     * @param deposit - Number of tokens to deposit on channel\n     * @returns txHash of setTotalDeposit call, iff it succeeded\n     */\n    depositChannel(token, partner, deposit) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            deposit = bigNumberify(deposit);\n            if (!UInt(32).is(deposit))\n                throw new Error('invalid deposit: must be 0 < amount < 2^256');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelDeposited, channelDepositFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelDepositFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelDeposit({ deposit }, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Close channel between us and partner on tokenNetwork for token\n     * This method will fail if called on a channel not in 'opened' or 'closing' state.\n     * When calling this method on an 'opened' channel, its state becomes 'closing', and from there\n     * on, no payments can be performed on the channel. If for any reason the closeChannel\n     * transaction fails, channel's state stays as 'closing', and this method can be called again\n     * to retry sending 'closeChannel' transaction. After it's successful, channel becomes 'closed',\n     * and can be settled after 'settleTimeout' blocks (when it then becomes 'settleable').\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param partner - Partner address\n     * @returns txHash of closeChannel call, iff it succeeded\n     */\n    closeChannel(token, partner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelClosed, channelCloseFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelCloseFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelClose(undefined, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Settle channel between us and partner on tokenNetwork for token\n     * This method will fail if called on a channel not in 'settleable' or 'settling' state.\n     * Channel becomes 'settleable' settleTimeout blocks after closed (detected automatically\n     * while Raiden Light Client is running or later on restart). When calling it, channel state\n     * becomes 'settling'. If for any reason transaction fails, it'll stay on this state, and this\n     * method can be called again to re-send a settleChannel transaction.\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param partner - Partner address\n     * @returns txHash of settleChannel call, iff it succeeded\n     */\n    settleChannel(token, partner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            // wait for the corresponding success or error action\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelSettled, channelSettleFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelSettleFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelSettle(undefined, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Returns object describing address's users availability on transport\n     * After calling this method, any further presence update to valid transport peers of this\n     * address will trigger a corresponding MatrixPresenceUpdateAction on events$\n     *\n     * @param address - checksummed address to be monitored\n     * @returns Promise to object describing availability and last event timestamp\n     */\n    getAvailability(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(address))\n                throw new Error('Invalid address');\n            const promise = this.action$\n                .pipe(filter(isActionOf([matrixPresenceUpdate, matrixRequestMonitorPresenceFailed])), filter(action => action.meta.address === address), first(), map(action => {\n                if (isActionOf(matrixRequestMonitorPresenceFailed, action))\n                    throw action.payload;\n                return action.payload;\n            }))\n                .toPromise();\n            this.store.dispatch(matrixRequestMonitorPresence(undefined, { address }));\n            return promise;\n        });\n    }\n    /**\n     * Send a Locked Transfer!\n     * This will reject if LockedTransfer signature prompt is canceled/signature fails, or be\n     * resolved to the transfer unique identifier (secrethash) otherwise, and transfer status can be\n     * queried with this id on this.transfers$ observable, which will just have emitted the 'pending'\n     * transfer. Any following transfer state change will be notified through this observable.\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param target - Target address (must be getAvailability before)\n     * @param amount - Amount to try to transfer\n     * @param options - Optional parameters for transfer:\n     *                - paymentId  payment identifier, a random one will be generated if missing\n     *                - secret  Secret to register, a random one will be generated if missing\n     *                - secrethash  Must match secret, if both provided, or else, secret must be\n     *                              informed to target by other means, and reveal can't be performed\n     * @returns A promise to transfer's secrethash (unique id) when it's accepted\n     */\n    transfer(token, target, amount, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(target))\n                throw new Error('Invalid address');\n            const tokenNetwork = this.state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            amount = bigNumberify(amount);\n            if (!UInt(32).is(amount))\n                throw new Error('Invalid amount');\n            const paymentId = !options.paymentId ? undefined : bigNumberify(options.paymentId);\n            if (paymentId && !UInt(8).is(paymentId))\n                throw new Error('Invalid opts.paymentId');\n            if (options.secret !== undefined && !Secret.is(options.secret))\n                throw new Error('Invalid opts.secret');\n            if (options.secrethash !== undefined && !Hash.is(options.secrethash))\n                throw new Error('Invalid opts.secrethash');\n            let { secret, secrethash } = options;\n            if (!secrethash) {\n                if (!secret)\n                    secret = makeSecret();\n                secrethash = getSecrethash(secret);\n            }\n            else if (secret && getSecrethash(secret) !== secrethash) {\n                throw new Error('Secret and secrethash must match if passing both');\n            }\n            const promise = this.action$\n                .pipe(filter(isActionOf([transferSigned, transferFailed])), first(action => action.meta.secrethash === secrethash), map(action => {\n                if (isActionOf(transferFailed, action))\n                    throw action.payload;\n                return secrethash;\n            }))\n                .toPromise();\n            this.store.dispatch(transfer({ tokenNetwork, target, amount, paymentId, secret }, { secrethash }));\n            return promise;\n        });\n    }\n}\nexport default Raiden;\n//# sourceMappingURL=raiden.js.map","/* istanbul ignore file */\nexport { RaidenState } from './state';\nexport { ShutdownReason } from './constants';\nexport { RaidenSentTransferStatus } from './transfers/state';\nexport { ChannelState } from './channels/state';\nexport { Raiden } from './raiden';\nexport { RaidenConfig } from './config';\nexport * from './utils/types';\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}